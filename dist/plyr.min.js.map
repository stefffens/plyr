{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/arrays.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/utils/i18n.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","keyboardEvent","KeyboardEvent","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","concat","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","_this","this","toggle","arguments","undefined","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","_slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","removeAttribute","toggleClass","force","map","method","classList","contains","hasClass","matches","querySelectorAll","includes","getElements","container","getElement","querySelector","setFocus","tabFocus","focus","config","classNames","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","repaint","setTimeout","offsetHeight","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","mediaType","isHTML5","media","canPlayType","err","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","extend","player","set","_player$media","currentTime","paused","preload","readyState","src","play","load","quality","storage","cancelRequests","blankVideo","debug","log","dedupe","item","indexOf","getDeep","path","reduce","obj","target","sources","shift","_defineProperty","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","resources","vimeo","youtube","i18n","{seektime}","seekTime","{title}","title","_ref2","Storage","_classCallCheck","enabled","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","hasId","exists","getElementById","update","data","body","insertAdjacentElement","useStorage","cached","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","props","label","labelPressed","iconPressed","control","button","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","bindMenuItemShortcuts","menuItem","which","preventDefault","stopPropagation","isRadioButton","showMenuPanel","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","focusFirstMenuItem","createMenuItem","_this2","list","_ref$badge","_ref$checked","checked","aria-checked","flex","enumerable","children","node","listeners","bind","currentTrack","speed","parseFloat","updateTimeDisplay","updateVolume","setRange","muted","pressed","updateProgress","_this3","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this4","tooltips","clientRect","getBoundingClientRect","visible","width","pageX","left","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleMenuButton","setting","updateSetting","pane","panels","default","getLabel","setQualityMenu","_this5","checkMenu","sort","a","b","sorting","getBadge","setCaptionsMenu","_this6","tracks","getTracks","toggled","language","unshift","setSpeedMenu","_this7","isVimeo","values","some","popup","firstItem","toggleMenu","show","isMenuItem","getMenuSize","tab","clone","position","opacity","scrollWidth","height","scrollHeight","_this8","size","restore","propertyName","setDownloadLink","download","create","_this9","aria-haspopup","aria-controls","aria-expanded","inner","home","backButton","href","urls","isEmbed","inject","_this10","floor","random","seektime","addProperty","controlPressed","_this$config","labels","parseUrl","parser","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","trackEvents","_this$captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","_toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","focused","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","sdk","iframe","googleIMA","editable","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","google","publisherId","providers","types","noop","Console","console","prototype","onChange","first","last","keyCode","activeElement","shiftKey","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","viewport","head","property","hasProperty","cleanupViewport","part","Fullscreen","prefix","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","build","checkPlaying","ready","setTitle","setPoster","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","recentTouchSeek","lastSeekTime","Date","now","Listeners","lastKey","focusTimer","lastKeyDown","handleKey","setTabFocus","firstTouch","code","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","timeStamp","wasKeyDown","delay","hasAudio","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","proxy","inputEvent","rect","currentTarget","hasAttribute","done","seekTo","webkitDirectionInvertedFromDevice","_map2","deltaX","deltaY","direction","sign","abs","module","exports","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","factory","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","name","currentSrc","setLoop","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","playerVars","hl","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","destroy","_this11","handlers","_this12","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","_sources$","_sources$$provider","tagName","crossorigin","Plyr","failed","jQuery","original","getProviderByUrl","search","truthy","searchParams","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","states","webkitPresentationMode","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\r\n// Type checking utils\r\n// ==========================================================================\r\n\r\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\r\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\r\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\r\nconst isObject = input => getConstructor(input) === Object;\r\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\r\nconst isString = input => getConstructor(input) === String;\r\nconst isBoolean = input => getConstructor(input) === Boolean;\r\nconst isFunction = input => getConstructor(input) === Function;\r\nconst isArray = input => Array.isArray(input);\r\nconst isWeakMap = input => instanceOf(input, WeakMap);\r\nconst isNodeList = input => instanceOf(input, NodeList);\r\nconst isElement = input => instanceOf(input, Element);\r\nconst isTextNode = input => getConstructor(input) === Text;\r\nconst isEvent = input => instanceOf(input, Event);\r\nconst isKeyboardEvent = input => instanceOf(input, KeyboardEvent);\r\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\r\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\r\n\r\nconst isEmpty = input =>\r\n    isNullOrUndefined(input) ||\r\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\r\n    (isObject(input) && !Object.keys(input).length);\r\n\r\nconst isUrl = input => {\r\n    // Accept a URL object\r\n    if (instanceOf(input, window.URL)) {\r\n        return true;\r\n    }\r\n\r\n    // Must be string from here\r\n    if (!isString(input)) {\r\n        return false;\r\n    }\r\n\r\n    // Add the protocol if required\r\n    let string = input;\r\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\r\n        string = `http://${input}`;\r\n    }\r\n\r\n    try {\r\n        return !isEmpty(new URL(string).hostname);\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default {\r\n    nullOrUndefined: isNullOrUndefined,\r\n    object: isObject,\r\n    number: isNumber,\r\n    string: isString,\r\n    boolean: isBoolean,\r\n    function: isFunction,\r\n    array: isArray,\r\n    weakMap: isWeakMap,\r\n    nodeList: isNodeList,\r\n    element: isElement,\r\n    textNode: isTextNode,\r\n    event: isEvent,\r\n    keyboardEvent: isKeyboardEvent,\r\n    cue: isCue,\r\n    track: isTrack,\r\n    url: isUrl,\r\n    empty: isEmpty,\r\n};\r\n","// ==========================================================================\r\n// Event utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n// Check for passive event listener support\r\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n// https://www.youtube.com/watch?v=NPM6172J22g\r\nconst supportsPassiveListeners = (() => {\r\n    // Test via a getter in the options object to see if the passive property is accessed\r\n    let supported = false;\r\n    try {\r\n        const options = Object.defineProperty({}, 'passive', {\r\n            get() {\r\n                supported = true;\r\n                return null;\r\n            },\r\n        });\r\n        window.addEventListener('test', null, options);\r\n        window.removeEventListener('test', null, options);\r\n    } catch (e) {\r\n        // Do nothing\r\n    }\r\n\r\n    return supported;\r\n})();\r\n\r\n// Toggle event listener\r\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\r\n    // Bail if no element, event, or callback\r\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\r\n        return;\r\n    }\r\n\r\n    // Allow multiple events\r\n    const events = event.split(' ');\r\n\r\n    // Build options\r\n    // Default to just the capture boolean for browsers with no passive listener support\r\n    let options = capture;\r\n\r\n    // If passive events listeners are supported\r\n    if (supportsPassiveListeners) {\r\n        options = {\r\n            // Whether the listener can be passive (i.e. default never prevented)\r\n            passive,\r\n            // Whether the listener is a capturing listener or not\r\n            capture,\r\n        };\r\n    }\r\n\r\n    // If a single node is passed, bind the event listener\r\n    events.forEach(type => {\r\n        if (this && this.eventListeners && toggle) {\r\n            // Cache event listener\r\n            this.eventListeners.push({ element, type, callback, options });\r\n        }\r\n\r\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\r\n    });\r\n}\r\n\r\n// Bind event handler\r\nexport function on(element, events = '', callback, passive = true, capture = false) {\r\n    toggleListener.call(this, element, events, callback, true, passive, capture);\r\n}\r\n\r\n// Unbind event handler\r\nexport function off(element, events = '', callback, passive = true, capture = false) {\r\n    toggleListener.call(this, element, events, callback, false, passive, capture);\r\n}\r\n\r\n// Bind once-only event handler\r\nexport function once(element, events = '', callback, passive = true, capture = false) {\r\n    function onceCallback(...args) {\r\n        off(element, events, onceCallback, passive, capture);\r\n        callback.apply(this, args);\r\n    }\r\n\r\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\r\n}\r\n\r\n// Trigger event\r\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\r\n    // Bail if no element\r\n    if (!is.element(element) || is.empty(type)) {\r\n        return;\r\n    }\r\n\r\n    // Create and dispatch the event\r\n    const event = new CustomEvent(type, {\r\n        bubbles,\r\n        detail: Object.assign({}, detail, {\r\n            plyr: this,\r\n        }),\r\n    });\r\n\r\n    // Dispatch the event\r\n    element.dispatchEvent(event);\r\n}\r\n\r\n// Unbind all cached event listeners\r\nexport function unbindListeners() {\r\n    if (this && this.eventListeners) {\r\n        this.eventListeners.forEach(item => {\r\n            const { element, type, callback, options } = item;\r\n            element.removeEventListener(type, callback, options);\r\n        });\r\n\r\n        this.eventListeners = [];\r\n    }\r\n}\r\n\r\n// Run method when / if player is ready\r\nexport function ready() {\r\n    return new Promise(\r\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\r\n    ).then(() => {});\r\n}\r\n","// ==========================================================================\r\n// Element utils\r\n// ==========================================================================\r\n\r\nimport { toggleListener } from './events';\r\nimport is from './is';\r\n\r\n// Wrap an element\r\nexport function wrap(elements, wrapper) {\r\n    // Convert `elements` to an array, if necessary.\r\n    const targets = elements.length ? elements : [elements];\r\n\r\n    // Loops backwards to prevent having to clone the wrapper on the\r\n    // first element (see `child` below).\r\n    Array.from(targets)\r\n        .reverse()\r\n        .forEach((element, index) => {\r\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\r\n\r\n            // Cache the current parent and sibling.\r\n            const parent = element.parentNode;\r\n            const sibling = element.nextSibling;\r\n\r\n            // Wrap the element (is automatically removed from its current\r\n            // parent).\r\n            child.appendChild(element);\r\n\r\n            // If the element had a sibling, insert the wrapper before\r\n            // the sibling to maintain the HTML structure; otherwise, just\r\n            // append it to the parent.\r\n            if (sibling) {\r\n                parent.insertBefore(child, sibling);\r\n            } else {\r\n                parent.appendChild(child);\r\n            }\r\n        });\r\n}\r\n\r\n// Set attributes\r\nexport function setAttributes(element, attributes) {\r\n    if (!is.element(element) || is.empty(attributes)) {\r\n        return;\r\n    }\r\n\r\n    // Assume null and undefined attributes should be left out,\r\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\r\n    Object.entries(attributes)\r\n        .filter(([, value]) => !is.nullOrUndefined(value))\r\n        .forEach(([key, value]) => element.setAttribute(key, value));\r\n}\r\n\r\n// Create a DocumentFragment\r\nexport function createElement(type, attributes, text) {\r\n    // Create a new <element>\r\n    const element = document.createElement(type);\r\n\r\n    // Set all passed attributes\r\n    if (is.object(attributes)) {\r\n        setAttributes(element, attributes);\r\n    }\r\n\r\n    // Add text node\r\n    if (is.string(text)) {\r\n        element.innerText = text;\r\n    }\r\n\r\n    // Return built element\r\n    return element;\r\n}\r\n\r\n// Inaert an element after another\r\nexport function insertAfter(element, target) {\r\n    if (!is.element(element) || !is.element(target)) {\r\n        return;\r\n    }\r\n\r\n    target.parentNode.insertBefore(element, target.nextSibling);\r\n}\r\n\r\n// Insert a DocumentFragment\r\nexport function insertElement(type, parent, attributes, text) {\r\n    if (!is.element(parent)) {\r\n        return;\r\n    }\r\n\r\n    parent.appendChild(createElement(type, attributes, text));\r\n}\r\n\r\n// Remove element(s)\r\nexport function removeElement(element) {\r\n    if (is.nodeList(element) || is.array(element)) {\r\n        Array.from(element).forEach(removeElement);\r\n        return;\r\n    }\r\n\r\n    if (!is.element(element) || !is.element(element.parentNode)) {\r\n        return;\r\n    }\r\n\r\n    element.parentNode.removeChild(element);\r\n}\r\n\r\n// Remove all child elements\r\nexport function emptyElement(element) {\r\n    if (!is.element(element)) {\r\n        return;\r\n    }\r\n\r\n    let { length } = element.childNodes;\r\n\r\n    while (length > 0) {\r\n        element.removeChild(element.lastChild);\r\n        length -= 1;\r\n    }\r\n}\r\n\r\n// Replace element\r\nexport function replaceElement(newChild, oldChild) {\r\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\r\n        return null;\r\n    }\r\n\r\n    oldChild.parentNode.replaceChild(newChild, oldChild);\r\n\r\n    return newChild;\r\n}\r\n\r\n// Get an attribute object from a string selector\r\nexport function getAttributesFromSelector(sel, existingAttributes) {\r\n    // For example:\r\n    // '.test' to { class: 'test' }\r\n    // '#test' to { id: 'test' }\r\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\r\n\r\n    if (!is.string(sel) || is.empty(sel)) {\r\n        return {};\r\n    }\r\n\r\n    const attributes = {};\r\n    const existing = existingAttributes;\r\n\r\n    sel.split(',').forEach(s => {\r\n        // Remove whitespace\r\n        const selector = s.trim();\r\n        const className = selector.replace('.', '');\r\n        const stripped = selector.replace(/[[\\]]/g, '');\r\n\r\n        // Get the parts and value\r\n        const parts = stripped.split('=');\r\n        const key = parts[0];\r\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\r\n\r\n        // Get the first character\r\n        const start = selector.charAt(0);\r\n\r\n        switch (start) {\r\n            case '.':\r\n                // Add to existing classname\r\n                if (is.object(existing) && is.string(existing.class)) {\r\n                    existing.class += ` ${className}`;\r\n                }\r\n\r\n                attributes.class = className;\r\n                break;\r\n\r\n            case '#':\r\n                // ID selector\r\n                attributes.id = selector.replace('#', '');\r\n                break;\r\n\r\n            case '[':\r\n                // Attribute selector\r\n                attributes[key] = value;\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n\r\n    return attributes;\r\n}\r\n\r\n// Toggle hidden\r\nexport function toggleHidden(element, hidden) {\r\n    if (!is.element(element)) {\r\n        return;\r\n    }\r\n\r\n    let hide = hidden;\r\n\r\n    if (!is.boolean(hide)) {\r\n        hide = !element.hidden;\r\n    }\r\n\r\n    if (hide) {\r\n        element.setAttribute('hidden', '');\r\n    } else {\r\n        element.removeAttribute('hidden');\r\n    }\r\n}\r\n\r\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\r\nexport function toggleClass(element, className, force) {\r\n    if (is.nodeList(element)) {\r\n        return Array.from(element).map(e => toggleClass(e, className, force));\r\n    }\r\n\r\n    if (is.element(element)) {\r\n        let method = 'toggle';\r\n        if (typeof force !== 'undefined') {\r\n            method = force ? 'add' : 'remove';\r\n        }\r\n\r\n        element.classList[method](className);\r\n        return element.classList.contains(className);\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n// Has class name\r\nexport function hasClass(element, className) {\r\n    return is.element(element) && element.classList.contains(className);\r\n}\r\n\r\n// Element matches selector\r\nexport function matches(element, selector) {\r\n    const prototype = { Element };\r\n\r\n    function match() {\r\n        return Array.from(document.querySelectorAll(selector)).includes(this);\r\n    }\r\n\r\n    const matches =\r\n        prototype.matches ||\r\n        prototype.webkitMatchesSelector ||\r\n        prototype.mozMatchesSelector ||\r\n        prototype.msMatchesSelector ||\r\n        match;\r\n\r\n    return matches.call(element, selector);\r\n}\r\n\r\n// Find all elements\r\nexport function getElements(selector) {\r\n    return this.elements.container.querySelectorAll(selector);\r\n}\r\n\r\n// Find a single element\r\nexport function getElement(selector) {\r\n    return this.elements.container.querySelector(selector);\r\n}\r\n\r\n// Trap focus inside container\r\nexport function trapFocus(element = null, toggle = false) {\r\n    if (!is.element(element)) {\r\n        return;\r\n    }\r\n\r\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\r\n    const first = focusable[0];\r\n    const last = focusable[focusable.length - 1];\r\n\r\n    const trap = event => {\r\n        // Bail if not tab key or not fullscreen\r\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\r\n            return;\r\n        }\r\n\r\n        // Get the current focused element\r\n        const focused = document.activeElement;\r\n\r\n        if (focused === last && !event.shiftKey) {\r\n            // Move focus to first element that can be tabbed if Shift isn't used\r\n            first.focus();\r\n            event.preventDefault();\r\n        } else if (focused === first && event.shiftKey) {\r\n            // Move focus to last element that can be tabbed if Shift is used\r\n            last.focus();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\r\n}\r\n\r\n// Set focus and tab focus class\r\nexport function setFocus(element = null, tabFocus = false) {\r\n    if (!is.element(element)) {\r\n        return;\r\n    }\r\n\r\n    // Set regular focus\r\n    element.focus();\r\n\r\n    // If we want to mimic keyboard focus via tab\r\n    if (tabFocus) {\r\n        toggleClass(element, this.config.classNames.tabFocus);\r\n    }\r\n}\r\n","// ==========================================================================\r\n// Animation utils\r\n// ==========================================================================\r\n\r\nimport { toggleHidden } from './elements';\r\nimport is from './is';\r\n\r\nexport const transitionEndEvent = (() => {\r\n    const element = document.createElement('span');\r\n\r\n    const events = {\r\n        WebkitTransition: 'webkitTransitionEnd',\r\n        MozTransition: 'transitionend',\r\n        OTransition: 'oTransitionEnd otransitionend',\r\n        transition: 'transitionend',\r\n    };\r\n\r\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\r\n\r\n    return is.string(type) ? events[type] : false;\r\n})();\r\n\r\n// Force repaint of element\r\nexport function repaint(element) {\r\n    setTimeout(() => {\r\n        try {\r\n            toggleHidden(element, true);\r\n            element.offsetHeight; // eslint-disable-line\r\n            toggleHidden(element, false);\r\n        } catch (e) {\r\n            // Do nothing\r\n        }\r\n    }, 0);\r\n}\r\n","// ==========================================================================\r\n// Browser sniffing\r\n// Unfortunately, due to mixed support, UA sniffing is required\r\n// ==========================================================================\r\n\r\nconst browser = {\r\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\r\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\r\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\r\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\r\n};\r\n\r\nexport default browser;\r\n","// ==========================================================================\r\n// Plyr support checks\r\n// ==========================================================================\r\n\r\nimport { transitionEndEvent } from './utils/animation';\r\nimport browser from './utils/browser';\r\nimport { createElement } from './utils/elements';\r\nimport is from './utils/is';\r\n\r\n// Default codecs for checking mimetype support\r\nconst defaultCodecs = {\r\n    'audio/ogg': 'vorbis',\r\n    'audio/wav': '1',\r\n    'video/webm': 'vp8, vorbis',\r\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\r\n    'video/ogg': 'theora',\r\n};\r\n\r\n// Check for feature support\r\nconst support = {\r\n    // Basic support\r\n    audio: 'canPlayType' in document.createElement('audio'),\r\n    video: 'canPlayType' in document.createElement('video'),\r\n\r\n    // Check for support\r\n    // Basic functionality vs full UI\r\n    check(type, provider, playsinline) {\r\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\r\n        const api = support[type] || provider !== 'html5';\r\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\r\n\r\n        return {\r\n            api,\r\n            ui,\r\n        };\r\n    },\r\n\r\n    // Picture-in-picture support\r\n    // Safari only currently\r\n    pip: (() => !browser.isIPhone && is.function(createElement('video').webkitSetPresentationMode))(),\r\n\r\n    // Airplay support\r\n    // Safari only currently\r\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\r\n\r\n    // Inline playback support\r\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\r\n    playsinline: 'playsInline' in document.createElement('video'),\r\n\r\n    // Check for mime type support against a player instance\r\n    // Credits: http://diveintohtml5.info/everything.html\r\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\r\n    mime(inputType) {\r\n        const [mediaType] = inputType.split('/');\r\n        if (!this.isHTML5 || mediaType !== this.type) {\r\n            return false;\r\n        }\r\n\r\n        let type;\r\n        if (inputType && inputType.includes('codecs=')) {\r\n            // Use input directly\r\n            type = inputType;\r\n        } else if (inputType === 'audio/mpeg') {\r\n            // Skip codec\r\n            type = 'audio/mpeg;';\r\n        } else if (inputType in defaultCodecs) {\r\n            // Use codec\r\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\r\n        }\r\n\r\n        try {\r\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    // Check for textTracks support\r\n    textTracks: 'textTracks' in document.createElement('video'),\r\n\r\n    // <input type=\"range\"> Sliders\r\n    rangeInput: (() => {\r\n        const range = document.createElement('input');\r\n        range.type = 'range';\r\n        return range.type === 'range';\r\n    })(),\r\n\r\n    // Touch\r\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\r\n    touch: 'ontouchstart' in document.documentElement,\r\n\r\n    // Detect transitions support\r\n    transitions: transitionEndEvent !== false,\r\n\r\n    // Reduced motion iOS & MacOS setting\r\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\r\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\r\n};\r\n\r\nexport default support;\r\n","// ==========================================================================\r\n// Plyr HTML5 helpers\r\n// ==========================================================================\r\n\r\nimport support from './support';\r\nimport { removeElement } from './utils/elements';\r\nimport { triggerEvent } from './utils/events';\r\n\r\nconst html5 = {\r\n    getSources() {\r\n        if (!this.isHTML5) {\r\n            return [];\r\n        }\r\n\r\n        const sources = Array.from(this.media.querySelectorAll('source'));\r\n\r\n        // Filter out unsupported sources\r\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\r\n    },\r\n\r\n    // Get quality levels\r\n    getQualityOptions() {\r\n        // Get sizes from <source> elements\r\n        return html5.getSources\r\n            .call(this)\r\n            .map(source => Number(source.getAttribute('size')))\r\n            .filter(Boolean);\r\n    },\r\n\r\n    extend() {\r\n        if (!this.isHTML5) {\r\n            return;\r\n        }\r\n\r\n        const player = this;\r\n\r\n        // Quality\r\n        Object.defineProperty(player.media, 'quality', {\r\n            get() {\r\n                // Get sources\r\n                const sources = html5.getSources.call(player);\r\n                const source = sources.find(source => source.getAttribute('src') === player.source);\r\n\r\n                // Return size, if match is found\r\n                return source && Number(source.getAttribute('size'));\r\n            },\r\n            set(input) {\r\n                // Get sources\r\n                const sources = html5.getSources.call(player);\r\n\r\n                // Get first match for requested size\r\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\r\n\r\n                // No matching source found\r\n                if (!source) {\r\n                    return;\r\n                }\r\n\r\n                // Get current state\r\n                const { currentTime, paused, preload, readyState } = player.media;\r\n\r\n                // Set new source\r\n                player.media.src = source.getAttribute('src');\r\n\r\n                // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\r\n                if (preload !== 'none' || readyState) {\r\n                    // Restore time\r\n                    player.once('loadedmetadata', () => {\r\n                        player.currentTime = currentTime;\r\n\r\n                        // Resume playing\r\n                        if (!paused) {\r\n                            player.play();\r\n                        }\r\n                    });\r\n\r\n                    // Load new source\r\n                    player.media.load();\r\n                }\r\n\r\n                // Trigger change event\r\n                triggerEvent.call(player, player.media, 'qualitychange', false, {\r\n                    quality: input,\r\n                });\r\n\r\n                // Save to storage\r\n                player.storage.set({ quality: input });\r\n            },\r\n        });\r\n    },\r\n\r\n    // Cancel current network requests\r\n    // See https://github.com/sampotts/plyr/issues/174\r\n    cancelRequests() {\r\n        if (!this.isHTML5) {\r\n            return;\r\n        }\r\n\r\n        // Remove child sources\r\n        removeElement(html5.getSources.call(this));\r\n\r\n        // Set blank video src attribute\r\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\r\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\r\n        this.media.setAttribute('src', this.config.blankVideo);\r\n\r\n        // Load the new empty source\r\n        // This will cancel existing requests\r\n        // See https://github.com/sampotts/plyr/issues/174\r\n        this.media.load();\r\n\r\n        // Debugging\r\n        this.debug.log('Cancelled network requests');\r\n    },\r\n};\r\n\r\nexport default html5;\r\n","// ==========================================================================\r\n// Array utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n// Remove duplicates in an array\r\nexport function dedupe(array) {\r\n    if (!is.array(array)) {\r\n        return array;\r\n    }\r\n\r\n    return array.filter((item, index) => array.indexOf(item) === index);\r\n}\r\n\r\n// Get the closest value in an array\r\nexport function closest(array, value) {\r\n    if (!is.array(array) || !array.length) {\r\n        return null;\r\n    }\r\n\r\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\r\n}\r\n","// ==========================================================================\r\n// Object utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n// Clone nested objects\r\nexport function cloneDeep(object) {\r\n    return JSON.parse(JSON.stringify(object));\r\n}\r\n\r\n// Get a nested value in an object\r\nexport function getDeep(object, path) {\r\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\r\n}\r\n\r\n// Deep extend destination object with N more objects\r\nexport function extend(target = {}, ...sources) {\r\n    if (!sources.length) {\r\n        return target;\r\n    }\r\n\r\n    const source = sources.shift();\r\n\r\n    if (!is.object(source)) {\r\n        return target;\r\n    }\r\n\r\n    Object.keys(source).forEach(key => {\r\n        if (is.object(source[key])) {\r\n            if (!Object.keys(target).includes(key)) {\r\n                Object.assign(target, { [key]: {} });\r\n            }\r\n\r\n            extend(target[key], source[key]);\r\n        } else {\r\n            Object.assign(target, { [key]: source[key] });\r\n        }\r\n    });\r\n\r\n    return extend(target, ...sources);\r\n}\r\n","// ==========================================================================\r\n// String utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n// Generate a random ID\r\nexport function generateId(prefix) {\r\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\r\n}\r\n\r\n// Format string\r\nexport function format(input, ...args) {\r\n    if (is.empty(input)) {\r\n        return input;\r\n    }\r\n\r\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\r\n}\r\n\r\n// Get percentage\r\nexport function getPercentage(current, max) {\r\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\r\n        return 0;\r\n    }\r\n\r\n    return ((current / max) * 100).toFixed(2);\r\n}\r\n\r\n// Replace all occurances of a string in a string\r\nexport function replaceAll(input = '', find = '', replace = '') {\r\n    return input.replace(\r\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\r\n        replace.toString(),\r\n    );\r\n}\r\n\r\n// Convert to title case\r\nexport function toTitleCase(input = '') {\r\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\r\n}\r\n\r\n// Convert string to pascalCase\r\nexport function toPascalCase(input = '') {\r\n    let string = input.toString();\r\n\r\n    // Convert kebab case\r\n    string = replaceAll(string, '-', ' ');\r\n\r\n    // Convert snake case\r\n    string = replaceAll(string, '_', ' ');\r\n\r\n    // Convert to title case\r\n    string = toTitleCase(string);\r\n\r\n    // Convert to pascal case\r\n    return replaceAll(string, ' ', '');\r\n}\r\n\r\n// Convert string to pascalCase\r\nexport function toCamelCase(input = '') {\r\n    let string = input.toString();\r\n\r\n    // Convert to pascal case\r\n    string = toPascalCase(string);\r\n\r\n    // Convert first character to lowercase\r\n    return string.charAt(0).toLowerCase() + string.slice(1);\r\n}\r\n\r\n// Remove HTML from a string\r\nexport function stripHTML(source) {\r\n    const fragment = document.createDocumentFragment();\r\n    const element = document.createElement('div');\r\n    fragment.appendChild(element);\r\n    element.innerHTML = source;\r\n    return fragment.firstChild.innerText;\r\n}\r\n\r\n// Like outerHTML, but also works for DocumentFragment\r\nexport function getHTML(element) {\r\n    const wrapper = document.createElement('div');\r\n    wrapper.appendChild(element);\r\n    return wrapper.innerHTML;\r\n}\r\n","// ==========================================================================\r\n// Plyr internationalization\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\nimport { getDeep } from './objects';\r\nimport { replaceAll } from './strings';\r\n\r\n// Skip i18n for abbreviations and brand names\r\nconst resources = {\r\n    pip: 'PIP',\r\n    airplay: 'AirPlay',\r\n    html5: 'HTML5',\r\n    vimeo: 'Vimeo',\r\n    youtube: 'YouTube',\r\n};\r\n\r\nconst i18n = {\r\n    get(key = '', config = {}) {\r\n        if (is.empty(key) || is.empty(config)) {\r\n            return '';\r\n        }\r\n\r\n        let string = getDeep(config.i18n, key);\r\n\r\n        if (is.empty(string)) {\r\n            if (Object.keys(resources).includes(key)) {\r\n                return resources[key];\r\n            }\r\n\r\n            return '';\r\n        }\r\n\r\n        const replace = {\r\n            '{seektime}': config.seekTime,\r\n            '{title}': config.title,\r\n        };\r\n\r\n        Object.entries(replace).forEach(([key, value]) => {\r\n            string = replaceAll(string, key, value);\r\n        });\r\n\r\n        return string;\r\n    },\r\n};\r\n\r\nexport default i18n;\r\n","// ==========================================================================\r\n// Plyr storage\r\n// ==========================================================================\r\n\r\nimport is from './utils/is';\r\nimport { extend } from './utils/objects';\r\n\r\nclass Storage {\r\n    constructor(player) {\r\n        this.enabled = player.config.storage.enabled;\r\n        this.key = player.config.storage.key;\r\n    }\r\n\r\n    // Check for actual support (see if we can use it)\r\n    static get supported() {\r\n        try {\r\n            if (!('localStorage' in window)) {\r\n                return false;\r\n            }\r\n\r\n            const test = '___test';\r\n\r\n            // Try to use it (it might be disabled, e.g. user is in private mode)\r\n            // see: https://github.com/sampotts/plyr/issues/131\r\n            window.localStorage.setItem(test, test);\r\n            window.localStorage.removeItem(test);\r\n\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get(key) {\r\n        if (!Storage.supported || !this.enabled) {\r\n            return null;\r\n        }\r\n\r\n        const store = window.localStorage.getItem(this.key);\r\n\r\n        if (is.empty(store)) {\r\n            return null;\r\n        }\r\n\r\n        const json = JSON.parse(store);\r\n\r\n        return is.string(key) && key.length ? json[key] : json;\r\n    }\r\n\r\n    set(object) {\r\n        // Bail if we don't have localStorage support or it's disabled\r\n        if (!Storage.supported || !this.enabled) {\r\n            return;\r\n        }\r\n\r\n        // Can only store objectst\r\n        if (!is.object(object)) {\r\n            return;\r\n        }\r\n\r\n        // Get current storage\r\n        let storage = this.get();\r\n\r\n        // Default to empty object\r\n        if (is.empty(storage)) {\r\n            storage = {};\r\n        }\r\n\r\n        // Update the working copy of the values\r\n        extend(storage, object);\r\n\r\n        // Update storage\r\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\r\n    }\r\n}\r\n\r\nexport default Storage;\r\n","// ==========================================================================\r\n// Fetch wrapper\r\n// Using XHR to avoid issues with older browsers\r\n// ==========================================================================\r\n\r\nexport default function fetch(url, responseType = 'text') {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const request = new XMLHttpRequest();\r\n\r\n            // Check for CORS support\r\n            if (!('withCredentials' in request)) {\r\n                return;\r\n            }\r\n\r\n            request.addEventListener('load', () => {\r\n                if (responseType === 'text') {\r\n                    try {\r\n                        resolve(JSON.parse(request.responseText));\r\n                    } catch (e) {\r\n                        resolve(request.responseText);\r\n                    }\r\n                } else {\r\n                    resolve(request.response);\r\n                }\r\n            });\r\n\r\n            request.addEventListener('error', () => {\r\n                throw new Error(request.status);\r\n            });\r\n\r\n            request.open('GET', url, true);\r\n\r\n            // Set the required response type\r\n            request.responseType = responseType;\r\n\r\n            request.send();\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\r\n","// ==========================================================================\r\n// Sprite loader\r\n// ==========================================================================\r\n\r\nimport Storage from '../storage';\r\nimport fetch from './fetch';\r\nimport is from './is';\r\n\r\n// Load an external SVG sprite\r\nexport default function loadSprite(url, id) {\r\n    if (!is.string(url)) {\r\n        return;\r\n    }\r\n\r\n    const prefix = 'cache';\r\n    const hasId = is.string(id);\r\n    let isCached = false;\r\n\r\n    const exists = () => document.getElementById(id) !== null;\r\n\r\n    const update = (container, data) => {\r\n        container.innerHTML = data;\r\n\r\n        // Check again incase of race condition\r\n        if (hasId && exists()) {\r\n            return;\r\n        }\r\n\r\n        // Inject the SVG to the body\r\n        document.body.insertAdjacentElement('afterbegin', container);\r\n    };\r\n\r\n    // Only load once if ID set\r\n    if (!hasId || !exists()) {\r\n        const useStorage = Storage.supported;\r\n\r\n        // Create container\r\n        const container = document.createElement('div');\r\n        container.setAttribute('hidden', '');\r\n\r\n        if (hasId) {\r\n            container.setAttribute('id', id);\r\n        }\r\n\r\n        // Check in cache\r\n        if (useStorage) {\r\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\r\n            isCached = cached !== null;\r\n\r\n            if (isCached) {\r\n                const data = JSON.parse(cached);\r\n                update(container, data.content);\r\n            }\r\n        }\r\n\r\n        // Get the sprite\r\n        fetch(url)\r\n            .then(result => {\r\n                if (is.empty(result)) {\r\n                    return;\r\n                }\r\n\r\n                if (useStorage) {\r\n                    window.localStorage.setItem(\r\n                        `${prefix}-${id}`,\r\n                        JSON.stringify({\r\n                            content: result,\r\n                        }),\r\n                    );\r\n                }\r\n\r\n                update(container, result);\r\n            })\r\n            .catch(() => {});\r\n    }\r\n}\r\n","// ==========================================================================\r\n// Time utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n// Time helpers\r\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\r\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\r\nexport const getSeconds = value => parseInt(value % 60, 10);\r\n\r\n// Format time to UI friendly string\r\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\r\n    // Bail if the value isn't a number\r\n    if (!is.number(time)) {\r\n        return formatTime(null, displayHours, inverted);\r\n    }\r\n\r\n    // Format time component to add leading zero\r\n    const format = value => `0${value}`.slice(-2);\r\n\r\n    // Breakdown to hours, mins, secs\r\n    let hours = getHours(time);\r\n    const mins = getMinutes(time);\r\n    const secs = getSeconds(time);\r\n\r\n    // Do we need to display hours?\r\n    if (displayHours || hours > 0) {\r\n        hours = `${hours}:`;\r\n    } else {\r\n        hours = '';\r\n    }\r\n\r\n    // Render\r\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\r\n}\r\n","// ==========================================================================\r\n// Plyr controls\r\n// TODO: This needs to be split into smaller files and cleaned up\r\n// ==========================================================================\r\n\r\nimport captions from './captions';\r\nimport html5 from './html5';\r\nimport support from './support';\r\nimport { repaint, transitionEndEvent } from './utils/animation';\r\nimport { dedupe } from './utils/arrays';\r\nimport browser from './utils/browser';\r\nimport { createElement, emptyElement, getAttributesFromSelector, getElement, getElements, hasClass, matches, removeElement, setAttributes, setFocus, toggleClass, toggleHidden } from './utils/elements';\r\nimport { off, on } from './utils/events';\r\nimport i18n from './utils/i18n';\r\nimport is from './utils/is';\r\nimport loadSprite from './utils/loadSprite';\r\nimport { extend } from './utils/objects';\r\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\r\nimport { formatTime, getHours } from './utils/time';\r\n\r\n// TODO: Don't export a massive object - break down and create class\r\nconst controls = {\r\n    // Get icon URL\r\n    getIconUrl() {\r\n        const url = new URL(this.config.iconUrl, window.location);\r\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\r\n\r\n        return {\r\n            url: this.config.iconUrl,\r\n            cors,\r\n        };\r\n    },\r\n\r\n    // Find the UI controls\r\n    findElements() {\r\n        try {\r\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\r\n\r\n            // Buttons\r\n            this.elements.buttons = {\r\n                play: getElements.call(this, this.config.selectors.buttons.play),\r\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\r\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\r\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\r\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\r\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\r\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\r\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\r\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\r\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\r\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\r\n            };\r\n\r\n            // Progress\r\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\r\n\r\n            // Inputs\r\n            this.elements.inputs = {\r\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\r\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\r\n            };\r\n\r\n            // Display\r\n            this.elements.display = {\r\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\r\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\r\n                duration: getElement.call(this, this.config.selectors.display.duration),\r\n            };\r\n\r\n            // Seek tooltip\r\n            if (is.element(this.elements.progress)) {\r\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\r\n                    `.${this.config.classNames.tooltip}`,\r\n                );\r\n            }\r\n\r\n            return true;\r\n        } catch (error) {\r\n            // Log it\r\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\r\n\r\n            // Restore native video controls\r\n            this.toggleNativeControls(true);\r\n\r\n            return false;\r\n        }\r\n    },\r\n\r\n    // Create <svg> icon\r\n    createIcon(type, attributes) {\r\n        const namespace = 'http://www.w3.org/2000/svg';\r\n        const iconUrl = controls.getIconUrl.call(this);\r\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\r\n\r\n        // Create <svg>\r\n        const icon = document.createElementNS(namespace, 'svg');\r\n        setAttributes(\r\n            icon,\r\n            extend(attributes, {\r\n                role: 'presentation',\r\n                focusable: 'false',\r\n            }),\r\n        );\r\n\r\n        // Create the <use> to reference sprite\r\n        const use = document.createElementNS(namespace, 'use');\r\n        const path = `${iconPath}-${type}`;\r\n\r\n        // Set `href` attributes\r\n        // https://github.com/sampotts/plyr/issues/460\r\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\r\n        if ('href' in use) {\r\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\r\n        }\r\n\r\n        // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\r\n        use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\r\n\r\n        // Add <use> to <svg>\r\n        icon.appendChild(use);\r\n\r\n        return icon;\r\n    },\r\n\r\n    // Create hidden text label\r\n    createLabel(key, attr = {}) {\r\n        const text = i18n.get(key, this.config);\r\n\r\n        const attributes = Object.assign({}, attr, {\r\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\r\n        });\r\n\r\n        return createElement('span', attributes, text);\r\n    },\r\n\r\n    // Create a badge\r\n    createBadge(text) {\r\n        if (is.empty(text)) {\r\n            return null;\r\n        }\r\n\r\n        const badge = createElement('span', {\r\n            class: this.config.classNames.menu.value,\r\n        });\r\n\r\n        badge.appendChild(\r\n            createElement(\r\n                'span',\r\n                {\r\n                    class: this.config.classNames.menu.badge,\r\n                },\r\n                text,\r\n            ),\r\n        );\r\n\r\n        return badge;\r\n    },\r\n\r\n    // Create a <button>\r\n    createButton(buttonType, attr) {\r\n        const attributes = Object.assign({}, attr);\r\n        let type = toCamelCase(buttonType);\r\n\r\n        const props = {\r\n            element: 'button',\r\n            toggle: false,\r\n            label: null,\r\n            icon: null,\r\n            labelPressed: null,\r\n            iconPressed: null,\r\n        };\r\n\r\n        ['element', 'icon', 'label'].forEach(key => {\r\n            if (Object.keys(attributes).includes(key)) {\r\n                props[key] = attributes[key];\r\n                delete attributes[key];\r\n            }\r\n        });\r\n\r\n        // Default to 'button' type to prevent form submission\r\n        if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\r\n            attributes.type = 'button';\r\n        }\r\n\r\n        // Set class name\r\n        if (Object.keys(attributes).includes('class')) {\r\n            if (!attributes.class.includes(this.config.classNames.control)) {\r\n                attributes.class += ` ${this.config.classNames.control}`;\r\n            }\r\n        } else {\r\n            attributes.class = this.config.classNames.control;\r\n        }\r\n\r\n        // Large play button\r\n        switch (buttonType) {\r\n            case 'play':\r\n                props.toggle = true;\r\n                props.label = 'play';\r\n                props.labelPressed = 'pause';\r\n                props.icon = 'play';\r\n                props.iconPressed = 'pause';\r\n                break;\r\n\r\n            case 'mute':\r\n                props.toggle = true;\r\n                props.label = 'mute';\r\n                props.labelPressed = 'unmute';\r\n                props.icon = 'volume';\r\n                props.iconPressed = 'muted';\r\n                break;\r\n\r\n            case 'captions':\r\n                props.toggle = true;\r\n                props.label = 'enableCaptions';\r\n                props.labelPressed = 'disableCaptions';\r\n                props.icon = 'captions-off';\r\n                props.iconPressed = 'captions-on';\r\n                break;\r\n\r\n            case 'fullscreen':\r\n                props.toggle = true;\r\n                props.label = 'enterFullscreen';\r\n                props.labelPressed = 'exitFullscreen';\r\n                props.icon = 'enter-fullscreen';\r\n                props.iconPressed = 'exit-fullscreen';\r\n                break;\r\n\r\n            case 'play-large':\r\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\r\n                type = 'play';\r\n                props.label = 'play';\r\n                props.icon = 'play';\r\n                break;\r\n\r\n            default:\r\n                if (is.empty(props.label)) {\r\n                    props.label = type;\r\n                }\r\n                if (is.empty(props.icon)) {\r\n                    props.icon = buttonType;\r\n                }\r\n        }\r\n\r\n        const button = createElement(props.element);\r\n\r\n        // Setup toggle icon and labels\r\n        if (props.toggle) {\r\n            // Icon\r\n            button.appendChild(\r\n                controls.createIcon.call(this, props.iconPressed, {\r\n                    class: 'icon--pressed',\r\n                }),\r\n            );\r\n            button.appendChild(\r\n                controls.createIcon.call(this, props.icon, {\r\n                    class: 'icon--not-pressed',\r\n                }),\r\n            );\r\n\r\n            // Label/Tooltip\r\n            button.appendChild(\r\n                controls.createLabel.call(this, props.labelPressed, {\r\n                    class: 'label--pressed',\r\n                }),\r\n            );\r\n            button.appendChild(\r\n                controls.createLabel.call(this, props.label, {\r\n                    class: 'label--not-pressed',\r\n                }),\r\n            );\r\n        } else {\r\n            button.appendChild(controls.createIcon.call(this, props.icon));\r\n            button.appendChild(controls.createLabel.call(this, props.label));\r\n        }\r\n\r\n        // Merge and set attributes\r\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\r\n        setAttributes(button, attributes);\r\n\r\n        // We have multiple play buttons\r\n        if (type === 'play') {\r\n            if (!is.array(this.elements.buttons[type])) {\r\n                this.elements.buttons[type] = [];\r\n            }\r\n\r\n            this.elements.buttons[type].push(button);\r\n        } else {\r\n            this.elements.buttons[type] = button;\r\n        }\r\n\r\n        return button;\r\n    },\r\n\r\n    // Create an <input type='range'>\r\n    createRange(type, attributes) {\r\n        // Seek input\r\n        const input = createElement(\r\n            'input',\r\n            extend(\r\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\r\n                {\r\n                    type: 'range',\r\n                    min: 0,\r\n                    max: 100,\r\n                    step: 0.01,\r\n                    value: 0,\r\n                    autocomplete: 'off',\r\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\r\n                    role: 'slider',\r\n                    'aria-label': i18n.get(type, this.config),\r\n                    'aria-valuemin': 0,\r\n                    'aria-valuemax': 100,\r\n                    'aria-valuenow': 0,\r\n                },\r\n                attributes,\r\n            ),\r\n        );\r\n\r\n        this.elements.inputs[type] = input;\r\n\r\n        // Set the fill for webkit now\r\n        controls.updateRangeFill.call(this, input);\r\n\r\n        return input;\r\n    },\r\n\r\n    // Create a <progress>\r\n    createProgress(type, attributes) {\r\n        const progress = createElement(\r\n            'progress',\r\n            extend(\r\n                getAttributesFromSelector(this.config.selectors.display[type]),\r\n                {\r\n                    min: 0,\r\n                    max: 100,\r\n                    value: 0,\r\n                    role: 'presentation',\r\n                    'aria-hidden': true,\r\n                },\r\n                attributes,\r\n            ),\r\n        );\r\n\r\n        // Create the label inside\r\n        if (type !== 'volume') {\r\n            progress.appendChild(createElement('span', null, '0'));\r\n\r\n            const suffixKey = {\r\n                played: 'played',\r\n                buffer: 'buffered',\r\n            }[type];\r\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\r\n\r\n            progress.innerText = `% ${suffix.toLowerCase()}`;\r\n        }\r\n\r\n        this.elements.display[type] = progress;\r\n\r\n        return progress;\r\n    },\r\n\r\n    // Create time display\r\n    createTime(type) {\r\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\r\n\r\n        const container = createElement(\r\n            'div',\r\n            extend(attributes, {\r\n                class: `${this.config.classNames.display.time} ${attributes.class ? attributes.class : ''}`.trim(),\r\n                'aria-label': i18n.get(type, this.config),\r\n            }),\r\n            '00:00',\r\n        );\r\n\r\n        // Reference for updates\r\n        this.elements.display[type] = container;\r\n\r\n        return container;\r\n    },\r\n\r\n    // Bind keyboard shortcuts for a menu item\r\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\r\n    bindMenuItemShortcuts(menuItem, type) {\r\n        // Navigate through menus via arrow keys and space\r\n        on(\r\n            menuItem,\r\n            'keydown keyup',\r\n            event => {\r\n                // We only care about space and ⬆️ ⬇️️ ➡️\r\n                if (![32, 38, 39, 40].includes(event.which)) {\r\n                    return;\r\n                }\r\n\r\n                // Prevent play / seek\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                // We're just here to prevent the keydown bubbling\r\n                if (event.type === 'keydown') {\r\n                    return;\r\n                }\r\n\r\n                const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\r\n\r\n                // Show the respective menu\r\n                if (!isRadioButton && [32, 39].includes(event.which)) {\r\n                    controls.showMenuPanel.call(this, type, true);\r\n                } else {\r\n                    let target;\r\n\r\n                    if (event.which !== 32) {\r\n                        if (event.which === 40 || (isRadioButton && event.which === 39)) {\r\n                            target = menuItem.nextElementSibling;\r\n\r\n                            if (!is.element(target)) {\r\n                                target = menuItem.parentNode.firstElementChild;\r\n                            }\r\n                        } else {\r\n                            target = menuItem.previousElementSibling;\r\n\r\n                            if (!is.element(target)) {\r\n                                target = menuItem.parentNode.lastElementChild;\r\n                            }\r\n                        }\r\n\r\n                        setFocus.call(this, target, true);\r\n                    }\r\n                }\r\n            },\r\n            false,\r\n        );\r\n\r\n        // Enter will fire a `click` event but we still need to manage focus\r\n        // So we bind to keyup which fires after and set focus here\r\n        on(menuItem, 'keyup', event => {\r\n            if (event.which !== 13) {\r\n                return;\r\n            }\r\n\r\n            controls.focusFirstMenuItem.call(this, null, true);\r\n        });\r\n    },\r\n\r\n    // Create a settings menu item\r\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\r\n        const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\r\n\r\n        const menuItem = createElement(\r\n            'button',\r\n            extend(attributes, {\r\n                type: 'button',\r\n                role: 'menuitemradio',\r\n                class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\r\n                'aria-checked': checked,\r\n                value,\r\n            }),\r\n        );\r\n\r\n        const flex = createElement('span');\r\n\r\n        // We have to set as HTML incase of special characters\r\n        flex.innerHTML = title;\r\n\r\n        if (is.element(badge)) {\r\n            flex.appendChild(badge);\r\n        }\r\n\r\n        menuItem.appendChild(flex);\r\n\r\n        // Replicate radio button behaviour\r\n        Object.defineProperty(menuItem, 'checked', {\r\n            enumerable: true,\r\n            get() {\r\n                return menuItem.getAttribute('aria-checked') === 'true';\r\n            },\r\n            set(checked) {\r\n                // Ensure exclusivity\r\n                if (checked) {\r\n                    Array.from(menuItem.parentNode.children)\r\n                        .filter(node => matches(node, '[role=\"menuitemradio\"]'))\r\n                        .forEach(node => node.setAttribute('aria-checked', 'false'));\r\n                }\r\n\r\n                menuItem.setAttribute('aria-checked', checked ? 'true' : 'false');\r\n            },\r\n        });\r\n\r\n        this.listeners.bind(\r\n            menuItem,\r\n            'click keyup',\r\n            event => {\r\n                if (is.keyboardEvent(event) && event.which !== 32) {\r\n                    return;\r\n                }\r\n\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                menuItem.checked = true;\r\n\r\n                switch (type) {\r\n                    case 'language':\r\n                        this.currentTrack = Number(value);\r\n                        break;\r\n\r\n                    case 'quality':\r\n                        this.quality = value;\r\n                        break;\r\n\r\n                    case 'speed':\r\n                        this.speed = parseFloat(value);\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\r\n            },\r\n            type,\r\n            false,\r\n        );\r\n\r\n        controls.bindMenuItemShortcuts.call(this, menuItem, type);\r\n\r\n        list.appendChild(menuItem);\r\n    },\r\n\r\n    // Format a time for display\r\n    formatTime(time = 0, inverted = false) {\r\n        // Bail if the value isn't a number\r\n        if (!is.number(time)) {\r\n            return time;\r\n        }\r\n\r\n        // Always display hours if duration is over an hour\r\n        const forceHours = getHours(this.duration) > 0;\r\n\r\n        return formatTime(time, forceHours, inverted);\r\n    },\r\n\r\n    // Update the displayed time\r\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\r\n        // Bail if there's no element to display or the value isn't a number\r\n        if (!is.element(target) || !is.number(time)) {\r\n            return;\r\n        }\r\n\r\n        // eslint-disable-next-line no-param-reassign\r\n        target.innerText = controls.formatTime(time, inverted);\r\n    },\r\n\r\n    // Update volume UI and storage\r\n    updateVolume() {\r\n        if (!this.supported.ui) {\r\n            return;\r\n        }\r\n\r\n        // Update range\r\n        if (is.element(this.elements.inputs.volume)) {\r\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\r\n        }\r\n\r\n        // Update mute state\r\n        if (is.element(this.elements.buttons.mute)) {\r\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\r\n        }\r\n    },\r\n\r\n    // Update seek value and lower fill\r\n    setRange(target, value = 0) {\r\n        if (!is.element(target)) {\r\n            return;\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n        target.value = value;\r\n\r\n        // Webkit range fill\r\n        controls.updateRangeFill.call(this, target);\r\n    },\r\n\r\n    // Update <progress> elements\r\n    updateProgress(event) {\r\n        if (!this.supported.ui || !is.event(event)) {\r\n            return;\r\n        }\r\n\r\n        let value = 0;\r\n\r\n        const setProgress = (target, input) => {\r\n            const value = is.number(input) ? input : 0;\r\n            const progress = is.element(target) ? target : this.elements.display.buffer;\r\n\r\n            // Update value and label\r\n            if (is.element(progress)) {\r\n                progress.value = value;\r\n\r\n                // Update text label inside\r\n                const label = progress.getElementsByTagName('span')[0];\r\n                if (is.element(label)) {\r\n                    label.childNodes[0].nodeValue = value;\r\n                }\r\n            }\r\n        };\r\n\r\n        if (event) {\r\n            switch (event.type) {\r\n                // Video playing\r\n                case 'timeupdate':\r\n                case 'seeking':\r\n                case 'seeked':\r\n                    value = getPercentage(this.currentTime, this.duration);\r\n\r\n                    // Set seek range value only if it's a 'natural' time event\r\n                    if (event.type === 'timeupdate') {\r\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\r\n                    }\r\n\r\n                    break;\r\n\r\n                // Check buffer status\r\n                case 'playing':\r\n                case 'progress':\r\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\r\n\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n\r\n    // Webkit polyfill for lower fill range\r\n    updateRangeFill(target) {\r\n        // Get range from event if event passed\r\n        const range = is.event(target) ? target.target : target;\r\n\r\n        // Needs to be a valid <input type='range'>\r\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\r\n            return;\r\n        }\r\n\r\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\r\n        if (matches(range, this.config.selectors.inputs.seek)) {\r\n            range.setAttribute('aria-valuenow', this.currentTime);\r\n            const currentTime = controls.formatTime(this.currentTime);\r\n            const duration = controls.formatTime(this.duration);\r\n            const format = i18n.get('seekLabel', this.config);\r\n            range.setAttribute(\r\n                'aria-valuetext',\r\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\r\n            );\r\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\r\n            const percent = range.value * 100;\r\n            range.setAttribute('aria-valuenow', percent);\r\n            range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\r\n        } else {\r\n            range.setAttribute('aria-valuenow', range.value);\r\n        }\r\n\r\n        // WebKit only\r\n        if (!browser.isWebkit) {\r\n            return;\r\n        }\r\n\r\n        // Set CSS custom property\r\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\r\n    },\r\n\r\n    // Update hover tooltip for seeking\r\n    updateSeekTooltip(event) {\r\n        // Bail if setting not true\r\n        if (\r\n            !this.config.tooltips.seek ||\r\n            !is.element(this.elements.inputs.seek) ||\r\n            !is.element(this.elements.display.seekTooltip) ||\r\n            this.duration === 0\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // Calculate percentage\r\n        let percent = 0;\r\n        const clientRect = this.elements.progress.getBoundingClientRect();\r\n        const visible = `${this.config.classNames.tooltip}--visible`;\r\n\r\n        const toggle = toggle => {\r\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\r\n        };\r\n\r\n        // Hide on touch\r\n        if (this.touch) {\r\n            toggle(false);\r\n            return;\r\n        }\r\n\r\n        // Determine percentage, if already visible\r\n        if (is.event(event)) {\r\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\r\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\r\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        // Set bounds\r\n        if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n        // Display the time a click would seek to\r\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\r\n\r\n        // Set position\r\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\r\n\r\n        // Show/hide the tooltip\r\n        // If the event is a moues in/out and percentage is inside bounds\r\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\r\n            toggle(event.type === 'mouseenter');\r\n        }\r\n    },\r\n\r\n    // Handle time change event\r\n    timeUpdate(event) {\r\n        // Only invert if only one time element is displayed and used for both duration and currentTime\r\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\r\n\r\n        // Duration\r\n        controls.updateTimeDisplay.call(\r\n            this,\r\n            this.elements.display.currentTime,\r\n            invert ? this.duration - this.currentTime : this.currentTime,\r\n            invert,\r\n        );\r\n\r\n        // Ignore updates while seeking\r\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\r\n            return;\r\n        }\r\n\r\n        // Playing progress\r\n        controls.updateProgress.call(this, event);\r\n    },\r\n\r\n    // Show the duration on metadataloaded or durationchange events\r\n    durationUpdate() {\r\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\r\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\r\n            return;\r\n        }\r\n\r\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\r\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\r\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\r\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\r\n        if (this.duration >= 2 ** 32) {\r\n            toggleHidden(this.elements.display.currentTime, true);\r\n            toggleHidden(this.elements.progress, true);\r\n            return;\r\n        }\r\n\r\n        // Update ARIA values\r\n        if (is.element(this.elements.inputs.seek)) {\r\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\r\n        }\r\n\r\n        // If there's a spot to display duration\r\n        const hasDuration = is.element(this.elements.display.duration);\r\n\r\n        // If there's only one time display, display duration there\r\n        if (!hasDuration && this.config.displayDuration && this.paused) {\r\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\r\n        }\r\n\r\n        // If there's a duration element, update content\r\n        if (hasDuration) {\r\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\r\n        }\r\n\r\n        // Update the tooltip (if visible)\r\n        controls.updateSeekTooltip.call(this);\r\n    },\r\n\r\n    // Hide/show a tab\r\n    toggleMenuButton(setting, toggle) {\r\n        toggleHidden(this.elements.settings.buttons[setting], !toggle);\r\n    },\r\n\r\n    // Update the selected setting\r\n    updateSetting(setting, container, input) {\r\n        const pane = this.elements.settings.panels[setting];\r\n        let value = null;\r\n        let list = container;\r\n\r\n        if (setting === 'captions') {\r\n            value = this.currentTrack;\r\n        } else {\r\n            value = !is.empty(input) ? input : this[setting];\r\n\r\n            // Get default\r\n            if (is.empty(value)) {\r\n                value = this.config[setting].default;\r\n            }\r\n\r\n            // Unsupported value\r\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\r\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\r\n                return;\r\n            }\r\n\r\n            // Disabled value\r\n            if (!this.config[setting].options.includes(value)) {\r\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Get the list if we need to\r\n        if (!is.element(list)) {\r\n            list = pane && pane.querySelector('[role=\"menu\"]');\r\n        }\r\n\r\n        // If there's no list it means it's not been rendered...\r\n        if (!is.element(list)) {\r\n            return;\r\n        }\r\n\r\n        // Update the label\r\n        const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\r\n        label.innerHTML = controls.getLabel.call(this, setting, value);\r\n\r\n        // Find the radio option and check it\r\n        const target = list && list.querySelector(`[value=\"${value}\"]`);\r\n\r\n        if (is.element(target)) {\r\n            target.checked = true;\r\n        }\r\n    },\r\n\r\n    // Translate a value into a nice label\r\n    getLabel(setting, value) {\r\n        switch (setting) {\r\n            case 'speed':\r\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\r\n\r\n            case 'quality':\r\n                if (is.number(value)) {\r\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\r\n\r\n                    if (!label.length) {\r\n                        return `${value}p`;\r\n                    }\r\n\r\n                    return label;\r\n                }\r\n\r\n                return toTitleCase(value);\r\n\r\n            case 'captions':\r\n                return captions.getLabel.call(this);\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    },\r\n\r\n    // Set the quality menu\r\n    setQualityMenu(options) {\r\n        // Menu required\r\n        if (!is.element(this.elements.settings.panels.quality)) {\r\n            return;\r\n        }\r\n\r\n        const type = 'quality';\r\n        const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\r\n\r\n        // Set options if passed and filter based on uniqueness and config\r\n        if (is.array(options)) {\r\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\r\n        }\r\n\r\n        // Toggle the pane and tab\r\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\r\n        controls.toggleMenuButton.call(this, type, toggle);\r\n\r\n        // Empty the menu\r\n        emptyElement(list);\r\n\r\n        // Check if we need to toggle the parent\r\n        controls.checkMenu.call(this);\r\n\r\n        // If we're hiding, nothing more to do\r\n        if (!toggle) {\r\n            return;\r\n        }\r\n\r\n        // Get the badge HTML for HD, 4K etc\r\n        const getBadge = quality => {\r\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\r\n\r\n            if (!label.length) {\r\n                return null;\r\n            }\r\n\r\n            return controls.createBadge.call(this, label);\r\n        };\r\n\r\n        // Sort options by the config and then render options\r\n        this.options.quality\r\n            .sort((a, b) => {\r\n                const sorting = this.config.quality.options;\r\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\r\n            })\r\n            .forEach(quality => {\r\n                controls.createMenuItem.call(this, {\r\n                    value: quality,\r\n                    list,\r\n                    type,\r\n                    title: controls.getLabel.call(this, 'quality', quality),\r\n                    badge: getBadge(quality),\r\n                });\r\n            });\r\n\r\n        controls.updateSetting.call(this, type, list);\r\n    },\r\n\r\n    // Set the looping options\r\n    /* setLoopMenu() {\r\n        // Menu required\r\n        if (!is.element(this.elements.settings.panels.loop)) {\r\n            return;\r\n        }\r\n\r\n        const options = ['start', 'end', 'all', 'reset'];\r\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\r\n\r\n        // Show the pane and tab\r\n        toggleHidden(this.elements.settings.buttons.loop, false);\r\n        toggleHidden(this.elements.settings.panels.loop, false);\r\n\r\n        // Toggle the pane and tab\r\n        const toggle = !is.empty(this.loop.options);\r\n        controls.toggleMenuButton.call(this, 'loop', toggle);\r\n\r\n        // Empty the menu\r\n        emptyElement(list);\r\n\r\n        options.forEach(option => {\r\n            const item = createElement('li');\r\n\r\n            const button = createElement(\r\n                'button',\r\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\r\n                    type: 'button',\r\n                    class: this.config.classNames.control,\r\n                    'data-plyr-loop-action': option,\r\n                }),\r\n                i18n.get(option, this.config)\r\n            );\r\n\r\n            if (['start', 'end'].includes(option)) {\r\n                const badge = controls.createBadge.call(this, '00:00');\r\n                button.appendChild(badge);\r\n            }\r\n\r\n            item.appendChild(button);\r\n            list.appendChild(item);\r\n        });\r\n    }, */\r\n\r\n    // Get current selected caption language\r\n    // TODO: rework this to user the getter in the API?\r\n\r\n    // Set a list of available captions languages\r\n    setCaptionsMenu() {\r\n        // Menu required\r\n        if (!is.element(this.elements.settings.panels.captions)) {\r\n            return;\r\n        }\r\n\r\n        // TODO: Captions or language? Currently it's mixed\r\n        const type = 'captions';\r\n        const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\r\n        const tracks = captions.getTracks.call(this);\r\n        const toggle = Boolean(tracks.length);\r\n\r\n        // Toggle the pane and tab\r\n        controls.toggleMenuButton.call(this, type, toggle);\r\n\r\n        // Empty the menu\r\n        emptyElement(list);\r\n\r\n        // Check if we need to toggle the parent\r\n        controls.checkMenu.call(this);\r\n\r\n        // If there's no captions, bail\r\n        if (!toggle) {\r\n            return;\r\n        }\r\n\r\n        // Generate options data\r\n        const options = tracks.map((track, value) => ({\r\n            value,\r\n            checked: this.captions.toggled && this.currentTrack === value,\r\n            title: captions.getLabel.call(this, track),\r\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\r\n            list,\r\n            type: 'language',\r\n        }));\r\n\r\n        // Add the \"Disabled\" option to turn off captions\r\n        options.unshift({\r\n            value: -1,\r\n            checked: !this.captions.toggled,\r\n            title: i18n.get('disabled', this.config),\r\n            list,\r\n            type: 'language',\r\n        });\r\n\r\n        // Generate options\r\n        options.forEach(controls.createMenuItem.bind(this));\r\n\r\n        controls.updateSetting.call(this, type, list);\r\n    },\r\n\r\n    // Set a list of available captions languages\r\n    setSpeedMenu(options) {\r\n        // Menu required\r\n        if (!is.element(this.elements.settings.panels.speed)) {\r\n            return;\r\n        }\r\n\r\n        const type = 'speed';\r\n        const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\r\n\r\n        // Set the speed options\r\n        if (is.array(options)) {\r\n            this.options.speed = options;\r\n        } else if (this.isHTML5 || this.isVimeo) {\r\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\r\n        }\r\n\r\n        // Set options if passed and filter based on config\r\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\r\n\r\n        // Toggle the pane and tab\r\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\r\n        controls.toggleMenuButton.call(this, type, toggle);\r\n\r\n        // Empty the menu\r\n        emptyElement(list);\r\n\r\n        // Check if we need to toggle the parent\r\n        controls.checkMenu.call(this);\r\n\r\n        // If we're hiding, nothing more to do\r\n        if (!toggle) {\r\n            return;\r\n        }\r\n\r\n        // Create items\r\n        this.options.speed.forEach(speed => {\r\n            controls.createMenuItem.call(this, {\r\n                value: speed,\r\n                list,\r\n                type,\r\n                title: controls.getLabel.call(this, 'speed', speed),\r\n            });\r\n        });\r\n\r\n        controls.updateSetting.call(this, type, list);\r\n    },\r\n\r\n    // Check if we need to hide/show the settings menu\r\n    checkMenu() {\r\n        const { buttons } = this.elements.settings;\r\n        const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\r\n\r\n        toggleHidden(this.elements.settings.menu, !visible);\r\n    },\r\n\r\n    // Focus the first menu item in a given (or visible) menu\r\n    focusFirstMenuItem(pane, tabFocus = false) {\r\n        if (this.elements.settings.popup.hidden) {\r\n            return;\r\n        }\r\n\r\n        let target = pane;\r\n\r\n        if (!is.element(target)) {\r\n            target = Object.values(this.elements.settings.panels).find(pane => !pane.hidden);\r\n        }\r\n\r\n        const firstItem = target.querySelector('[role^=\"menuitem\"]');\r\n\r\n        setFocus.call(this, firstItem, tabFocus);\r\n    },\r\n\r\n    // Show/hide menu\r\n    toggleMenu(input) {\r\n        const { popup } = this.elements.settings;\r\n        const button = this.elements.buttons.settings;\r\n\r\n        // Menu and button are required\r\n        if (!is.element(popup) || !is.element(button)) {\r\n            return;\r\n        }\r\n\r\n        // True toggle by default\r\n        const { hidden } = popup;\r\n        let show = hidden;\r\n\r\n        if (is.boolean(input)) {\r\n            show = input;\r\n        } else if (is.keyboardEvent(input) && input.which === 27) {\r\n            show = false;\r\n        } else if (is.event(input)) {\r\n            const isMenuItem = popup.contains(input.target);\r\n\r\n            // If the click was inside the menu or if the click\r\n            // wasn't the button or menu item and we're trying to\r\n            // show the menu (a doc click shouldn't show the menu)\r\n            if (isMenuItem || (!isMenuItem && input.target !== button && show)) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Set button attributes\r\n        button.setAttribute('aria-expanded', show);\r\n\r\n        // Show the actual popup\r\n        toggleHidden(popup, !show);\r\n\r\n        // Add class hook\r\n        toggleClass(this.elements.container, this.config.classNames.menu.open, show);\r\n\r\n        // Focus the first item if key interaction\r\n        if (show && is.keyboardEvent(input)) {\r\n            controls.focusFirstMenuItem.call(this, null, true);\r\n        } else if (!show && !hidden) {\r\n            // If closing, re-focus the button\r\n            setFocus.call(this, button, is.keyboardEvent(input));\r\n        }\r\n    },\r\n\r\n    // Get the natural size of a menu panel\r\n    getMenuSize(tab) {\r\n        const clone = tab.cloneNode(true);\r\n        clone.style.position = 'absolute';\r\n        clone.style.opacity = 0;\r\n        clone.removeAttribute('hidden');\r\n\r\n        // Append to parent so we get the \"real\" size\r\n        tab.parentNode.appendChild(clone);\r\n\r\n        // Get the sizes before we remove\r\n        const width = clone.scrollWidth;\r\n        const height = clone.scrollHeight;\r\n\r\n        // Remove from the DOM\r\n        removeElement(clone);\r\n\r\n        return {\r\n            width,\r\n            height,\r\n        };\r\n    },\r\n\r\n    // Show a panel in the menu\r\n    showMenuPanel(type = '', tabFocus = false) {\r\n        const target = document.getElementById(`plyr-settings-${this.id}-${type}`);\r\n\r\n        // Nothing to show, bail\r\n        if (!is.element(target)) {\r\n            return;\r\n        }\r\n\r\n        // Hide all other panels\r\n        const container = target.parentNode;\r\n        const current = Array.from(container.children).find(node => !node.hidden);\r\n\r\n        // If we can do fancy animations, we'll animate the height/width\r\n        if (support.transitions && !support.reducedMotion) {\r\n            // Set the current width as a base\r\n            container.style.width = `${current.scrollWidth}px`;\r\n            container.style.height = `${current.scrollHeight}px`;\r\n\r\n            // Get potential sizes\r\n            const size = controls.getMenuSize.call(this, target);\r\n\r\n            // Restore auto height/width\r\n            const restore = event => {\r\n                // We're only bothered about height and width on the container\r\n                if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\r\n                    return;\r\n                }\r\n\r\n                // Revert back to auto\r\n                container.style.width = '';\r\n                container.style.height = '';\r\n\r\n                // Only listen once\r\n                off.call(this, container, transitionEndEvent, restore);\r\n            };\r\n\r\n            // Listen for the transition finishing and restore auto height/width\r\n            on.call(this, container, transitionEndEvent, restore);\r\n\r\n            // Set dimensions to target\r\n            container.style.width = `${size.width}px`;\r\n            container.style.height = `${size.height}px`;\r\n        }\r\n\r\n        // Set attributes on current tab\r\n        toggleHidden(current, true);\r\n\r\n        // Set attributes on target\r\n        toggleHidden(target, false);\r\n\r\n        // Focus the first item\r\n        controls.focusFirstMenuItem.call(this, target, tabFocus);\r\n    },\r\n\r\n    // Set the download link\r\n    setDownloadLink() {\r\n        const button = this.elements.buttons.download;\r\n\r\n        // Bail if no button\r\n        if (!is.element(button)) {\r\n            return;\r\n        }\r\n\r\n        // Set download link\r\n        button.setAttribute('href', this.download);\r\n    },\r\n\r\n    // Build the default HTML\r\n    // TODO: Set order based on order in the config.controls array?\r\n    create(data) {\r\n        // Create the container\r\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\r\n\r\n        // Restart button\r\n        if (this.config.controls.includes('restart')) {\r\n            container.appendChild(controls.createButton.call(this, 'restart'));\r\n        }\r\n\r\n        // Rewind button\r\n        if (this.config.controls.includes('rewind')) {\r\n            container.appendChild(controls.createButton.call(this, 'rewind'));\r\n        }\r\n\r\n        // Play/Pause button\r\n        if (this.config.controls.includes('play')) {\r\n            container.appendChild(controls.createButton.call(this, 'play'));\r\n        }\r\n\r\n        // Fast forward button\r\n        if (this.config.controls.includes('fast-forward')) {\r\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\r\n        }\r\n\r\n        // Progress\r\n        if (this.config.controls.includes('progress')) {\r\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\r\n\r\n            // Seek range slider\r\n            progress.appendChild(\r\n                controls.createRange.call(this, 'seek', {\r\n                    id: `plyr-seek-${data.id}`,\r\n                }),\r\n            );\r\n\r\n            // Buffer progress\r\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\r\n\r\n            // TODO: Add loop display indicator\r\n\r\n            // Seek tooltip\r\n            if (this.config.tooltips.seek) {\r\n                const tooltip = createElement(\r\n                    'span',\r\n                    {\r\n                        class: this.config.classNames.tooltip,\r\n                    },\r\n                    '00:00',\r\n                );\r\n\r\n                progress.appendChild(tooltip);\r\n                this.elements.display.seekTooltip = tooltip;\r\n            }\r\n\r\n            this.elements.progress = progress;\r\n            container.appendChild(this.elements.progress);\r\n        }\r\n\r\n        // Media current time display\r\n        if (this.config.controls.includes('current-time')) {\r\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\r\n        }\r\n\r\n        // Media duration display\r\n        if (this.config.controls.includes('duration')) {\r\n            container.appendChild(controls.createTime.call(this, 'duration'));\r\n        }\r\n\r\n        // Volume controls\r\n        if (this.config.controls.includes('mute') || this.config.controls.includes('volume')) {\r\n            const volume = createElement('div', {\r\n                class: 'plyr__volume',\r\n            });\r\n\r\n            // Toggle mute button\r\n            if (this.config.controls.includes('mute')) {\r\n                volume.appendChild(controls.createButton.call(this, 'mute'));\r\n            }\r\n\r\n            // Volume range control\r\n            if (this.config.controls.includes('volume')) {\r\n                // Set the attributes\r\n                const attributes = {\r\n                    max: 1,\r\n                    step: 0.05,\r\n                    value: this.config.volume,\r\n                };\r\n\r\n                // Create the volume range slider\r\n                volume.appendChild(\r\n                    controls.createRange.call(\r\n                        this,\r\n                        'volume',\r\n                        extend(attributes, {\r\n                            id: `plyr-volume-${data.id}`,\r\n                        }),\r\n                    ),\r\n                );\r\n\r\n                this.elements.volume = volume;\r\n            }\r\n\r\n            container.appendChild(volume);\r\n        }\r\n\r\n        // Toggle captions button\r\n        if (this.config.controls.includes('captions')) {\r\n            container.appendChild(controls.createButton.call(this, 'captions'));\r\n        }\r\n\r\n        // Settings button / menu\r\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\r\n            const control = createElement('div', {\r\n                class: 'plyr__menu',\r\n                hidden: '',\r\n            });\r\n\r\n            control.appendChild(\r\n                controls.createButton.call(this, 'settings', {\r\n                    'aria-haspopup': true,\r\n                    'aria-controls': `plyr-settings-${data.id}`,\r\n                    'aria-expanded': false,\r\n                }),\r\n            );\r\n\r\n            const popup = createElement('div', {\r\n                class: 'plyr__menu__container',\r\n                id: `plyr-settings-${data.id}`,\r\n                hidden: '',\r\n            });\r\n\r\n            const inner = createElement('div');\r\n\r\n            const home = createElement('div', {\r\n                id: `plyr-settings-${data.id}-home`,\r\n            });\r\n\r\n            // Create the menu\r\n            const menu = createElement('div', {\r\n                role: 'menu',\r\n            });\r\n\r\n            home.appendChild(menu);\r\n            inner.appendChild(home);\r\n            this.elements.settings.panels.home = home;\r\n\r\n            // Build the menu items\r\n            this.config.settings.forEach(type => {\r\n                // TODO: bundle this with the createMenuItem helper and bindings\r\n                const menuItem = createElement(\r\n                    'button',\r\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\r\n                        type: 'button',\r\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\r\n                        role: 'menuitem',\r\n                        'aria-haspopup': true,\r\n                        hidden: '',\r\n                    }),\r\n                );\r\n\r\n                // Bind menu shortcuts for keyboard users\r\n                controls.bindMenuItemShortcuts.call(this, menuItem, type);\r\n\r\n                // Show menu on click\r\n                on(menuItem, 'click', () => {\r\n                    controls.showMenuPanel.call(this, type, false);\r\n                });\r\n\r\n                const flex = createElement('span', null, i18n.get(type, this.config));\r\n\r\n                const value = createElement('span', {\r\n                    class: this.config.classNames.menu.value,\r\n                });\r\n\r\n                // Speed contains HTML entities\r\n                value.innerHTML = data[type];\r\n\r\n                flex.appendChild(value);\r\n                menuItem.appendChild(flex);\r\n                menu.appendChild(menuItem);\r\n\r\n                // Build the panes\r\n                const pane = createElement('div', {\r\n                    id: `plyr-settings-${data.id}-${type}`,\r\n                    hidden: '',\r\n                });\r\n\r\n                // Back button\r\n                const backButton = createElement('button', {\r\n                    type: 'button',\r\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\r\n                });\r\n\r\n                // Visible label\r\n                backButton.appendChild(\r\n                    createElement(\r\n                        'span',\r\n                        {\r\n                            'aria-hidden': true,\r\n                        },\r\n                        i18n.get(type, this.config),\r\n                    ),\r\n                );\r\n\r\n                // Screen reader label\r\n                backButton.appendChild(\r\n                    createElement(\r\n                        'span',\r\n                        {\r\n                            class: this.config.classNames.hidden,\r\n                        },\r\n                        i18n.get('menuBack', this.config),\r\n                    ),\r\n                );\r\n\r\n                // Go back via keyboard\r\n                on(\r\n                    pane,\r\n                    'keydown',\r\n                    event => {\r\n                        // We only care about <-\r\n                        if (event.which !== 37) {\r\n                            return;\r\n                        }\r\n\r\n                        // Prevent seek\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n\r\n                        // Show the respective menu\r\n                        controls.showMenuPanel.call(this, 'home', true);\r\n                    },\r\n                    false,\r\n                );\r\n\r\n                // Go back via button click\r\n                on(backButton, 'click', () => {\r\n                    controls.showMenuPanel.call(this, 'home', false);\r\n                });\r\n\r\n                // Add to pane\r\n                pane.appendChild(backButton);\r\n\r\n                // Menu\r\n                pane.appendChild(\r\n                    createElement('div', {\r\n                        role: 'menu',\r\n                    }),\r\n                );\r\n\r\n                inner.appendChild(pane);\r\n\r\n                this.elements.settings.buttons[type] = menuItem;\r\n                this.elements.settings.panels[type] = pane;\r\n            });\r\n\r\n            popup.appendChild(inner);\r\n            control.appendChild(popup);\r\n            container.appendChild(control);\r\n\r\n            this.elements.settings.popup = popup;\r\n            this.elements.settings.menu = control;\r\n        }\r\n\r\n        // Picture in picture button\r\n        if (this.config.controls.includes('pip') && support.pip) {\r\n            container.appendChild(controls.createButton.call(this, 'pip'));\r\n        }\r\n\r\n        // Airplay button\r\n        if (this.config.controls.includes('airplay') && support.airplay) {\r\n            container.appendChild(controls.createButton.call(this, 'airplay'));\r\n        }\r\n\r\n        // Download button\r\n        if (this.config.controls.includes('download')) {\r\n            const attributes = {\r\n                element: 'a',\r\n                href: this.download,\r\n                target: '_blank',\r\n            };\r\n\r\n            const { download } = this.config.urls;\r\n\r\n            if (!is.url(download) && this.isEmbed) {\r\n                extend(attributes, {\r\n                    icon: `logo-${this.provider}`,\r\n                    label: this.provider,\r\n                });\r\n            }\r\n\r\n            container.appendChild(controls.createButton.call(this, 'download', attributes));\r\n        }\r\n\r\n        // Toggle fullscreen button\r\n        if (this.config.controls.includes('fullscreen')) {\r\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\r\n        }\r\n\r\n        // Larger overlaid play button\r\n        if (this.config.controls.includes('play-large')) {\r\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\r\n        }\r\n\r\n        this.elements.controls = container;\r\n\r\n        // Set available quality levels\r\n        if (this.isHTML5) {\r\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\r\n        }\r\n\r\n        controls.setSpeedMenu.call(this);\r\n\r\n        return container;\r\n    },\r\n\r\n    // Insert controls\r\n    inject() {\r\n        // Sprite\r\n        if (this.config.loadSprite) {\r\n            const icon = controls.getIconUrl.call(this);\r\n\r\n            // Only load external sprite using AJAX\r\n            if (icon.cors) {\r\n                loadSprite(icon.url, 'sprite-plyr');\r\n            }\r\n        }\r\n\r\n        // Create a unique ID\r\n        this.id = Math.floor(Math.random() * 10000);\r\n\r\n        // Null by default\r\n        let container = null;\r\n        this.elements.controls = null;\r\n\r\n        // Set template properties\r\n        const props = {\r\n            id: this.id,\r\n            seektime: this.config.seekTime,\r\n            title: this.config.title,\r\n        };\r\n        let update = true;\r\n\r\n        // If function, run it and use output\r\n        if (is.function(this.config.controls)) {\r\n            this.config.controls = this.config.controls.call(this.props);\r\n        }\r\n\r\n        // Convert falsy controls to empty array (primarily for empty strings)\r\n        if (!this.config.controls) {\r\n            this.config.controls = [];\r\n        }\r\n\r\n        if (is.element(this.config.controls) || is.string(this.config.controls)) {\r\n            // HTMLElement or Non-empty string passed as the option\r\n            container = this.config.controls;\r\n        } else {\r\n            // Create controls\r\n            container = controls.create.call(this, {\r\n                id: this.id,\r\n                seektime: this.config.seekTime,\r\n                speed: this.speed,\r\n                quality: this.quality,\r\n                captions: captions.getLabel.call(this),\r\n                // TODO: Looping\r\n                // loop: 'None',\r\n            });\r\n            update = false;\r\n        }\r\n\r\n        // Replace props with their value\r\n        const replace = input => {\r\n            let result = input;\r\n\r\n            Object.entries(props).forEach(([key, value]) => {\r\n                result = replaceAll(result, `{${key}}`, value);\r\n            });\r\n\r\n            return result;\r\n        };\r\n\r\n        // Update markup\r\n        if (update) {\r\n            if (is.string(this.config.controls)) {\r\n                container = replace(container);\r\n            } else if (is.element(container)) {\r\n                container.innerHTML = replace(container.innerHTML);\r\n            }\r\n        }\r\n\r\n        // Controls container\r\n        let target;\r\n\r\n        // Inject to custom location\r\n        if (is.string(this.config.selectors.controls.container)) {\r\n            target = document.querySelector(this.config.selectors.controls.container);\r\n        }\r\n\r\n        // Inject into the container by default\r\n        if (!is.element(target)) {\r\n            target = this.elements.container;\r\n        }\r\n\r\n        // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\r\n        const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\r\n        target[insertMethod]('afterbegin', container);\r\n\r\n        // Find the elements if need be\r\n        if (!is.element(this.elements.controls)) {\r\n            controls.findElements.call(this);\r\n        }\r\n\r\n        // Add pressed property to buttons\r\n        if (!is.empty(this.elements.buttons)) {\r\n            const addProperty = button => {\r\n                const className = this.config.classNames.controlPressed;\r\n                Object.defineProperty(button, 'pressed', {\r\n                    enumerable: true,\r\n                    get() {\r\n                        return hasClass(button, className);\r\n                    },\r\n                    set(pressed = false) {\r\n                        toggleClass(button, className, pressed);\r\n                    },\r\n                });\r\n            };\r\n\r\n            // Toggle classname when pressed property is set\r\n            Object.values(this.elements.buttons)\r\n                .filter(Boolean)\r\n                .forEach(button => {\r\n                    if (is.array(button) || is.nodeList(button)) {\r\n                        Array.from(button).filter(Boolean).forEach(addProperty);\r\n                    } else {\r\n                        addProperty(button);\r\n                    }\r\n                });\r\n        }\r\n\r\n        // Edge sometimes doesn't finish the paint so force a redraw\r\n        if (window.navigator.userAgent.includes('Edge')) {\r\n            repaint(target);\r\n        }\r\n\r\n        // Setup tooltips\r\n        if (this.config.tooltips.controls) {\r\n            const { classNames, selectors } = this.config;\r\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\r\n            const labels = getElements.call(this, selector);\r\n\r\n            Array.from(labels).forEach(label => {\r\n                toggleClass(label, this.config.classNames.hidden, false);\r\n                toggleClass(label, this.config.classNames.tooltip, true);\r\n            });\r\n        }\r\n    },\r\n};\r\n\r\nexport default controls;\r\n","// ==========================================================================\r\n// URL utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n/**\r\n * Parse a string to a URL object\r\n * @param {string} input - the URL to be parsed\r\n * @param {boolean} safe - failsafe parsing\r\n */\r\nexport function parseUrl(input, safe = true) {\r\n    let url = input;\r\n\r\n    if (safe) {\r\n        const parser = document.createElement('a');\r\n        parser.href = url;\r\n        url = parser.href;\r\n    }\r\n\r\n    try {\r\n        return new URL(url);\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n}\r\n\r\n// Convert object to URLSearchParams\r\nexport function buildUrlParams(input) {\r\n    const params = new URLSearchParams();\r\n\r\n    if (is.object(input)) {\r\n        Object.entries(input).forEach(([key, value]) => {\r\n            params.set(key, value);\r\n        });\r\n    }\r\n\r\n    return params;\r\n}\r\n","// ==========================================================================\r\n// Plyr Captions\r\n// TODO: Create as class\r\n// ==========================================================================\r\n\r\nimport controls from './controls';\r\nimport support from './support';\r\nimport { dedupe } from './utils/arrays';\r\nimport browser from './utils/browser';\r\nimport {\r\n    createElement,\r\n    emptyElement,\r\n    getAttributesFromSelector,\r\n    insertAfter,\r\n    removeElement,\r\n    toggleClass,\r\n} from './utils/elements';\r\nimport { on, triggerEvent } from './utils/events';\r\nimport fetch from './utils/fetch';\r\nimport i18n from './utils/i18n';\r\nimport is from './utils/is';\r\nimport { getHTML } from './utils/strings';\r\nimport { parseUrl } from './utils/urls';\r\n\r\nconst captions = {\r\n    // Setup captions\r\n    setup() {\r\n        // Requires UI support\r\n        if (!this.supported.ui) {\r\n            return;\r\n        }\r\n\r\n        // Only Vimeo and HTML5 video supported at this point\r\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\r\n            // Clear menu and hide\r\n            if (\r\n                is.array(this.config.controls) &&\r\n                this.config.controls.includes('settings') &&\r\n                this.config.settings.includes('captions')\r\n            ) {\r\n                controls.setCaptionsMenu.call(this);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Inject the container\r\n        if (!is.element(this.elements.captions)) {\r\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\r\n\r\n            insertAfter(this.elements.captions, this.elements.wrapper);\r\n        }\r\n\r\n        // Fix IE captions if CORS is used\r\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\r\n        if (browser.isIE && window.URL) {\r\n            const elements = this.media.querySelectorAll('track');\r\n\r\n            Array.from(elements).forEach(track => {\r\n                const src = track.getAttribute('src');\r\n                const url = parseUrl(src);\r\n\r\n                if (\r\n                    url !== null &&\r\n                    url.hostname !== window.location.href.hostname &&\r\n                    ['http:', 'https:'].includes(url.protocol)\r\n                ) {\r\n                    fetch(src, 'blob')\r\n                        .then(blob => {\r\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\r\n                        })\r\n                        .catch(() => {\r\n                            removeElement(track);\r\n                        });\r\n                }\r\n            });\r\n        }\r\n\r\n        // Get and set initial data\r\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\r\n        // * languages: Array of user's browser languages.\r\n        // * language:  The language preferred by user settings or config\r\n        // * active:    The state preferred by user settings or config\r\n        // * toggled:   The real captions state\r\n\r\n        const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\r\n        const languages = dedupe(browserLanguages.map(language => language.split('-')[0]));\r\n\r\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\r\n\r\n        // Use first browser language when language is 'auto'\r\n        if (language === 'auto') {\r\n            [language] = languages;\r\n        }\r\n\r\n        let active = this.storage.get('captions');\r\n        if (!is.boolean(active)) {\r\n            ({ active } = this.config.captions);\r\n        }\r\n\r\n        Object.assign(this.captions, {\r\n            toggled: false,\r\n            active,\r\n            language,\r\n            languages,\r\n        });\r\n\r\n        // Watch changes to textTracks and update captions menu\r\n        if (this.isHTML5) {\r\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\r\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\r\n        }\r\n\r\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\r\n        setTimeout(captions.update.bind(this), 0);\r\n    },\r\n\r\n    // Update available language options in settings based on tracks\r\n    update() {\r\n        const tracks = captions.getTracks.call(this, true);\r\n        // Get the wanted language\r\n        const { active, language, meta, currentTrackNode } = this.captions;\r\n        const languageExists = Boolean(tracks.find(track => track.language === language));\r\n\r\n        // Handle tracks (add event listener and \"pseudo\"-default)\r\n        if (this.isHTML5 && this.isVideo) {\r\n            tracks.filter(track => !meta.get(track)).forEach(track => {\r\n                this.debug.log('Track added', track);\r\n                // Attempt to store if the original dom element was \"default\"\r\n                meta.set(track, {\r\n                    default: track.mode === 'showing',\r\n                });\r\n\r\n                // Turn off native caption rendering to avoid double captions\r\n                track.mode = 'hidden';\r\n\r\n                // Add event listener for cue changes\r\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\r\n            });\r\n        }\r\n\r\n        // Update language first time it matches, or if the previous matching track was removed\r\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\r\n            captions.setLanguage.call(this, language);\r\n            captions.toggle.call(this, active && languageExists);\r\n        }\r\n\r\n        // Enable or disable captions based on track length\r\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\r\n\r\n        // Update available languages in list\r\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\r\n            controls.setCaptionsMenu.call(this);\r\n        }\r\n    },\r\n\r\n    // Toggle captions display\r\n    // Used internally for the toggleCaptions method, with the passive option forced to false\r\n    toggle(input, passive = true) {\r\n        // If there's no full support\r\n        if (!this.supported.ui) {\r\n            return;\r\n        }\r\n\r\n        const { toggled } = this.captions; // Current state\r\n        const activeClass = this.config.classNames.captions.active;\r\n\r\n        // Get the next state\r\n        // If the method is called without parameter, toggle based on current value\r\n        const active = is.nullOrUndefined(input) ? !toggled : input;\r\n\r\n        // Update state and trigger event\r\n        if (active !== toggled) {\r\n            // When passive, don't override user preferences\r\n            if (!passive) {\r\n                this.captions.active = active;\r\n                this.storage.set({ captions: active });\r\n            }\r\n\r\n            // Force language if the call isn't passive and there is no matching language to toggle to\r\n            if (!this.language && active && !passive) {\r\n                const tracks = captions.getTracks.call(this);\r\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\r\n\r\n                // Override user preferences to avoid switching languages if a matching track is added\r\n                this.captions.language = track.language;\r\n\r\n                // Set caption, but don't store in localStorage as user preference\r\n                captions.set.call(this, tracks.indexOf(track));\r\n                return;\r\n            }\r\n\r\n            // Toggle button if it's enabled\r\n            if (this.elements.buttons.captions) {\r\n                this.elements.buttons.captions.pressed = active;\r\n            }\r\n\r\n            // Add class hook\r\n            toggleClass(this.elements.container, activeClass, active);\r\n\r\n            this.captions.toggled = active;\r\n\r\n            // Update settings menu\r\n            controls.updateSetting.call(this, 'captions');\r\n\r\n            // Trigger event (not used internally)\r\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\r\n        }\r\n    },\r\n\r\n    // Set captions by track index\r\n    // Used internally for the currentTrack setter with the passive option forced to false\r\n    set(index, passive = true) {\r\n        const tracks = captions.getTracks.call(this);\r\n\r\n        // Disable captions if setting to -1\r\n        if (index === -1) {\r\n            captions.toggle.call(this, false, passive);\r\n            return;\r\n        }\r\n\r\n        if (!is.number(index)) {\r\n            this.debug.warn('Invalid caption argument', index);\r\n            return;\r\n        }\r\n\r\n        if (!(index in tracks)) {\r\n            this.debug.warn('Track not found', index);\r\n            return;\r\n        }\r\n\r\n        if (this.captions.currentTrack !== index) {\r\n            this.captions.currentTrack = index;\r\n            const track = tracks[index];\r\n            const { language } = track || {};\r\n\r\n            // Store reference to node for invalidation on remove\r\n            this.captions.currentTrackNode = track;\r\n\r\n            // Update settings menu\r\n            controls.updateSetting.call(this, 'captions');\r\n\r\n            // When passive, don't override user preferences\r\n            if (!passive) {\r\n                this.captions.language = language;\r\n                this.storage.set({ language });\r\n            }\r\n\r\n            // Handle Vimeo captions\r\n            if (this.isVimeo) {\r\n                this.embed.enableTextTrack(language);\r\n            }\r\n\r\n            // Trigger event\r\n            triggerEvent.call(this, this.media, 'languagechange');\r\n        }\r\n\r\n        // Show captions\r\n        captions.toggle.call(this, true, passive);\r\n\r\n        if (this.isHTML5 && this.isVideo) {\r\n            // If we change the active track while a cue is already displayed we need to update it\r\n            captions.updateCues.call(this);\r\n        }\r\n    },\r\n\r\n    // Set captions by language\r\n    // Used internally for the language setter with the passive option forced to false\r\n    setLanguage(input, passive = true) {\r\n        if (!is.string(input)) {\r\n            this.debug.warn('Invalid language argument', input);\r\n            return;\r\n        }\r\n        // Normalize\r\n        const language = input.toLowerCase();\r\n        this.captions.language = language;\r\n\r\n        // Set currentTrack\r\n        const tracks = captions.getTracks.call(this);\r\n        const track = captions.findTrack.call(this, [language]);\r\n        captions.set.call(this, tracks.indexOf(track), passive);\r\n    },\r\n\r\n    // Get current valid caption tracks\r\n    // If update is false it will also ignore tracks without metadata\r\n    // This is used to \"freeze\" the language options when captions.update is false\r\n    getTracks(update = false) {\r\n        // Handle media or textTracks missing or null\r\n        const tracks = Array.from((this.media || {}).textTracks || []);\r\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\r\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\r\n        return tracks\r\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\r\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\r\n    },\r\n\r\n    // Match tracks based on languages and get the first\r\n    findTrack(languages, force = false) {\r\n        const tracks = captions.getTracks.call(this);\r\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\r\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\r\n        let track;\r\n        languages.every(language => {\r\n            track = sorted.find(track => track.language === language);\r\n            return !track; // Break iteration if there is a match\r\n        });\r\n        // If no match is found but is required, get first\r\n        return track || (force ? sorted[0] : undefined);\r\n    },\r\n\r\n    // Get the current track\r\n    getCurrentTrack() {\r\n        return captions.getTracks.call(this)[this.currentTrack];\r\n    },\r\n\r\n    // Get UI label for track\r\n    getLabel(track) {\r\n        let currentTrack = track;\r\n\r\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\r\n            currentTrack = captions.getCurrentTrack.call(this);\r\n        }\r\n\r\n        if (is.track(currentTrack)) {\r\n            if (!is.empty(currentTrack.label)) {\r\n                return currentTrack.label;\r\n            }\r\n\r\n            if (!is.empty(currentTrack.language)) {\r\n                return track.language.toUpperCase();\r\n            }\r\n\r\n            return i18n.get('enabled', this.config);\r\n        }\r\n\r\n        return i18n.get('disabled', this.config);\r\n    },\r\n\r\n    // Update captions using current track's active cues\r\n    // Also optional array argument in case there isn't any track (ex: vimeo)\r\n    updateCues(input) {\r\n        // Requires UI\r\n        if (!this.supported.ui) {\r\n            return;\r\n        }\r\n\r\n        if (!is.element(this.elements.captions)) {\r\n            this.debug.warn('No captions element to render to');\r\n            return;\r\n        }\r\n\r\n        // Only accept array or empty input\r\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\r\n            this.debug.warn('updateCues: Invalid input', input);\r\n            return;\r\n        }\r\n\r\n        let cues = input;\r\n\r\n        // Get cues from track\r\n        if (!cues) {\r\n            const track = captions.getCurrentTrack.call(this);\r\n            cues = Array.from((track || {}).activeCues || [])\r\n                .map(cue => cue.getCueAsHTML())\r\n                .map(getHTML);\r\n        }\r\n\r\n        // Set new caption text\r\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\r\n        const changed = content !== this.elements.captions.innerHTML;\r\n\r\n        if (changed) {\r\n            // Empty the container and create a new child element\r\n            emptyElement(this.elements.captions);\r\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\r\n            caption.innerHTML = content;\r\n            this.elements.captions.appendChild(caption);\r\n\r\n            // Trigger event\r\n            triggerEvent.call(this, this.media, 'cuechange');\r\n        }\r\n    },\r\n};\r\n\r\nexport default captions;\r\n","// ==========================================================================\r\n// Plyr default config\r\n// ==========================================================================\r\n\r\nconst defaults = {\r\n    // Disable\r\n    enabled: true,\r\n\r\n    // Custom media title\r\n    title: '',\r\n\r\n    // Logging to console\r\n    debug: false,\r\n\r\n    // Auto play (if supported)\r\n    autoplay: false,\r\n\r\n    // Only allow one media playing at once (vimeo only)\r\n    autopause: true,\r\n\r\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\r\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\r\n    playsinline: true,\r\n\r\n    // Default time to skip when rewind/fast forward\r\n    seekTime: 10,\r\n\r\n    // Default volume\r\n    volume: 1,\r\n    muted: false,\r\n\r\n    // Pass a custom duration\r\n    duration: null,\r\n\r\n    // Display the media duration on load in the current time position\r\n    // If you have opted to display both duration and currentTime, this is ignored\r\n    displayDuration: true,\r\n\r\n    // Invert the current time to be a countdown\r\n    invertTime: true,\r\n\r\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\r\n    toggleInvert: true,\r\n\r\n    // Aspect ratio (for embeds)\r\n    ratio: '16:9',\r\n\r\n    // Click video container to play/pause\r\n    clickToPlay: true,\r\n\r\n    // Auto hide the controls\r\n    hideControls: true,\r\n\r\n    // Reset to start when playback ended\r\n    resetOnEnd: false,\r\n\r\n    // Disable the standard context menu\r\n    disableContextMenu: true,\r\n\r\n    // Sprite (for icons)\r\n    loadSprite: true,\r\n    iconPrefix: 'plyr',\r\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\r\n\r\n    // Blank video (used to prevent errors on source change)\r\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\r\n\r\n    // Quality default\r\n    quality: {\r\n        default: 576,\r\n        options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\r\n    },\r\n\r\n    // Set loops\r\n    loop: {\r\n        active: false,\r\n        // start: null,\r\n        // end: null,\r\n    },\r\n\r\n    // Speed default and options to display\r\n    speed: {\r\n        selected: 1,\r\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\r\n    },\r\n\r\n    // Keyboard shortcut settings\r\n    keyboard: {\r\n        focused: true,\r\n        global: false,\r\n    },\r\n\r\n    // Display tooltips\r\n    tooltips: {\r\n        controls: false,\r\n        seek: true,\r\n    },\r\n\r\n    // Captions settings\r\n    captions: {\r\n        active: false,\r\n        language: 'auto',\r\n        // Listen to new tracks added after Plyr is initialized.\r\n        // This is needed for streaming captions, but may result in unselectable options\r\n        update: false,\r\n    },\r\n\r\n    // Fullscreen settings\r\n    fullscreen: {\r\n        enabled: true, // Allow fullscreen?\r\n        fallback: true, // Fallback for vintage browsers\r\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\r\n    },\r\n\r\n    // Local storage\r\n    storage: {\r\n        enabled: true,\r\n        key: 'plyr',\r\n    },\r\n\r\n    // Default controls\r\n    controls: [\r\n        'play-large',\r\n        // 'restart',\r\n        // 'rewind',\r\n        'play',\r\n        // 'fast-forward',\r\n        'progress',\r\n        'current-time',\r\n        'mute',\r\n        'volume',\r\n        'captions',\r\n        'settings',\r\n        'pip',\r\n        'airplay',\r\n        // 'download',\r\n        'fullscreen',\r\n    ],\r\n    settings: ['captions', 'quality', 'speed'],\r\n\r\n    // Localisation\r\n    i18n: {\r\n        restart: 'Restart',\r\n        rewind: 'Rewind {seektime}s',\r\n        play: 'Play',\r\n        pause: 'Pause',\r\n        fastForward: 'Forward {seektime}s',\r\n        seek: 'Seek',\r\n        seekLabel: '{currentTime} of {duration}',\r\n        played: 'Played',\r\n        buffered: 'Buffered',\r\n        currentTime: 'Current time',\r\n        duration: 'Duration',\r\n        volume: 'Volume',\r\n        mute: 'Mute',\r\n        unmute: 'Unmute',\r\n        enableCaptions: 'Enable captions',\r\n        disableCaptions: 'Disable captions',\r\n        download: 'Download',\r\n        enterFullscreen: 'Enter fullscreen',\r\n        exitFullscreen: 'Exit fullscreen',\r\n        frameTitle: 'Player for {title}',\r\n        captions: 'Captions',\r\n        settings: 'Settings',\r\n        menuBack: 'Go back to previous menu',\r\n        speed: 'Speed',\r\n        normal: 'Normal',\r\n        quality: 'Quality',\r\n        loop: 'Loop',\r\n        start: 'Start',\r\n        end: 'End',\r\n        all: 'All',\r\n        reset: 'Reset',\r\n        disabled: 'Disabled',\r\n        enabled: 'Enabled',\r\n        advertisement: 'Ad',\r\n        qualityBadge: {\r\n            2160: '4K',\r\n            1440: 'HD',\r\n            1080: 'HD',\r\n            720: 'HD',\r\n            576: 'SD',\r\n            480: 'SD',\r\n        },\r\n    },\r\n\r\n    // URLs\r\n    urls: {\r\n        download: null,\r\n        vimeo: {\r\n            sdk: 'https://player.vimeo.com/api/player.js',\r\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\r\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\r\n        },\r\n        youtube: {\r\n            sdk: 'https://www.youtube.com/iframe_api',\r\n            api:\r\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\r\n        },\r\n        googleIMA: {\r\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\r\n        },\r\n    },\r\n\r\n    // Custom control listeners\r\n    listeners: {\r\n        seek: null,\r\n        play: null,\r\n        pause: null,\r\n        restart: null,\r\n        rewind: null,\r\n        fastForward: null,\r\n        mute: null,\r\n        volume: null,\r\n        captions: null,\r\n        download: null,\r\n        fullscreen: null,\r\n        pip: null,\r\n        airplay: null,\r\n        speed: null,\r\n        quality: null,\r\n        loop: null,\r\n        language: null,\r\n    },\r\n\r\n    // Events to watch and bubble\r\n    events: [\r\n        // Events to watch on HTML5 media elements and bubble\r\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\r\n        'ended',\r\n        'progress',\r\n        'stalled',\r\n        'playing',\r\n        'waiting',\r\n        'canplay',\r\n        'canplaythrough',\r\n        'loadstart',\r\n        'loadeddata',\r\n        'loadedmetadata',\r\n        'timeupdate',\r\n        'volumechange',\r\n        'play',\r\n        'pause',\r\n        'error',\r\n        'seeking',\r\n        'seeked',\r\n        'emptied',\r\n        'ratechange',\r\n        'cuechange',\r\n\r\n        // Custom events\r\n        'download',\r\n        'enterfullscreen',\r\n        'exitfullscreen',\r\n        'captionsenabled',\r\n        'captionsdisabled',\r\n        'languagechange',\r\n        'controlshidden',\r\n        'controlsshown',\r\n        'ready',\r\n\r\n        // YouTube\r\n        'statechange',\r\n\r\n        // Quality\r\n        'qualitychange',\r\n\r\n        // Ads\r\n        'adsloaded',\r\n        'adscontentpause',\r\n        'adscontentresume',\r\n        'adstarted',\r\n        'adsmidpoint',\r\n        'adscomplete',\r\n        'adsallcomplete',\r\n        'adsimpression',\r\n        'adsclick',\r\n    ],\r\n\r\n    // Selectors\r\n    // Change these to match your template if using custom HTML\r\n    selectors: {\r\n        editable: 'input, textarea, select, [contenteditable]',\r\n        container: '.plyr',\r\n        controls: {\r\n            container: null,\r\n            wrapper: '.plyr__controls',\r\n        },\r\n        labels: '[data-plyr]',\r\n        buttons: {\r\n            play: '[data-plyr=\"play\"]',\r\n            pause: '[data-plyr=\"pause\"]',\r\n            restart: '[data-plyr=\"restart\"]',\r\n            rewind: '[data-plyr=\"rewind\"]',\r\n            fastForward: '[data-plyr=\"fast-forward\"]',\r\n            mute: '[data-plyr=\"mute\"]',\r\n            captions: '[data-plyr=\"captions\"]',\r\n            download: '[data-plyr=\"download\"]',\r\n            fullscreen: '[data-plyr=\"fullscreen\"]',\r\n            pip: '[data-plyr=\"pip\"]',\r\n            airplay: '[data-plyr=\"airplay\"]',\r\n            settings: '[data-plyr=\"settings\"]',\r\n            loop: '[data-plyr=\"loop\"]',\r\n        },\r\n        inputs: {\r\n            seek: '[data-plyr=\"seek\"]',\r\n            volume: '[data-plyr=\"volume\"]',\r\n            speed: '[data-plyr=\"speed\"]',\r\n            language: '[data-plyr=\"language\"]',\r\n            quality: '[data-plyr=\"quality\"]',\r\n        },\r\n        display: {\r\n            currentTime: '.plyr__time--current',\r\n            duration: '.plyr__time--duration',\r\n            buffer: '.plyr__progress__buffer',\r\n            loop: '.plyr__progress__loop', // Used later\r\n            volume: '.plyr__volume--display',\r\n        },\r\n        progress: '.plyr__progress',\r\n        captions: '.plyr__captions',\r\n        caption: '.plyr__caption',\r\n        menu: {\r\n            quality: '.js-plyr__menu__list--quality',\r\n        },\r\n    },\r\n\r\n    // Class hooks added to the player in different states\r\n    classNames: {\r\n        type: 'plyr--{0}',\r\n        provider: 'plyr--{0}',\r\n        video: 'plyr__video-wrapper',\r\n        embed: 'plyr__video-embed',\r\n        embedContainer: 'plyr__video-embed__container',\r\n        poster: 'plyr__poster',\r\n        posterEnabled: 'plyr__poster-enabled',\r\n        ads: 'plyr__ads',\r\n        control: 'plyr__control',\r\n        controlPressed: 'plyr__control--pressed',\r\n        playing: 'plyr--playing',\r\n        paused: 'plyr--paused',\r\n        stopped: 'plyr--stopped',\r\n        loading: 'plyr--loading',\r\n        hover: 'plyr--hover',\r\n        tooltip: 'plyr__tooltip',\r\n        cues: 'plyr__cues',\r\n        hidden: 'plyr__sr-only',\r\n        hideControls: 'plyr--hide-controls',\r\n        isIos: 'plyr--is-ios',\r\n        isTouch: 'plyr--is-touch',\r\n        uiSupported: 'plyr--full-ui',\r\n        noTransition: 'plyr--no-transition',\r\n        display: {\r\n            time: 'plyr__time',\r\n        },\r\n        menu: {\r\n            value: 'plyr__menu__value',\r\n            badge: 'plyr__badge',\r\n            open: 'plyr--menu-open',\r\n        },\r\n        captions: {\r\n            enabled: 'plyr--captions-enabled',\r\n            active: 'plyr--captions-active',\r\n        },\r\n        fullscreen: {\r\n            enabled: 'plyr--fullscreen-enabled',\r\n            fallback: 'plyr--fullscreen-fallback',\r\n        },\r\n        pip: {\r\n            supported: 'plyr--pip-supported',\r\n            active: 'plyr--pip-active',\r\n        },\r\n        airplay: {\r\n            supported: 'plyr--airplay-supported',\r\n            active: 'plyr--airplay-active',\r\n        },\r\n        tabFocus: 'plyr__tab-focus',\r\n    },\r\n\r\n    // Embed attributes\r\n    attributes: {\r\n        embed: {\r\n            provider: 'data-plyr-provider',\r\n            id: 'data-plyr-embed-id',\r\n        },\r\n    },\r\n\r\n    // API keys\r\n    keys: {\r\n        google: null,\r\n    },\r\n\r\n    // Advertisements plugin\r\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\r\n    ads: {\r\n        enabled: false,\r\n        publisherId: '',\r\n    },\r\n};\r\n\r\nexport default defaults;\r\n","// ==========================================================================\r\n// Plyr supported types and providers\r\n// ==========================================================================\r\n\r\nexport const providers = {\r\n    html5: 'html5',\r\n    youtube: 'youtube',\r\n    vimeo: 'vimeo',\r\n};\r\n\r\nexport const types = {\r\n    audio: 'audio',\r\n    video: 'video',\r\n};\r\n\r\n/**\r\n * Get provider by URL\r\n * @param {String} url\r\n */\r\nexport function getProviderByUrl(url) {\r\n    // YouTube\r\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\r\n        return providers.youtube;\r\n    }\r\n\r\n    // Vimeo\r\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\r\n        return providers.vimeo;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default { providers, types };\r\n","// ==========================================================================\r\n// Console wrapper\r\n// ==========================================================================\r\n\r\nconst noop = () => {};\r\n\r\nexport default class Console {\r\n    constructor(enabled = false) {\r\n        this.enabled = window.console && enabled;\r\n\r\n        if (this.enabled) {\r\n            this.log('Debugging enabled');\r\n        }\r\n    }\r\n\r\n    get log() {\r\n        // eslint-disable-next-line no-console\r\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\r\n    }\r\n\r\n    get warn() {\r\n        // eslint-disable-next-line no-console\r\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\r\n    }\r\n\r\n    get error() {\r\n        // eslint-disable-next-line no-console\r\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\r\n    }\r\n}\r\n","// ==========================================================================\r\n// Fullscreen wrapper\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\r\n// https://webkit.org/blog/7929/designing-websites-for-iphone-x/\r\n// ==========================================================================\r\n\r\nimport { repaint } from './utils/animation';\r\nimport browser from './utils/browser';\r\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\r\nimport { on, triggerEvent } from './utils/events';\r\nimport is from './utils/is';\r\n\r\nfunction onChange() {\r\n    if (!this.enabled) {\r\n        return;\r\n    }\r\n\r\n    // Update toggle button\r\n    const button = this.player.elements.buttons.fullscreen;\r\n    if (is.element(button)) {\r\n        button.pressed = this.active;\r\n    }\r\n\r\n    // Trigger an event\r\n    triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\r\n\r\n    // Trap focus in container\r\n    if (!browser.isIos) {\r\n        trapFocus.call(this.player, this.target, this.active);\r\n    }\r\n}\r\n\r\nfunction toggleFallback(toggle = false) {\r\n    // Store or restore scroll position\r\n    if (toggle) {\r\n        this.scrollPosition = {\r\n            x: window.scrollX || 0,\r\n            y: window.scrollY || 0,\r\n        };\r\n    } else {\r\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\r\n    }\r\n\r\n    // Toggle scroll\r\n    document.body.style.overflow = toggle ? 'hidden' : '';\r\n\r\n    // Toggle class hook\r\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\r\n\r\n    // Force full viewport on iPhone X+\r\n    if (browser.isIos) {\r\n        let viewport = document.head.querySelector('meta[name=\"viewport\"]');\r\n        const property = 'viewport-fit=cover';\r\n\r\n        // Inject the viewport meta if required\r\n        if (!viewport) {\r\n            viewport = document.createElement('meta');\r\n            viewport.setAttribute('name', 'viewport');\r\n        }\r\n\r\n        // Check if the property already exists\r\n        const hasProperty = is.string(viewport.content) && viewport.content.includes(property);\r\n\r\n        if (toggle) {\r\n            this.cleanupViewport = !hasProperty;\r\n\r\n            if (!hasProperty) {\r\n                viewport.content += `,${property}`;\r\n            }\r\n        } else if (this.cleanupViewport) {\r\n            viewport.content = viewport.content\r\n                .split(',')\r\n                .filter(part => part.trim() !== property)\r\n                .join(',');\r\n        }\r\n\r\n        // Force a repaint as sometimes Safari doesn't want to fill the screen\r\n        setTimeout(() => repaint(this.target), 100);\r\n    }\r\n\r\n    // Toggle button and fire events\r\n    onChange.call(this);\r\n}\r\n\r\nclass Fullscreen {\r\n    constructor(player) {\r\n        // Keep reference to parent\r\n        this.player = player;\r\n\r\n        // Get prefix\r\n        this.prefix = Fullscreen.prefix;\r\n        this.property = Fullscreen.property;\r\n\r\n        // Scroll position\r\n        this.scrollPosition = { x: 0, y: 0 };\r\n\r\n        // Register event listeners\r\n        // Handle event (incase user presses escape etc)\r\n        on.call(\r\n            this.player,\r\n            document,\r\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\r\n            () => {\r\n                // TODO: Filter for target??\r\n                onChange.call(this);\r\n            },\r\n        );\r\n\r\n        // Fullscreen toggle on double click\r\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\r\n            // Ignore double click in controls\r\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n        });\r\n\r\n        // Update the UI\r\n        this.update();\r\n    }\r\n\r\n    // Determine if native supported\r\n    static get native() {\r\n        return !!(\r\n            document.fullscreenEnabled ||\r\n            document.webkitFullscreenEnabled ||\r\n            document.mozFullScreenEnabled ||\r\n            document.msFullscreenEnabled\r\n        );\r\n    }\r\n\r\n    // Get the prefix for handlers\r\n    static get prefix() {\r\n        // No prefix\r\n        if (is.function(document.exitFullscreen)) {\r\n            return '';\r\n        }\r\n\r\n        // Check for fullscreen support by vendor prefix\r\n        let value = '';\r\n        const prefixes = ['webkit', 'moz', 'ms'];\r\n\r\n        prefixes.some(pre => {\r\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\r\n                value = pre;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return value;\r\n    }\r\n\r\n    static get property() {\r\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\r\n    }\r\n\r\n    // Determine if fullscreen is enabled\r\n    get enabled() {\r\n        return (\r\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\r\n            this.player.config.fullscreen.enabled &&\r\n            this.player.supported.ui &&\r\n            this.player.isVideo\r\n        );\r\n    }\r\n\r\n    // Get active state\r\n    get active() {\r\n        if (!this.enabled) {\r\n            return false;\r\n        }\r\n\r\n        // Fallback using classname\r\n        if (!Fullscreen.native) {\r\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\r\n        }\r\n\r\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\r\n\r\n        return element === this.target;\r\n    }\r\n\r\n    // Get target element\r\n    get target() {\r\n        return browser.isIos && this.player.config.fullscreen.iosNative\r\n            ? this.player.media\r\n            : this.player.elements.container;\r\n    }\r\n\r\n    // Update UI\r\n    update() {\r\n        if (this.enabled) {\r\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\r\n        } else {\r\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\r\n        }\r\n\r\n        // Add styling hook to show button\r\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\r\n    }\r\n\r\n    // Make an element fullscreen\r\n    enter() {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        // iOS native fullscreen doesn't need the request step\r\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\r\n            this.target.webkitEnterFullscreen();\r\n        } else if (!Fullscreen.native) {\r\n            toggleFallback.call(this, true);\r\n        } else if (!this.prefix) {\r\n            this.target.requestFullscreen();\r\n        } else if (!is.empty(this.prefix)) {\r\n            this.target[`${this.prefix}Request${this.property}`]();\r\n        }\r\n    }\r\n\r\n    // Bail from fullscreen\r\n    exit() {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        // iOS native fullscreen\r\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\r\n            this.target.webkitExitFullscreen();\r\n            this.player.play();\r\n        } else if (!Fullscreen.native) {\r\n            toggleFallback.call(this, false);\r\n        } else if (!this.prefix) {\r\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\r\n        } else if (!is.empty(this.prefix)) {\r\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\r\n            document[`${this.prefix}${action}${this.property}`]();\r\n        }\r\n    }\r\n\r\n    // Toggle state\r\n    toggle() {\r\n        if (!this.active) {\r\n            this.enter();\r\n        } else {\r\n            this.exit();\r\n        }\r\n    }\r\n}\r\n\r\nexport default Fullscreen;\r\n","// ==========================================================================\r\n// Load image avoiding xhr/fetch CORS issues\r\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\r\n// By default it checks if it is at least 1px, but you can add a second argument to change this\r\n// ==========================================================================\r\n\r\nexport default function loadImage(src, minWidth = 1) {\r\n    return new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n\r\n        const handler = () => {\r\n            delete image.onload;\r\n            delete image.onerror;\r\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\r\n        };\r\n\r\n        Object.assign(image, { onload: handler, onerror: handler, src });\r\n    });\r\n}\r\n","// ==========================================================================\r\n// Plyr UI\r\n// ==========================================================================\r\n\r\nimport captions from './captions';\r\nimport controls from './controls';\r\nimport support from './support';\r\nimport browser from './utils/browser';\r\nimport { getElement, toggleClass } from './utils/elements';\r\nimport { ready, triggerEvent } from './utils/events';\r\nimport i18n from './utils/i18n';\r\nimport is from './utils/is';\r\nimport loadImage from './utils/loadImage';\r\n\r\nconst ui = {\r\n    addStyleHook() {\r\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\r\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\r\n    },\r\n\r\n    // Toggle native HTML5 media controls\r\n    toggleNativeControls(toggle = false) {\r\n        if (toggle && this.isHTML5) {\r\n            this.media.setAttribute('controls', '');\r\n        } else {\r\n            this.media.removeAttribute('controls');\r\n        }\r\n    },\r\n\r\n    // Setup the UI\r\n    build() {\r\n        // Re-attach media element listeners\r\n        // TODO: Use event bubbling?\r\n        this.listeners.media();\r\n\r\n        // Don't setup interface if no support\r\n        if (!this.supported.ui) {\r\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\r\n\r\n            // Restore native controls\r\n            ui.toggleNativeControls.call(this, true);\r\n\r\n            // Bail\r\n            return;\r\n        }\r\n\r\n        // Inject custom controls if not present\r\n        if (!is.element(this.elements.controls)) {\r\n            // Inject custom controls\r\n            controls.inject.call(this);\r\n\r\n            // Re-attach control listeners\r\n            this.listeners.controls();\r\n        }\r\n\r\n        // Remove native controls\r\n        ui.toggleNativeControls.call(this);\r\n\r\n        // Setup captions for HTML5\r\n        if (this.isHTML5) {\r\n            captions.setup.call(this);\r\n        }\r\n\r\n        // Reset volume\r\n        this.volume = null;\r\n\r\n        // Reset mute state\r\n        this.muted = null;\r\n\r\n        // Reset speed\r\n        this.speed = null;\r\n\r\n        // Reset loop state\r\n        this.loop = null;\r\n\r\n        // Reset quality setting\r\n        this.quality = null;\r\n\r\n        // Reset volume display\r\n        controls.updateVolume.call(this);\r\n\r\n        // Reset time display\r\n        controls.timeUpdate.call(this);\r\n\r\n        // Update the UI\r\n        ui.checkPlaying.call(this);\r\n\r\n        // Check for picture-in-picture support\r\n        toggleClass(\r\n            this.elements.container,\r\n            this.config.classNames.pip.supported,\r\n            support.pip && this.isHTML5 && this.isVideo,\r\n        );\r\n\r\n        // Check for airplay support\r\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\r\n\r\n        // Add iOS class\r\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\r\n\r\n        // Add touch class\r\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\r\n\r\n        // Ready for API calls\r\n        this.ready = true;\r\n\r\n        // Ready event at end of execution stack\r\n        setTimeout(() => {\r\n            triggerEvent.call(this, this.media, 'ready');\r\n        }, 0);\r\n\r\n        // Set the title\r\n        ui.setTitle.call(this);\r\n\r\n        // Assure the poster image is set, if the property was added before the element was created\r\n        if (this.poster) {\r\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\r\n        }\r\n\r\n        // Manually set the duration if user has overridden it.\r\n        // The event listeners for it doesn't get called if preload is disabled (#701)\r\n        if (this.config.duration) {\r\n            controls.durationUpdate.call(this);\r\n        }\r\n    },\r\n\r\n    // Setup aria attribute for play and iframe title\r\n    setTitle() {\r\n        // Find the current text\r\n        let label = i18n.get('play', this.config);\r\n\r\n        // If there's a media title set, use that for the label\r\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\r\n            label += `, ${this.config.title}`;\r\n        }\r\n\r\n        // If there's a play button, set label\r\n        Array.from(this.elements.buttons.play || []).forEach(button => {\r\n            button.setAttribute('aria-label', label);\r\n        });\r\n\r\n        // Set iframe title\r\n        // https://github.com/sampotts/plyr/issues/124\r\n        if (this.isEmbed) {\r\n            const iframe = getElement.call(this, 'iframe');\r\n\r\n            if (!is.element(iframe)) {\r\n                return;\r\n            }\r\n\r\n            // Default to media type\r\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\r\n            const format = i18n.get('frameTitle', this.config);\r\n\r\n            iframe.setAttribute('title', format.replace('{title}', title));\r\n        }\r\n    },\r\n\r\n    // Toggle poster\r\n    togglePoster(enable) {\r\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\r\n    },\r\n\r\n    // Set the poster image (async)\r\n    // Used internally for the poster setter, with the passive option forced to false\r\n    setPoster(poster, passive = true) {\r\n        // Don't override if call is passive\r\n        if (passive && this.poster) {\r\n            return Promise.reject(new Error('Poster already set'));\r\n        }\r\n\r\n        // Set property synchronously to respect the call order\r\n        this.media.setAttribute('poster', poster);\r\n\r\n        // Wait until ui is ready\r\n        return (\r\n            ready\r\n                .call(this)\r\n                // Load image\r\n                .then(() => loadImage(poster))\r\n                .catch(err => {\r\n                    // Hide poster on error unless it's been set by another call\r\n                    if (poster === this.poster) {\r\n                        ui.togglePoster.call(this, false);\r\n                    }\r\n                    // Rethrow\r\n                    throw err;\r\n                })\r\n                .then(() => {\r\n                    // Prevent race conditions\r\n                    if (poster !== this.poster) {\r\n                        throw new Error('setPoster cancelled by later call to setPoster');\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    Object.assign(this.elements.poster.style, {\r\n                        backgroundImage: `url('${poster}')`,\r\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\r\n                        backgroundSize: '',\r\n                    });\r\n                    ui.togglePoster.call(this, true);\r\n                    return poster;\r\n                })\r\n        );\r\n    },\r\n\r\n    // Check playing state\r\n    checkPlaying(event) {\r\n        // Class hooks\r\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\r\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\r\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\r\n\r\n        // Set state\r\n        Array.from(this.elements.buttons.play || []).forEach(target => {\r\n            target.pressed = this.playing;\r\n        });\r\n\r\n        // Only update controls on non timeupdate events\r\n        if (is.event(event) && event.type === 'timeupdate') {\r\n            return;\r\n        }\r\n\r\n        // Toggle controls\r\n        ui.toggleControls.call(this);\r\n    },\r\n\r\n    // Check if media is loading\r\n    checkLoading(event) {\r\n        this.loading = ['stalled', 'waiting'].includes(event.type);\r\n\r\n        // Clear timer\r\n        clearTimeout(this.timers.loading);\r\n\r\n        // Timer to prevent flicker when seeking\r\n        this.timers.loading = setTimeout(() => {\r\n            // Update progress bar loading class state\r\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\r\n\r\n            // Update controls visibility\r\n            ui.toggleControls.call(this);\r\n        }, this.loading ? 250 : 0);\r\n    },\r\n\r\n    // Toggle controls based on state and `force` argument\r\n    toggleControls(force) {\r\n        const { controls } = this.elements;\r\n\r\n        if (controls && this.config.hideControls) {\r\n            // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\r\n            const recentTouchSeek = (this.touch && this.lastSeekTime + 2000 > Date.now());\r\n\r\n            // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\r\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover || recentTouchSeek));\r\n        }\r\n    },\r\n};\r\n\r\nexport default ui;\r\n","// ==========================================================================\r\n// Plyr Event Listeners\r\n// ==========================================================================\r\n\r\nimport controls from './controls';\r\nimport ui from './ui';\r\nimport { repaint } from './utils/animation';\r\nimport browser from './utils/browser';\r\nimport { getElement, getElements, matches, toggleClass, toggleHidden } from './utils/elements';\r\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\r\nimport is from './utils/is';\r\n\r\nclass Listeners {\r\n    constructor(player) {\r\n        this.player = player;\r\n        this.lastKey = null;\r\n        this.focusTimer = null;\r\n        this.lastKeyDown = null;\r\n\r\n        this.handleKey = this.handleKey.bind(this);\r\n        this.toggleMenu = this.toggleMenu.bind(this);\r\n        this.setTabFocus = this.setTabFocus.bind(this);\r\n        this.firstTouch = this.firstTouch.bind(this);\r\n    }\r\n\r\n    // Handle key presses\r\n    handleKey(event) {\r\n        const { player } = this;\r\n        const { elements } = player;\r\n        const code = event.keyCode ? event.keyCode : event.which;\r\n        const pressed = event.type === 'keydown';\r\n        const repeat = pressed && code === this.lastKey;\r\n\r\n        // Bail if a modifier key is set\r\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n            return;\r\n        }\r\n\r\n        // If the event is bubbled from the media element\r\n        // Firefox doesn't get the keycode for whatever reason\r\n        if (!is.number(code)) {\r\n            return;\r\n        }\r\n\r\n        // Seek by the number keys\r\n        const seekByKey = () => {\r\n            // Divide the max duration into 10th's and times by the number value\r\n            player.currentTime = (player.duration / 10) * (code - 48);\r\n        };\r\n\r\n        // Handle the key on keydown\r\n        // Reset on keyup\r\n        if (pressed) {\r\n            // Check focused element\r\n            // and if the focused element is not editable (e.g. text input)\r\n            // and any that accept key input http://webaim.org/techniques/keyboard/\r\n            const focused = document.activeElement;\r\n            if (is.element(focused)) {\r\n                const { editable } = player.config.selectors;\r\n                const { seek } = elements.inputs;\r\n\r\n                if (focused !== seek && matches(focused, editable)) {\r\n                    return;\r\n                }\r\n\r\n                if (event.which === 32 && matches(focused, 'button, [role^=\"menuitem\"]')) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Which keycodes should we prevent default\r\n            const preventDefault = [32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\r\n\r\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\r\n            if (preventDefault.includes(code)) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }\r\n\r\n            switch (code) {\r\n                case 48:\r\n                case 49:\r\n                case 50:\r\n                case 51:\r\n                case 52:\r\n                case 53:\r\n                case 54:\r\n                case 55:\r\n                case 56:\r\n                case 57:\r\n                    // 0-9\r\n                    if (!repeat) {\r\n                        seekByKey();\r\n                    }\r\n                    break;\r\n\r\n                case 32:\r\n                case 75:\r\n                    // Space and K key\r\n                    if (!repeat) {\r\n                        player.togglePlay();\r\n                    }\r\n                    break;\r\n\r\n                case 38:\r\n                    // Arrow up\r\n                    player.increaseVolume(0.1);\r\n                    break;\r\n\r\n                case 40:\r\n                    // Arrow down\r\n                    player.decreaseVolume(0.1);\r\n                    break;\r\n\r\n                case 77:\r\n                    // M key\r\n                    if (!repeat) {\r\n                        player.muted = !player.muted;\r\n                    }\r\n                    break;\r\n\r\n                case 39:\r\n                    // Arrow forward\r\n                    player.forward();\r\n                    break;\r\n\r\n                case 37:\r\n                    // Arrow back\r\n                    player.rewind();\r\n                    break;\r\n\r\n                case 70:\r\n                    // F key\r\n                    player.fullscreen.toggle();\r\n                    break;\r\n\r\n                case 67:\r\n                    // C key\r\n                    if (!repeat) {\r\n                        player.toggleCaptions();\r\n                    }\r\n                    break;\r\n\r\n                case 76:\r\n                    // L key\r\n                    player.loop = !player.loop;\r\n                    break;\r\n\r\n                    /* case 73:\r\n                    this.setLoop('start');\r\n                    break;\r\n\r\n                case 76:\r\n                    this.setLoop();\r\n                    break;\r\n\r\n                case 79:\r\n                    this.setLoop('end');\r\n                    break; */\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            // Escape is handle natively when in full screen\r\n            // So we only need to worry about non native\r\n            if (!player.fullscreen.enabled && player.fullscreen.active && code === 27) {\r\n                player.fullscreen.toggle();\r\n            }\r\n\r\n            // Store last code for next cycle\r\n            this.lastKey = code;\r\n        } else {\r\n            this.lastKey = null;\r\n        }\r\n    }\r\n\r\n    // Toggle menu\r\n    toggleMenu(event) {\r\n        controls.toggleMenu.call(this.player, event);\r\n    }\r\n\r\n    // Device is touch enabled\r\n    firstTouch() {\r\n        const { player } = this;\r\n        const { elements } = player;\r\n\r\n        player.touch = true;\r\n\r\n        // Add touch class\r\n        toggleClass(elements.container, player.config.classNames.isTouch, true);\r\n    }\r\n\r\n    setTabFocus(event) {\r\n        const { player } = this;\r\n        const { elements } = player;\r\n\r\n        clearTimeout(this.focusTimer);\r\n\r\n        // Ignore any key other than tab\r\n        if (event.type === 'keydown' && event.which !== 9) {\r\n            return;\r\n        }\r\n\r\n        // Store reference to event timeStamp\r\n        if (event.type === 'keydown') {\r\n            this.lastKeyDown = event.timeStamp;\r\n        }\r\n\r\n        // Remove current classes\r\n        const removeCurrent = () => {\r\n            const className = player.config.classNames.tabFocus;\r\n            const current = getElements.call(player, `.${className}`);\r\n            toggleClass(current, className, false);\r\n        };\r\n\r\n        // Determine if a key was pressed to trigger this event\r\n        const wasKeyDown = event.timeStamp - this.lastKeyDown <= 20;\r\n\r\n        // Ignore focus events if a key was pressed prior\r\n        if (event.type === 'focus' && !wasKeyDown) {\r\n            return;\r\n        }\r\n\r\n        // Remove all current\r\n        removeCurrent();\r\n\r\n        // Delay the adding of classname until the focus has changed\r\n        // This event fires before the focusin event\r\n        this.focusTimer = setTimeout(() => {\r\n            const focused = document.activeElement;\r\n\r\n            // Ignore if current focus element isn't inside the player\r\n            if (!elements.container.contains(focused)) {\r\n                return;\r\n            }\r\n\r\n            toggleClass(document.activeElement, player.config.classNames.tabFocus, true);\r\n        }, 10);\r\n    }\r\n\r\n    // Global window & document listeners\r\n    global(toggle = true) {\r\n        const { player } = this;\r\n\r\n        // Keyboard shortcuts\r\n        if (player.config.keyboard.global) {\r\n            toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\r\n        }\r\n\r\n        // Click anywhere closes menu\r\n        toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\r\n\r\n        // Detect touch by events\r\n        once.call(player, document.body, 'touchstart', this.firstTouch);\r\n\r\n        // Tab focus detection\r\n        toggleListener.call(player, document.body, 'keydown focus blur', this.setTabFocus, toggle, false, true);\r\n    }\r\n\r\n    // Container listeners\r\n    container() {\r\n        const { player } = this;\r\n        const { elements } = player;\r\n\r\n        // Keyboard shortcuts\r\n        if (!player.config.keyboard.global && player.config.keyboard.focused) {\r\n            on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\r\n        }\r\n\r\n        // Toggle controls on mouse events and entering fullscreen\r\n        on.call(\r\n            player,\r\n            elements.container,\r\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\r\n            event => {\r\n                const { controls } = elements;\r\n\r\n                // Remove button states for fullscreen\r\n                if (controls && event.type === 'enterfullscreen') {\r\n                    controls.pressed = false;\r\n                    controls.hover = false;\r\n                }\r\n\r\n                // Show, then hide after a timeout unless another control event occurs\r\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\r\n\r\n                let delay = 0;\r\n\r\n                if (show) {\r\n                    ui.toggleControls.call(player, true);\r\n                    // Use longer timeout for touch devices\r\n                    delay = player.touch ? 3000 : 2000;\r\n                }\r\n\r\n                // Clear timer\r\n                clearTimeout(player.timers.controls);\r\n\r\n                // Set new timer to prevent flicker when seeking\r\n                player.timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\r\n            },\r\n        );\r\n    }\r\n\r\n    // Listen for media events\r\n    media() {\r\n        const { player } = this;\r\n        const { elements } = player;\r\n\r\n        // Time change on media\r\n        on.call(player, player.media, 'timeupdate seeking seeked', event => controls.timeUpdate.call(player, event));\r\n\r\n        // Display duration\r\n        on.call(player, player.media, 'durationchange loadeddata loadedmetadata', event =>\r\n            controls.durationUpdate.call(player, event),\r\n        );\r\n\r\n        // Check for audio tracks on load\r\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\r\n        on.call(player, player.media, 'canplay', () => {\r\n            toggleHidden(elements.volume, !player.hasAudio);\r\n            toggleHidden(elements.buttons.mute, !player.hasAudio);\r\n        });\r\n\r\n        // Handle the media finishing\r\n        on.call(player, player.media, 'ended', () => {\r\n            // Show poster on end\r\n            if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\r\n                // Restart\r\n                player.restart();\r\n            }\r\n        });\r\n\r\n        // Check for buffer progress\r\n        on.call(player, player.media, 'progress playing seeking seeked', event =>\r\n            controls.updateProgress.call(player, event),\r\n        );\r\n\r\n        // Handle volume changes\r\n        on.call(player, player.media, 'volumechange', event => controls.updateVolume.call(player, event));\r\n\r\n        // Handle play/pause\r\n        on.call(player, player.media, 'playing play pause ended emptied timeupdate', event =>\r\n            ui.checkPlaying.call(player, event),\r\n        );\r\n\r\n        // Loading state\r\n        on.call(player, player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(player, event));\r\n\r\n        // If autoplay, then load advertisement if required\r\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\r\n        on.call(player, player.media, 'playing', () => {\r\n            if (!player.ads) {\r\n                return;\r\n            }\r\n\r\n            // If ads are enabled, wait for them first\r\n            if (player.ads.enabled && !player.ads.initialized) {\r\n                // Wait for manager response\r\n                player.ads.managerPromise.then(() => player.ads.play()).catch(() => player.play());\r\n            }\r\n        });\r\n\r\n        // Click video\r\n        if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\r\n            // Re-fetch the wrapper\r\n            const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\r\n\r\n            // Bail if there's no wrapper (this should never happen)\r\n            if (!is.element(wrapper)) {\r\n                return;\r\n            }\r\n\r\n            // On click play, pause or restart\r\n            on.call(player, elements.container, 'click', event => {\r\n                const targets = [elements.container, wrapper];\r\n\r\n                // Ignore if click if not container or in video wrapper\r\n                if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\r\n                    return;\r\n                }\r\n\r\n                // Touch devices will just show controls (if hidden)\r\n                if (player.touch && player.config.hideControls) {\r\n                    return;\r\n                }\r\n\r\n                if (player.ended) {\r\n                    player.restart();\r\n                    player.play();\r\n                } else {\r\n                    player.togglePlay();\r\n                }\r\n            });\r\n        }\r\n\r\n        // Disable right click\r\n        if (player.supported.ui && player.config.disableContextMenu) {\r\n            on.call(\r\n                player,\r\n                elements.wrapper,\r\n                'contextmenu',\r\n                event => {\r\n                    event.preventDefault();\r\n                },\r\n                false,\r\n            );\r\n        }\r\n\r\n        // Volume change\r\n        on.call(player, player.media, 'volumechange', () => {\r\n            // Save to storage\r\n            player.storage.set({\r\n                volume: player.volume,\r\n                muted: player.muted,\r\n            });\r\n        });\r\n\r\n        // Speed change\r\n        on.call(player, player.media, 'ratechange', () => {\r\n            // Update UI\r\n            controls.updateSetting.call(player, 'speed');\r\n\r\n            // Save to storage\r\n            player.storage.set({ speed: player.speed });\r\n        });\r\n\r\n        // Quality change\r\n        on.call(player, player.media, 'qualitychange', event => {\r\n            // Update UI\r\n            controls.updateSetting.call(player, 'quality', null, event.detail.quality);\r\n        });\r\n\r\n        // Update download link when ready and if quality changes\r\n        on.call(player, player.media, 'ready qualitychange', () => {\r\n            controls.setDownloadLink.call(player);\r\n        });\r\n\r\n        // Proxy events to container\r\n        // Bubble up key events for Edge\r\n        const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\r\n\r\n        on.call(player, player.media, proxyEvents, event => {\r\n            let { detail = {} } = event;\r\n\r\n            // Get error details from media\r\n            if (event.type === 'error') {\r\n                detail = player.media.error;\r\n            }\r\n\r\n            triggerEvent.call(player, elements.container, event.type, true, detail);\r\n        });\r\n    }\r\n\r\n    // Run default and custom handlers\r\n    proxy(event, defaultHandler, customHandlerKey) {\r\n        const { player } = this;\r\n        const customHandler = player.config.listeners[customHandlerKey];\r\n        const hasCustomHandler = is.function(customHandler);\r\n        let returned = true;\r\n\r\n        // Execute custom handler\r\n        if (hasCustomHandler) {\r\n            returned = customHandler.call(player, event);\r\n        }\r\n\r\n        // Only call default handler if not prevented in custom handler\r\n        if (returned && is.function(defaultHandler)) {\r\n            defaultHandler.call(player, event);\r\n        }\r\n    }\r\n\r\n    // Trigger custom and default handlers\r\n    bind(element, type, defaultHandler, customHandlerKey, passive = true) {\r\n        const { player } = this;\r\n        const customHandler = player.config.listeners[customHandlerKey];\r\n        const hasCustomHandler = is.function(customHandler);\r\n\r\n        on.call(\r\n            player,\r\n            element,\r\n            type,\r\n            event => this.proxy(event, defaultHandler, customHandlerKey),\r\n            passive && !hasCustomHandler,\r\n        );\r\n    }\r\n\r\n    // Listen for control events\r\n    controls() {\r\n        const { player } = this;\r\n        const { elements } = player;\r\n\r\n        // IE doesn't support input event, so we fallback to change\r\n        const inputEvent = browser.isIE ? 'change' : 'input';\r\n\r\n        // Play/pause toggle\r\n        if (elements.buttons.play) {\r\n            Array.from(elements.buttons.play).forEach(button => {\r\n                this.bind(button, 'click', player.togglePlay, 'play');\r\n            });\r\n        }\r\n\r\n        // Pause\r\n        this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\r\n\r\n        // Rewind\r\n        this.bind(elements.buttons.rewind, 'click', player.rewind, 'rewind');\r\n\r\n        // Rewind\r\n        this.bind(elements.buttons.fastForward, 'click', player.forward, 'fastForward');\r\n\r\n        // Mute toggle\r\n        this.bind(\r\n            elements.buttons.mute,\r\n            'click',\r\n            () => {\r\n                player.muted = !player.muted;\r\n            },\r\n            'mute',\r\n        );\r\n\r\n        // Captions toggle\r\n        this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\r\n\r\n        // Download\r\n        this.bind(\r\n            elements.buttons.download,\r\n            'click',\r\n            () => {\r\n                triggerEvent.call(player, player.media, 'download');\r\n            },\r\n            'download',\r\n        );\r\n\r\n        // Fullscreen toggle\r\n        this.bind(\r\n            elements.buttons.fullscreen,\r\n            'click',\r\n            () => {\r\n                player.fullscreen.toggle();\r\n            },\r\n            'fullscreen',\r\n        );\r\n\r\n        // Picture-in-Picture\r\n        this.bind(\r\n            elements.buttons.pip,\r\n            'click',\r\n            () => {\r\n                player.pip = 'toggle';\r\n            },\r\n            'pip',\r\n        );\r\n\r\n        // Airplay\r\n        this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\r\n\r\n        // Settings menu - click toggle\r\n        this.bind(elements.buttons.settings, 'click', event => {\r\n            // Prevent the document click listener closing the menu\r\n            event.stopPropagation();\r\n\r\n            controls.toggleMenu.call(player, event);\r\n        });\r\n\r\n        // Settings menu - keyboard toggle\r\n        // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\r\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\r\n        this.bind(\r\n            elements.buttons.settings,\r\n            'keyup',\r\n            event => {\r\n                const code = event.which;\r\n\r\n                // We only care about space and return\r\n                if (![13, 32].includes(code)) {\r\n                    return;\r\n                }\r\n\r\n                // Because return triggers a click anyway, all we need to do is set focus\r\n                if (code === 13) {\r\n                    controls.focusFirstMenuItem.call(player, null, true);\r\n                    return;\r\n                }\r\n\r\n                // Prevent scroll\r\n                event.preventDefault();\r\n\r\n                // Prevent playing video (Firefox)\r\n                event.stopPropagation();\r\n\r\n                // Toggle menu\r\n                controls.toggleMenu.call(player, event);\r\n            },\r\n            null,\r\n            false, // Can't be passive as we're preventing default\r\n        );\r\n\r\n        // Escape closes menu\r\n        this.bind(elements.settings.menu, 'keydown', event => {\r\n            if (event.which === 27) {\r\n                controls.toggleMenu.call(player, event);\r\n            }\r\n        });\r\n\r\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\r\n        this.bind(elements.inputs.seek, 'mousedown mousemove', event => {\r\n            const rect = elements.progress.getBoundingClientRect();\r\n            const percent = (100 / rect.width) * (event.pageX - rect.left);\r\n            event.currentTarget.setAttribute('seek-value', percent);\r\n        });\r\n\r\n        // Pause while seeking\r\n        this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\r\n            const seek = event.currentTarget;\r\n            const code = event.keyCode ? event.keyCode : event.which;\r\n            const attribute = 'play-on-seeked';\r\n\r\n            if (is.keyboardEvent(event) && (code !== 39 && code !== 37)) {\r\n                return;\r\n            }\r\n\r\n            // Record seek time so we can prevent hiding controls for a few seconds after seek\r\n            player.lastSeekTime = Date.now();\r\n\r\n            // Was playing before?\r\n            const play = seek.hasAttribute(attribute);\r\n\r\n            // Done seeking\r\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\r\n\r\n            // If we're done seeking and it was playing, resume playback\r\n            if (play && done) {\r\n                seek.removeAttribute(attribute);\r\n                player.play();\r\n            } else if (!done && player.playing) {\r\n                seek.setAttribute(attribute, '');\r\n                player.pause();\r\n            }\r\n        });\r\n\r\n        // Fix range inputs on iOS\r\n        // Super weird iOS bug where after you interact with an <input type=\"range\">,\r\n        // it takes over further interactions on the page. This is a hack\r\n        if (browser.isIos) {\r\n            const inputs = getElements.call(player, 'input[type=\"range\"]');\r\n            Array.from(inputs).forEach(input => this.bind(input, inputEvent, event => repaint(event.target)));\r\n        }\r\n\r\n        // Seek\r\n        this.bind(\r\n            elements.inputs.seek,\r\n            inputEvent,\r\n            event => {\r\n                const seek = event.currentTarget;\r\n\r\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\r\n                let seekTo = seek.getAttribute('seek-value');\r\n\r\n                if (is.empty(seekTo)) {\r\n                    seekTo = seek.value;\r\n                }\r\n\r\n                seek.removeAttribute('seek-value');\r\n\r\n                player.currentTime = (seekTo / seek.max) * player.duration;\r\n            },\r\n            'seek',\r\n        );\r\n\r\n        // Seek tooltip\r\n        this.bind(elements.progress, 'mouseenter mouseleave mousemove', event =>\r\n            controls.updateSeekTooltip.call(player, event),\r\n        );\r\n\r\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\r\n        if (browser.isWebkit) {\r\n            Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach(element => {\r\n                this.bind(element, 'input', event => controls.updateRangeFill.call(player, event.target));\r\n            });\r\n        }\r\n\r\n        // Current time invert\r\n        // Only if one time element is used for both currentTime and duration\r\n        if (player.config.toggleInvert && !is.element(elements.display.duration)) {\r\n            this.bind(elements.display.currentTime, 'click', () => {\r\n                // Do nothing if we're at the start\r\n                if (player.currentTime === 0) {\r\n                    return;\r\n                }\r\n\r\n                player.config.invertTime = !player.config.invertTime;\r\n\r\n                controls.timeUpdate.call(player);\r\n            });\r\n        }\r\n\r\n        // Volume\r\n        this.bind(\r\n            elements.inputs.volume,\r\n            inputEvent,\r\n            event => {\r\n                player.volume = event.target.value;\r\n            },\r\n            'volume',\r\n        );\r\n\r\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\r\n        this.bind(elements.controls, 'mouseenter mouseleave', event => {\r\n            elements.controls.hover = !player.touch && event.type === 'mouseenter';\r\n        });\r\n\r\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\r\n        this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\r\n            elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\r\n        });\r\n\r\n        // Show controls when they receive focus (e.g., when using keyboard tab key)\r\n        this.bind(elements.controls, 'focusin', () => {\r\n            const { config, elements, timers } = player;\r\n\r\n            // Skip transition to prevent focus from scrolling the parent element\r\n            toggleClass(elements.controls, config.classNames.noTransition, true);\r\n\r\n            // Toggle\r\n            ui.toggleControls.call(player, true);\r\n\r\n            // Restore transition\r\n            setTimeout(() => {\r\n                toggleClass(elements.controls, config.classNames.noTransition, false);\r\n            }, 0);\r\n\r\n            // Delay a little more for mouse users\r\n            const delay = this.touch ? 3000 : 4000;\r\n\r\n            // Clear timer\r\n            clearTimeout(timers.controls);\r\n\r\n            // Hide again after delay\r\n            timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\r\n        });\r\n\r\n        // Mouse wheel for volume\r\n        this.bind(\r\n            elements.inputs.volume,\r\n            'wheel',\r\n            event => {\r\n                // Detect \"natural\" scroll - suppored on OS X Safari only\r\n                // Other browsers on OS X will be inverted until support improves\r\n                const inverted = event.webkitDirectionInvertedFromDevice;\r\n\r\n                // Get delta from event. Invert if `inverted` is true\r\n                const [x, y] = [event.deltaX, -event.deltaY].map(value => (inverted ? -value : value));\r\n\r\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\r\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\r\n\r\n                // Change the volume by 2%\r\n                player.increaseVolume(direction / 50);\r\n\r\n                // Don't break page scrolling at max and min\r\n                const { volume } = player.media;\r\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\r\n                    event.preventDefault();\r\n                }\r\n            },\r\n            'volume',\r\n            false,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Listeners;\r\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\r\n// Load an external script\r\n// ==========================================================================\r\n\r\nimport loadjs from 'loadjs';\r\n\r\nexport default function loadScript(url) {\r\n    return new Promise((resolve, reject) => {\r\n        loadjs(url, {\r\n            success: resolve,\r\n            error: reject,\r\n        });\r\n    });\r\n}\r\n","// ==========================================================================\r\n// Vimeo plugin\r\n// ==========================================================================\r\n\r\nimport captions from '../captions';\r\nimport controls from '../controls';\r\nimport ui from '../ui';\r\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\r\nimport { triggerEvent } from '../utils/events';\r\nimport fetch from '../utils/fetch';\r\nimport is from '../utils/is';\r\nimport loadScript from '../utils/loadScript';\r\nimport { format, stripHTML } from '../utils/strings';\r\nimport { buildUrlParams } from '../utils/urls';\r\n\r\n// Parse Vimeo ID from URL\r\nfunction parseId(url) {\r\n    if (is.empty(url)) {\r\n        return null;\r\n    }\r\n\r\n    if (is.number(Number(url))) {\r\n        return url;\r\n    }\r\n\r\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\r\n    return url.match(regex) ? RegExp.$2 : url;\r\n}\r\n\r\n// Get aspect ratio for dimensions\r\nfunction getAspectRatio(width, height) {\r\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\r\n    const ratio = getRatio(width, height);\r\n    return `${width / ratio}:${height / ratio}`;\r\n}\r\n\r\n// Set playback state and trigger change (only on actual change)\r\nfunction assurePlaybackState(play) {\r\n    if (play && !this.embed.hasPlayed) {\r\n        this.embed.hasPlayed = true;\r\n    }\r\n    if (this.media.paused === play) {\r\n        this.media.paused = !play;\r\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\r\n    }\r\n}\r\n\r\nconst vimeo = {\r\n    setup() {\r\n        // Add embed class for responsive\r\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\r\n\r\n        // Set intial ratio\r\n        vimeo.setAspectRatio.call(this);\r\n\r\n        // Load the API if not already\r\n        if (!is.object(window.Vimeo)) {\r\n            loadScript(this.config.urls.vimeo.sdk)\r\n                .then(() => {\r\n                    vimeo.ready.call(this);\r\n                })\r\n                .catch(error => {\r\n                    this.debug.warn('Vimeo API failed to load', error);\r\n                });\r\n        } else {\r\n            vimeo.ready.call(this);\r\n        }\r\n    },\r\n\r\n    // Set aspect ratio\r\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\r\n    setAspectRatio(input) {\r\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\r\n        const padding = (100 / x) * y;\r\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\r\n\r\n        if (this.supported.ui) {\r\n            const height = 240;\r\n            const offset = (height - padding) / (height / 50);\r\n\r\n            this.media.style.transform = `translateY(-${offset}%)`;\r\n        }\r\n    },\r\n\r\n    // API Ready\r\n    ready() {\r\n        const player = this;\r\n\r\n        // Get Vimeo params for the iframe\r\n        const options = {\r\n            loop: player.config.loop.active,\r\n            autoplay: player.autoplay,\r\n            // muted: player.muted,\r\n            byline: false,\r\n            portrait: false,\r\n            title: false,\r\n            speed: true,\r\n            transparent: 0,\r\n            gesture: 'media',\r\n            playsinline: !this.config.fullscreen.iosNative,\r\n        };\r\n        const params = buildUrlParams(options);\r\n\r\n        // Get the source URL or ID\r\n        let source = player.media.getAttribute('src');\r\n\r\n        // Get from <div> if needed\r\n        if (is.empty(source)) {\r\n            source = player.media.getAttribute(player.config.attributes.embed.id);\r\n        }\r\n\r\n        const id = parseId(source);\r\n\r\n        // Build an iframe\r\n        const iframe = createElement('iframe');\r\n        const src = format(player.config.urls.vimeo.iframe, id, params);\r\n        iframe.setAttribute('src', src);\r\n        iframe.setAttribute('allowfullscreen', '');\r\n        iframe.setAttribute('allowtransparency', '');\r\n        iframe.setAttribute('allow', 'autoplay');\r\n\r\n        // Get poster, if already set\r\n        const { poster } = player;\r\n\r\n        // Inject the package\r\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\r\n        wrapper.appendChild(iframe);\r\n        player.media = replaceElement(wrapper, player.media);\r\n\r\n        // Get poster image\r\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\r\n            if (is.empty(response)) {\r\n                return;\r\n            }\r\n\r\n            // Get the URL for thumbnail\r\n            const url = new URL(response[0].thumbnail_large);\r\n\r\n            // Get original image\r\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\r\n\r\n            // Set and show poster\r\n            ui.setPoster.call(player, url.href).catch(() => {});\r\n        });\r\n\r\n        // Setup instance\r\n        // https://github.com/vimeo/player.js\r\n        player.embed = new window.Vimeo.Player(iframe, {\r\n            autopause: player.config.autopause,\r\n            muted: player.muted,\r\n        });\r\n\r\n        player.media.paused = true;\r\n        player.media.currentTime = 0;\r\n\r\n        // Disable native text track rendering\r\n        if (player.supported.ui) {\r\n            player.embed.disableTextTrack();\r\n        }\r\n\r\n        // Create a faux HTML5 API using the Vimeo API\r\n        player.media.play = () => {\r\n            assurePlaybackState.call(player, true);\r\n            return player.embed.play();\r\n        };\r\n\r\n        player.media.pause = () => {\r\n            assurePlaybackState.call(player, false);\r\n            return player.embed.pause();\r\n        };\r\n\r\n        player.media.stop = () => {\r\n            player.pause();\r\n            player.currentTime = 0;\r\n        };\r\n\r\n        // Seeking\r\n        let { currentTime } = player.media;\r\n        Object.defineProperty(player.media, 'currentTime', {\r\n            get() {\r\n                return currentTime;\r\n            },\r\n            set(time) {\r\n                // Vimeo will automatically play on seek if the video hasn't been played before\r\n\r\n                // Get current paused state and volume etc\r\n                const { embed, media, paused, volume } = player;\r\n                const restorePause = paused && !embed.hasPlayed;\r\n\r\n                // Set seeking state and trigger event\r\n                media.seeking = true;\r\n                triggerEvent.call(player, media, 'seeking');\r\n\r\n                // If paused, mute until seek is complete\r\n                Promise.resolve(restorePause && embed.setVolume(0))\r\n                    // Seek\r\n                    .then(() => embed.setCurrentTime(time))\r\n                    // Restore paused\r\n                    .then(() => restorePause && embed.pause())\r\n                    // Restore volume\r\n                    .then(() => restorePause && embed.setVolume(volume))\r\n                    .catch(() => {\r\n                        // Do nothing\r\n                    });\r\n            },\r\n        });\r\n\r\n        // Playback speed\r\n        let speed = player.config.speed.selected;\r\n        Object.defineProperty(player.media, 'playbackRate', {\r\n            get() {\r\n                return speed;\r\n            },\r\n            set(input) {\r\n                player.embed\r\n                    .setPlaybackRate(input)\r\n                    .then(() => {\r\n                        speed = input;\r\n                        triggerEvent.call(player, player.media, 'ratechange');\r\n                    })\r\n                    .catch(error => {\r\n                        // Hide menu item (and menu if empty)\r\n                        if (error.name === 'Error') {\r\n                            controls.setSpeedMenu.call(player, []);\r\n                        }\r\n                    });\r\n            },\r\n        });\r\n\r\n        // Volume\r\n        let { volume } = player.config;\r\n        Object.defineProperty(player.media, 'volume', {\r\n            get() {\r\n                return volume;\r\n            },\r\n            set(input) {\r\n                player.embed.setVolume(input).then(() => {\r\n                    volume = input;\r\n                    triggerEvent.call(player, player.media, 'volumechange');\r\n                });\r\n            },\r\n        });\r\n\r\n        // Muted\r\n        let { muted } = player.config;\r\n        Object.defineProperty(player.media, 'muted', {\r\n            get() {\r\n                return muted;\r\n            },\r\n            set(input) {\r\n                const toggle = is.boolean(input) ? input : false;\r\n\r\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\r\n                    muted = toggle;\r\n                    triggerEvent.call(player, player.media, 'volumechange');\r\n                });\r\n            },\r\n        });\r\n\r\n        // Loop\r\n        let { loop } = player.config;\r\n        Object.defineProperty(player.media, 'loop', {\r\n            get() {\r\n                return loop;\r\n            },\r\n            set(input) {\r\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\r\n\r\n                player.embed.setLoop(toggle).then(() => {\r\n                    loop = toggle;\r\n                });\r\n            },\r\n        });\r\n\r\n        // Source\r\n        let currentSrc;\r\n        player.embed\r\n            .getVideoUrl()\r\n            .then(value => {\r\n                currentSrc = value;\r\n                controls.setDownloadLink.call(player);\r\n            })\r\n            .catch(error => {\r\n                this.debug.warn(error);\r\n            });\r\n\r\n        Object.defineProperty(player.media, 'currentSrc', {\r\n            get() {\r\n                return currentSrc;\r\n            },\r\n        });\r\n\r\n        // Ended\r\n        Object.defineProperty(player.media, 'ended', {\r\n            get() {\r\n                return player.currentTime === player.duration;\r\n            },\r\n        });\r\n\r\n        // Set aspect ratio based on video size\r\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\r\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\r\n            vimeo.setAspectRatio.call(this, ratio);\r\n        });\r\n\r\n        // Set autopause\r\n        player.embed.setAutopause(player.config.autopause).then(state => {\r\n            player.config.autopause = state;\r\n        });\r\n\r\n        // Get title\r\n        player.embed.getVideoTitle().then(title => {\r\n            player.config.title = title;\r\n            ui.setTitle.call(this);\r\n        });\r\n\r\n        // Get current time\r\n        player.embed.getCurrentTime().then(value => {\r\n            currentTime = value;\r\n            triggerEvent.call(player, player.media, 'timeupdate');\r\n        });\r\n\r\n        // Get duration\r\n        player.embed.getDuration().then(value => {\r\n            player.media.duration = value;\r\n            triggerEvent.call(player, player.media, 'durationchange');\r\n        });\r\n\r\n        // Get captions\r\n        player.embed.getTextTracks().then(tracks => {\r\n            player.media.textTracks = tracks;\r\n            captions.setup.call(player);\r\n        });\r\n\r\n        player.embed.on('cuechange', ({ cues = [] }) => {\r\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\r\n            captions.updateCues.call(player, strippedCues);\r\n        });\r\n\r\n        player.embed.on('loaded', () => {\r\n            // Assure state and events are updated on autoplay\r\n            player.embed.getPaused().then(paused => {\r\n                assurePlaybackState.call(player, !paused);\r\n                if (!paused) {\r\n                    triggerEvent.call(player, player.media, 'playing');\r\n                }\r\n            });\r\n\r\n            if (is.element(player.embed.element) && player.supported.ui) {\r\n                const frame = player.embed.element;\r\n\r\n                // Fix keyboard focus issues\r\n                // https://github.com/sampotts/plyr/issues/317\r\n                frame.setAttribute('tabindex', -1);\r\n            }\r\n        });\r\n\r\n        player.embed.on('play', () => {\r\n            assurePlaybackState.call(player, true);\r\n            triggerEvent.call(player, player.media, 'playing');\r\n        });\r\n\r\n        player.embed.on('pause', () => {\r\n            assurePlaybackState.call(player, false);\r\n        });\r\n\r\n        player.embed.on('timeupdate', data => {\r\n            player.media.seeking = false;\r\n            currentTime = data.seconds;\r\n            triggerEvent.call(player, player.media, 'timeupdate');\r\n        });\r\n\r\n        player.embed.on('progress', data => {\r\n            player.media.buffered = data.percent;\r\n            triggerEvent.call(player, player.media, 'progress');\r\n\r\n            // Check all loaded\r\n            if (parseInt(data.percent, 10) === 1) {\r\n                triggerEvent.call(player, player.media, 'canplaythrough');\r\n            }\r\n\r\n            // Get duration as if we do it before load, it gives an incorrect value\r\n            // https://github.com/sampotts/plyr/issues/891\r\n            player.embed.getDuration().then(value => {\r\n                if (value !== player.media.duration) {\r\n                    player.media.duration = value;\r\n                    triggerEvent.call(player, player.media, 'durationchange');\r\n                }\r\n            });\r\n        });\r\n\r\n        player.embed.on('seeked', () => {\r\n            player.media.seeking = false;\r\n            triggerEvent.call(player, player.media, 'seeked');\r\n        });\r\n\r\n        player.embed.on('ended', () => {\r\n            player.media.paused = true;\r\n            triggerEvent.call(player, player.media, 'ended');\r\n        });\r\n\r\n        player.embed.on('error', detail => {\r\n            player.media.error = detail;\r\n            triggerEvent.call(player, player.media, 'error');\r\n        });\r\n\r\n        // Rebuild UI\r\n        setTimeout(() => ui.build.call(player), 0);\r\n    },\r\n};\r\n\r\nexport default vimeo;\r\n","// ==========================================================================\r\n// YouTube plugin\r\n// ==========================================================================\r\n\r\nimport ui from '../ui';\r\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\r\nimport { triggerEvent } from '../utils/events';\r\nimport fetch from '../utils/fetch';\r\nimport is from '../utils/is';\r\nimport loadImage from '../utils/loadImage';\r\nimport loadScript from '../utils/loadScript';\r\nimport { format, generateId } from '../utils/strings';\r\n\r\n// Parse YouTube ID from URL\r\nfunction parseId(url) {\r\n    if (is.empty(url)) {\r\n        return null;\r\n    }\r\n\r\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n    return url.match(regex) ? RegExp.$2 : url;\r\n}\r\n\r\n// Set playback state and trigger change (only on actual change)\r\nfunction assurePlaybackState(play) {\r\n    if (play && !this.embed.hasPlayed) {\r\n        this.embed.hasPlayed = true;\r\n    }\r\n    if (this.media.paused === play) {\r\n        this.media.paused = !play;\r\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\r\n    }\r\n}\r\n\r\nconst youtube = {\r\n    setup() {\r\n        // Add embed class for responsive\r\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\r\n\r\n        // Set aspect ratio\r\n        youtube.setAspectRatio.call(this);\r\n\r\n        // Setup API\r\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\r\n            youtube.ready.call(this);\r\n        } else {\r\n            // Load the API\r\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\r\n                this.debug.warn('YouTube API failed to load', error);\r\n            });\r\n\r\n            // Setup callback for the API\r\n            // YouTube has it's own system of course...\r\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\r\n\r\n            // Add to queue\r\n            window.onYouTubeReadyCallbacks.push(() => {\r\n                youtube.ready.call(this);\r\n            });\r\n\r\n            // Set callback to process queue\r\n            window.onYouTubeIframeAPIReady = () => {\r\n                window.onYouTubeReadyCallbacks.forEach(callback => {\r\n                    callback();\r\n                });\r\n            };\r\n        }\r\n    },\r\n\r\n    // Get the media title\r\n    getTitle(videoId) {\r\n        // Try via undocumented API method first\r\n        // This method disappears now and then though...\r\n        // https://github.com/sampotts/plyr/issues/709\r\n        if (is.function(this.embed.getVideoData)) {\r\n            const { title } = this.embed.getVideoData();\r\n\r\n            if (is.empty(title)) {\r\n                this.config.title = title;\r\n                ui.setTitle.call(this);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Or via Google API\r\n        const key = this.config.keys.google;\r\n        if (is.string(key) && !is.empty(key)) {\r\n            const url = format(this.config.urls.youtube.api, videoId, key);\r\n\r\n            fetch(url)\r\n                .then(result => {\r\n                    if (is.object(result)) {\r\n                        this.config.title = result.items[0].snippet.title;\r\n                        ui.setTitle.call(this);\r\n                    }\r\n                })\r\n                .catch(() => {});\r\n        }\r\n    },\r\n\r\n    // Set aspect ratio\r\n    setAspectRatio() {\r\n        const ratio = this.config.ratio.split(':');\r\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\r\n    },\r\n\r\n    // API ready\r\n    ready() {\r\n        const player = this;\r\n\r\n        // Ignore already setup (race condition)\r\n        const currentId = player.media.getAttribute('id');\r\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\r\n            return;\r\n        }\r\n\r\n        // Get the source URL or ID\r\n        let source = player.media.getAttribute('src');\r\n\r\n        // Get from <div> if needed\r\n        if (is.empty(source)) {\r\n            source = player.media.getAttribute(this.config.attributes.embed.id);\r\n        }\r\n\r\n        // Replace the <iframe> with a <div> due to YouTube API issues\r\n        const videoId = parseId(source);\r\n        const id = generateId(player.provider);\r\n\r\n        // Get poster, if already set\r\n        const { poster } = player;\r\n\r\n        // Replace media element\r\n        const container = createElement('div', { id, poster });\r\n        player.media = replaceElement(container, player.media);\r\n\r\n        // Id to poster wrapper\r\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\r\n\r\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\r\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\r\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\r\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\r\n            .then(image => ui.setPoster.call(player, image.src))\r\n            .then(posterSrc => {\r\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\r\n                if (!posterSrc.includes('maxres')) {\r\n                    player.elements.poster.style.backgroundSize = 'cover';\r\n                }\r\n            })\r\n            .catch(() => {});\r\n\r\n        // Setup instance\r\n        // https://developers.google.com/youtube/iframe_api_reference\r\n        player.embed = new window.YT.Player(id, {\r\n            videoId,\r\n            playerVars: {\r\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\r\n                hl: player.config.hl, // iframe interface language\r\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\r\n                rel: 0, // No related vids\r\n                showinfo: 0, // Hide info\r\n                iv_load_policy: 3, // Hide annotations\r\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\r\n                disablekb: 1, // Disable keyboard as we handle it\r\n                playsinline: 1, // Allow iOS inline playback\r\n\r\n                // Tracking for stats\r\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\r\n                widget_referrer: window ? window.location.href : null,\r\n\r\n                // Captions are flaky on YouTube\r\n                cc_load_policy: player.captions.active ? 1 : 0,\r\n                cc_lang_pref: player.config.captions.language,\r\n            },\r\n            events: {\r\n                onError(event) {\r\n                    // YouTube may fire onError twice, so only handle it once\r\n                    if (!player.media.error) {\r\n                        const code = event.data;\r\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\r\n                        const message =\r\n                            {\r\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\r\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\r\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\r\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\r\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\r\n                            }[code] || 'An unknown error occured';\r\n\r\n                        player.media.error = { code, message };\r\n\r\n                        triggerEvent.call(player, player.media, 'error');\r\n                    }\r\n                },\r\n                onPlaybackRateChange(event) {\r\n                    // Get the instance\r\n                    const instance = event.target;\r\n\r\n                    // Get current speed\r\n                    player.media.playbackRate = instance.getPlaybackRate();\r\n\r\n                    triggerEvent.call(player, player.media, 'ratechange');\r\n                },\r\n                onReady(event) {\r\n                    // Bail if onReady has already been called. See issue #1108\r\n                    if (is.function(player.media.play)) {\r\n                        return;\r\n                    }\r\n                    // Get the instance\r\n                    const instance = event.target;\r\n\r\n                    // Get the title\r\n                    youtube.getTitle.call(player, videoId);\r\n\r\n                    // Create a faux HTML5 API using the YouTube API\r\n                    player.media.play = () => {\r\n                        assurePlaybackState.call(player, true);\r\n                        instance.playVideo();\r\n                    };\r\n\r\n                    player.media.pause = () => {\r\n                        assurePlaybackState.call(player, false);\r\n                        instance.pauseVideo();\r\n                    };\r\n\r\n                    player.media.stop = () => {\r\n                        instance.stopVideo();\r\n                    };\r\n\r\n                    player.media.duration = instance.getDuration();\r\n                    player.media.paused = true;\r\n\r\n                    // Seeking\r\n                    player.media.currentTime = 0;\r\n                    Object.defineProperty(player.media, 'currentTime', {\r\n                        get() {\r\n                            return Number(instance.getCurrentTime());\r\n                        },\r\n                        set(time) {\r\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\r\n                            if (player.paused && !player.embed.hasPlayed) {\r\n                                player.embed.mute();\r\n                            }\r\n\r\n                            // Set seeking state and trigger event\r\n                            player.media.seeking = true;\r\n                            triggerEvent.call(player, player.media, 'seeking');\r\n\r\n                            // Seek after events sent\r\n                            instance.seekTo(time);\r\n                        },\r\n                    });\r\n\r\n                    // Playback speed\r\n                    Object.defineProperty(player.media, 'playbackRate', {\r\n                        get() {\r\n                            return instance.getPlaybackRate();\r\n                        },\r\n                        set(input) {\r\n                            instance.setPlaybackRate(input);\r\n                        },\r\n                    });\r\n\r\n                    // Volume\r\n                    let { volume } = player.config;\r\n                    Object.defineProperty(player.media, 'volume', {\r\n                        get() {\r\n                            return volume;\r\n                        },\r\n                        set(input) {\r\n                            volume = input;\r\n                            instance.setVolume(volume * 100);\r\n                            triggerEvent.call(player, player.media, 'volumechange');\r\n                        },\r\n                    });\r\n\r\n                    // Muted\r\n                    let { muted } = player.config;\r\n                    Object.defineProperty(player.media, 'muted', {\r\n                        get() {\r\n                            return muted;\r\n                        },\r\n                        set(input) {\r\n                            const toggle = is.boolean(input) ? input : muted;\r\n                            muted = toggle;\r\n                            instance[toggle ? 'mute' : 'unMute']();\r\n                            triggerEvent.call(player, player.media, 'volumechange');\r\n                        },\r\n                    });\r\n\r\n                    // Source\r\n                    Object.defineProperty(player.media, 'currentSrc', {\r\n                        get() {\r\n                            return instance.getVideoUrl();\r\n                        },\r\n                    });\r\n\r\n                    // Ended\r\n                    Object.defineProperty(player.media, 'ended', {\r\n                        get() {\r\n                            return player.currentTime === player.duration;\r\n                        },\r\n                    });\r\n\r\n                    // Get available speeds\r\n                    player.options.speed = instance.getAvailablePlaybackRates();\r\n\r\n                    // Set the tabindex to avoid focus entering iframe\r\n                    if (player.supported.ui) {\r\n                        player.media.setAttribute('tabindex', -1);\r\n                    }\r\n\r\n                    triggerEvent.call(player, player.media, 'timeupdate');\r\n                    triggerEvent.call(player, player.media, 'durationchange');\r\n\r\n                    // Reset timer\r\n                    clearInterval(player.timers.buffering);\r\n\r\n                    // Setup buffering\r\n                    player.timers.buffering = setInterval(() => {\r\n                        // Get loaded % from YouTube\r\n                        player.media.buffered = instance.getVideoLoadedFraction();\r\n\r\n                        // Trigger progress only when we actually buffer something\r\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\r\n                            triggerEvent.call(player, player.media, 'progress');\r\n                        }\r\n\r\n                        // Set last buffer point\r\n                        player.media.lastBuffered = player.media.buffered;\r\n\r\n                        // Bail if we're at 100%\r\n                        if (player.media.buffered === 1) {\r\n                            clearInterval(player.timers.buffering);\r\n\r\n                            // Trigger event\r\n                            triggerEvent.call(player, player.media, 'canplaythrough');\r\n                        }\r\n                    }, 200);\r\n\r\n                    // Rebuild UI\r\n                    setTimeout(() => ui.build.call(player), 50);\r\n                },\r\n                onStateChange(event) {\r\n                    // Get the instance\r\n                    const instance = event.target;\r\n\r\n                    // Reset timer\r\n                    clearInterval(player.timers.playing);\r\n\r\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\r\n\r\n                    if (seeked) {\r\n                        // Unset seeking and fire seeked event\r\n                        player.media.seeking = false;\r\n                        triggerEvent.call(player, player.media, 'seeked');\r\n                    }\r\n\r\n                    // Handle events\r\n                    // -1   Unstarted\r\n                    // 0    Ended\r\n                    // 1    Playing\r\n                    // 2    Paused\r\n                    // 3    Buffering\r\n                    // 5    Video cued\r\n                    switch (event.data) {\r\n                        case -1:\r\n                            // Update scrubber\r\n                            triggerEvent.call(player, player.media, 'timeupdate');\r\n\r\n                            // Get loaded % from YouTube\r\n                            player.media.buffered = instance.getVideoLoadedFraction();\r\n                            triggerEvent.call(player, player.media, 'progress');\r\n\r\n                            break;\r\n\r\n                        case 0:\r\n                            assurePlaybackState.call(player, false);\r\n\r\n                            // YouTube doesn't support loop for a single video, so mimick it.\r\n                            if (player.media.loop) {\r\n                                // YouTube needs a call to `stopVideo` before playing again\r\n                                instance.stopVideo();\r\n                                instance.playVideo();\r\n                            } else {\r\n                                triggerEvent.call(player, player.media, 'ended');\r\n                            }\r\n\r\n                            break;\r\n\r\n                        case 1:\r\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\r\n                            if (player.media.paused && !player.embed.hasPlayed) {\r\n                                player.media.pause();\r\n                            } else {\r\n                                assurePlaybackState.call(player, true);\r\n\r\n                                triggerEvent.call(player, player.media, 'playing');\r\n\r\n                                // Poll to get playback progress\r\n                                player.timers.playing = setInterval(() => {\r\n                                    triggerEvent.call(player, player.media, 'timeupdate');\r\n                                }, 50);\r\n\r\n                                // Check duration again due to YouTube bug\r\n                                // https://github.com/sampotts/plyr/issues/374\r\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\r\n                                if (player.media.duration !== instance.getDuration()) {\r\n                                    player.media.duration = instance.getDuration();\r\n                                    triggerEvent.call(player, player.media, 'durationchange');\r\n                                }\r\n                            }\r\n\r\n                            break;\r\n\r\n                        case 2:\r\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\r\n                            if (!player.muted) {\r\n                                player.embed.unMute();\r\n                            }\r\n                            assurePlaybackState.call(player, false);\r\n\r\n                            break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\r\n                        code: event.data,\r\n                    });\r\n                },\r\n            },\r\n        });\r\n    },\r\n};\r\n\r\nexport default youtube;\r\n","// ==========================================================================\r\n// Plyr Media\r\n// ==========================================================================\r\n\r\nimport html5 from './html5';\r\nimport vimeo from './plugins/vimeo';\r\nimport youtube from './plugins/youtube';\r\nimport { createElement, toggleClass, wrap } from './utils/elements';\r\n\r\nconst media = {\r\n    // Setup media\r\n    setup() {\r\n        // If there's no media, bail\r\n        if (!this.media) {\r\n            this.debug.warn('No media element found!');\r\n            return;\r\n        }\r\n\r\n        // Add type class\r\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\r\n\r\n        // Add provider class\r\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\r\n\r\n        // Add video class for embeds\r\n        // This will require changes if audio embeds are added\r\n        if (this.isEmbed) {\r\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\r\n        }\r\n\r\n        // Inject the player wrapper\r\n        if (this.isVideo) {\r\n            // Create the wrapper div\r\n            this.elements.wrapper = createElement('div', {\r\n                class: this.config.classNames.video,\r\n            });\r\n\r\n            // Wrap the video in a container\r\n            wrap(this.media, this.elements.wrapper);\r\n\r\n            // Faux poster container\r\n            this.elements.poster = createElement('div', {\r\n                class: this.config.classNames.poster,\r\n            });\r\n\r\n            this.elements.wrapper.appendChild(this.elements.poster);\r\n        }\r\n\r\n        if (this.isHTML5) {\r\n            html5.extend.call(this);\r\n        } else if (this.isYouTube) {\r\n            youtube.setup.call(this);\r\n        } else if (this.isVimeo) {\r\n            vimeo.setup.call(this);\r\n        }\r\n    },\r\n};\r\n\r\nexport default media;\r\n","// ==========================================================================\r\n// Advertisement plugin using Google IMA HTML5 SDK\r\n// Create an account with our ad partner, vi here:\r\n// https://www.vi.ai/publisher-video-monetization/\r\n// ==========================================================================\r\n\r\n/* global google */\r\n\r\nimport { createElement } from '../utils/elements';\r\nimport { triggerEvent } from '../utils/events';\r\nimport i18n from '../utils/i18n';\r\nimport is from '../utils/is';\r\nimport loadScript from '../utils/loadScript';\r\nimport { formatTime } from '../utils/time';\r\nimport { buildUrlParams } from '../utils/urls';\r\n\r\nclass Ads {\r\n    /**\r\n     * Ads constructor.\r\n     * @param {object} player\r\n     * @return {Ads}\r\n     */\r\n    constructor(player) {\r\n        this.player = player;\r\n        this.publisherId = player.config.ads.publisherId;\r\n        this.playing = false;\r\n        this.initialized = false;\r\n        this.elements = {\r\n            container: null,\r\n            displayContainer: null,\r\n        };\r\n        this.manager = null;\r\n        this.loader = null;\r\n        this.cuePoints = null;\r\n        this.events = {};\r\n        this.safetyTimer = null;\r\n        this.countdownTimer = null;\r\n\r\n        // Setup a promise to resolve when the IMA manager is ready\r\n        this.managerPromise = new Promise((resolve, reject) => {\r\n            // The ad is loaded and ready\r\n            this.on('loaded', resolve);\r\n\r\n            // Ads failed\r\n            this.on('error', reject);\r\n        });\r\n\r\n        this.load();\r\n    }\r\n\r\n    get enabled() {\r\n        return (\r\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Load the IMA SDK\r\n     */\r\n    load() {\r\n        if (this.enabled) {\r\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\r\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\r\n                loadScript(this.player.config.urls.googleIMA.sdk)\r\n                    .then(() => {\r\n                        this.ready();\r\n                    })\r\n                    .catch(() => {\r\n                        // Script failed to load or is blocked\r\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\r\n                    });\r\n            } else {\r\n                this.ready();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the ads instance ready\r\n     */\r\n    ready() {\r\n        // Start ticking our safety timer. If the whole advertisement\r\n        // thing doesn't resolve within our set time; we bail\r\n        this.startSafetyTimer(12000, 'ready()');\r\n\r\n        // Clear the safety timer\r\n        this.managerPromise.then(() => {\r\n            this.clearSafetyTimer('onAdsManagerLoaded()');\r\n        });\r\n\r\n        // Set listeners on the Plyr instance\r\n        this.listeners();\r\n\r\n        // Setup the IMA SDK\r\n        this.setupIMA();\r\n    }\r\n\r\n    // Build the default tag URL\r\n    get tagUrl() {\r\n        const params = {\r\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\r\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\r\n            AV_URL: window.location.hostname,\r\n            cb: Date.now(),\r\n            AV_WIDTH: 640,\r\n            AV_HEIGHT: 480,\r\n            AV_CDIM2: this.publisherId,\r\n        };\r\n\r\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\r\n\r\n        return `${base}?${buildUrlParams(params)}`;\r\n    }\r\n\r\n    /**\r\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\r\n     * so here we define our ad container. This div is set up to render on top of the video player.\r\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\r\n     * handle to the content video player - the SDK will poll the current time of our player to\r\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\r\n     * mobile devices, this initialization is done as the result of a user action.\r\n     */\r\n    setupIMA() {\r\n        // Create the container for our advertisements\r\n        this.elements.container = createElement('div', {\r\n            class: this.player.config.classNames.ads,\r\n        });\r\n        this.player.elements.container.appendChild(this.elements.container);\r\n\r\n        // So we can run VPAID2\r\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\r\n\r\n        // Set language\r\n        google.ima.settings.setLocale(this.player.config.ads.language);\r\n\r\n        // We assume the adContainer is the video container of the plyr element\r\n        // that will house the ads\r\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\r\n\r\n        // Request video ads to be pre-loaded\r\n        this.requestAds();\r\n    }\r\n\r\n    /**\r\n     * Request advertisements\r\n     */\r\n    requestAds() {\r\n        const { container } = this.player.elements;\r\n\r\n        try {\r\n            // Create ads loader\r\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\r\n\r\n            // Listen and respond to ads loaded and error events\r\n            this.loader.addEventListener(\r\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\r\n                event => this.onAdsManagerLoaded(event),\r\n                false,\r\n            );\r\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\r\n\r\n            // Request video ads\r\n            const request = new google.ima.AdsRequest();\r\n            request.adTagUrl = this.tagUrl;\r\n\r\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\r\n            // to select the correct creative if multiple are returned\r\n            request.linearAdSlotWidth = container.offsetWidth;\r\n            request.linearAdSlotHeight = container.offsetHeight;\r\n            request.nonLinearAdSlotWidth = container.offsetWidth;\r\n            request.nonLinearAdSlotHeight = container.offsetHeight;\r\n\r\n            // We only overlay ads as we only support video.\r\n            request.forceNonLinearFullSlot = false;\r\n\r\n            // Mute based on current state\r\n            request.setAdWillPlayMuted(!this.player.muted);\r\n\r\n            this.loader.requestAds(request);\r\n        } catch (e) {\r\n            this.onAdError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the ad countdown\r\n     * @param {boolean} start\r\n     */\r\n    pollCountdown(start = false) {\r\n        if (!start) {\r\n            clearInterval(this.countdownTimer);\r\n            this.elements.container.removeAttribute('data-badge-text');\r\n            return;\r\n        }\r\n\r\n        const update = () => {\r\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\r\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\r\n            this.elements.container.setAttribute('data-badge-text', label);\r\n        };\r\n\r\n        this.countdownTimer = setInterval(update, 100);\r\n    }\r\n\r\n    /**\r\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\r\n     * @param {Event} adsManagerLoadedEvent\r\n     */\r\n    onAdsManagerLoaded(event) {\r\n        // Load could occur after a source change (race condition)\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        // Get the ads manager\r\n        const settings = new google.ima.AdsRenderingSettings();\r\n\r\n        // Tell the SDK to save and restore content video state on our behalf\r\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\r\n        settings.enablePreloading = true;\r\n\r\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\r\n        // so it can determine when to start the mid- and post-roll\r\n        this.manager = event.getAdsManager(this.player, settings);\r\n\r\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\r\n        this.cuePoints = this.manager.getCuePoints();\r\n\r\n        // Add advertisement cue's within the time line if available\r\n        if (!is.empty(this.cuePoints)) {\r\n            this.cuePoints.forEach(cuePoint => {\r\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\r\n                    const seekElement = this.player.elements.progress;\r\n\r\n                    if (is.element(seekElement)) {\r\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\r\n                        const cue = createElement('span', {\r\n                            class: this.player.config.classNames.cues,\r\n                        });\r\n\r\n                        cue.style.left = `${cuePercentage.toString()}%`;\r\n                        seekElement.appendChild(cue);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Set volume to match player\r\n        this.manager.setVolume(this.player.volume);\r\n\r\n        // Add listeners to the required events\r\n        // Advertisement error events\r\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\r\n\r\n        // Advertisement regular events\r\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\r\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\r\n        });\r\n\r\n        // Resolve our adsManager\r\n        this.trigger('loaded');\r\n    }\r\n\r\n    /**\r\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\r\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\r\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\r\n     * @param {Event} event\r\n     */\r\n    onAdEvent(event) {\r\n        const { container } = this.player.elements;\r\n\r\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\r\n        // don't have ad object associated\r\n        const ad = event.getAd();\r\n\r\n        // Proxy event\r\n        const dispatchEvent = type => {\r\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\r\n            triggerEvent.call(this.player, this.player.media, event);\r\n        };\r\n\r\n        switch (event.type) {\r\n            case google.ima.AdEvent.Type.LOADED:\r\n                // This is the first event sent for an ad - it is possible to determine whether the\r\n                // ad is a video ad or an overlay\r\n                this.trigger('loaded');\r\n\r\n                // Bubble event\r\n                dispatchEvent(event.type);\r\n\r\n                // Start countdown\r\n                this.pollCountdown(true);\r\n\r\n                if (!ad.isLinear()) {\r\n                    // Position AdDisplayContainer correctly for overlay\r\n                    ad.width = container.offsetWidth;\r\n                    ad.height = container.offsetHeight;\r\n                }\r\n\r\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\r\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\r\n                break;\r\n\r\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\r\n                // All ads for the current videos are done. We can now request new advertisements\r\n                // in case the video is re-played\r\n\r\n                // Fire event\r\n                dispatchEvent(event.type);\r\n\r\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\r\n                // So here we load a new video when all ads are done.\r\n                // Then we load new ads within a new adsManager. When the video\r\n                // Is started - after - the ads are loaded, then we get ads.\r\n                // You can also easily test cancelling and reloading by running\r\n                // player.ads.cancel() and player.ads.play from the console I guess.\r\n                // this.player.source = {\r\n                //     type: 'video',\r\n                //     title: 'View From A Blue Moon',\r\n                //     sources: [{\r\n                //         src:\r\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\r\n                // 'video/mp4', }], poster:\r\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\r\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\r\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\r\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\r\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\r\n                // };\r\n\r\n                // TODO: So there is still this thing where a video should only be allowed to start\r\n                // playing when the IMA SDK is ready or has failed\r\n\r\n                this.loadAds();\r\n                break;\r\n\r\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\r\n                // This event indicates the ad has started - the video player can adjust the UI,\r\n                // for example display a pause button and remaining time. Fired when content should\r\n                // be paused. This usually happens right before an ad is about to cover the content\r\n\r\n                dispatchEvent(event.type);\r\n\r\n                this.pauseContent();\r\n\r\n                break;\r\n\r\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\r\n                // This event indicates the ad has finished - the video player can perform\r\n                // appropriate UI actions, such as removing the timer for remaining time detection.\r\n                // Fired when content should be resumed. This usually happens when an ad finishes\r\n                // or collapses\r\n\r\n                dispatchEvent(event.type);\r\n\r\n                this.pollCountdown();\r\n\r\n                this.resumeContent();\r\n\r\n                break;\r\n\r\n            case google.ima.AdEvent.Type.STARTED:\r\n            case google.ima.AdEvent.Type.MIDPOINT:\r\n            case google.ima.AdEvent.Type.COMPLETE:\r\n            case google.ima.AdEvent.Type.IMPRESSION:\r\n            case google.ima.AdEvent.Type.CLICK:\r\n                dispatchEvent(event.type);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Any ad error handling comes through here\r\n     * @param {Event} event\r\n     */\r\n    onAdError(event) {\r\n        this.cancel();\r\n        this.player.debug.warn('Ads error', event);\r\n    }\r\n\r\n    /**\r\n     * Setup hooks for Plyr and window events. This ensures\r\n     * the mid- and post-roll launch at the correct time. And\r\n     * resize the advertisement when the player resizes\r\n     */\r\n    listeners() {\r\n        const { container } = this.player.elements;\r\n        let time;\r\n\r\n        // Add listeners to the required events\r\n        this.player.on('ended', () => {\r\n            this.loader.contentComplete();\r\n        });\r\n\r\n        this.player.on('seeking', () => {\r\n            time = this.player.currentTime;\r\n            return time;\r\n        });\r\n\r\n        this.player.on('seeked', () => {\r\n            const seekedTime = this.player.currentTime;\r\n\r\n            if (is.empty(this.cuePoints)) {\r\n                return;\r\n            }\r\n\r\n            this.cuePoints.forEach((cuePoint, index) => {\r\n                if (time < cuePoint && cuePoint < seekedTime) {\r\n                    this.manager.discardAdBreak();\r\n                    this.cuePoints.splice(index, 1);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Listen to the resizing of the window. And resize ad accordingly\r\n        // TODO: eventually implement ResizeObserver\r\n        window.addEventListener('resize', () => {\r\n            if (this.manager) {\r\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialize the adsManager and start playing advertisements\r\n     */\r\n    play() {\r\n        const { container } = this.player.elements;\r\n\r\n        if (!this.managerPromise) {\r\n            this.resumeContent();\r\n        }\r\n\r\n        // Play the requested advertisement whenever the adsManager is ready\r\n        this.managerPromise\r\n            .then(() => {\r\n                // Initialize the container. Must be done via a user action on mobile devices\r\n                this.elements.displayContainer.initialize();\r\n\r\n                try {\r\n                    if (!this.initialized) {\r\n                        // Initialize the ads manager. Ad rules playlist will start at this time\r\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\r\n\r\n                        // Call play to start showing the ad. Single video and overlay ads will\r\n                        // start at this time; the call will be ignored for ad rules\r\n                        this.manager.start();\r\n                    }\r\n\r\n                    this.initialized = true;\r\n                } catch (adError) {\r\n                    // An error may be thrown if there was a problem with the\r\n                    // VAST response\r\n                    this.onAdError(adError);\r\n                }\r\n            })\r\n            .catch(() => {});\r\n    }\r\n\r\n    /**\r\n     * Resume our video\r\n     */\r\n    resumeContent() {\r\n        // Hide the advertisement container\r\n        this.elements.container.style.zIndex = '';\r\n\r\n        // Ad is stopped\r\n        this.playing = false;\r\n\r\n        // Play our video\r\n        if (this.player.currentTime < this.player.duration) {\r\n            this.player.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pause our video\r\n     */\r\n    pauseContent() {\r\n        // Show the advertisement container\r\n        this.elements.container.style.zIndex = 3;\r\n\r\n        // Ad is playing.\r\n        this.playing = true;\r\n\r\n        // Pause our video.\r\n        this.player.pause();\r\n    }\r\n\r\n    /**\r\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\r\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\r\n     * video requests. https://developers.google.com/interactive-\r\n     * media-ads/docs/sdks/android/faq#8\r\n     */\r\n    cancel() {\r\n        // Pause our video\r\n        if (this.initialized) {\r\n            this.resumeContent();\r\n        }\r\n\r\n        // Tell our instance that we're done for now\r\n        this.trigger('error');\r\n\r\n        // Re-create our adsManager\r\n        this.loadAds();\r\n    }\r\n\r\n    /**\r\n     * Re-create our adsManager\r\n     */\r\n    loadAds() {\r\n        // Tell our adsManager to go bye bye\r\n        this.managerPromise\r\n            .then(() => {\r\n                // Destroy our adsManager\r\n                if (this.manager) {\r\n                    this.manager.destroy();\r\n                }\r\n\r\n                // Re-set our adsManager promises\r\n                this.managerPromise = new Promise(resolve => {\r\n                    this.on('loaded', resolve);\r\n                    this.player.debug.log(this.manager);\r\n                });\r\n\r\n                // Now request some new advertisements\r\n                this.requestAds();\r\n            })\r\n            .catch(() => {});\r\n    }\r\n\r\n    /**\r\n     * Handles callbacks after an ad event was invoked\r\n     * @param {string} event - Event type\r\n     */\r\n    trigger(event, ...args) {\r\n        const handlers = this.events[event];\r\n\r\n        if (is.array(handlers)) {\r\n            handlers.forEach(handler => {\r\n                if (is.function(handler)) {\r\n                    handler.apply(this, args);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add event listeners\r\n     * @param {string} event - Event type\r\n     * @param {function} callback - Callback for when event occurs\r\n     * @return {Ads}\r\n     */\r\n    on(event, callback) {\r\n        if (!is.array(this.events[event])) {\r\n            this.events[event] = [];\r\n        }\r\n\r\n        this.events[event].push(callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\r\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\r\n     * advertisement is playing, or when a user action is required to start, then we clear the\r\n     * timer on ad ready\r\n     * @param {number} time\r\n     * @param {string} from\r\n     */\r\n    startSafetyTimer(time, from) {\r\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\r\n\r\n        this.safetyTimer = setTimeout(() => {\r\n            this.cancel();\r\n            this.clearSafetyTimer('startSafetyTimer()');\r\n        }, time);\r\n    }\r\n\r\n    /**\r\n     * Clear our safety timer(s)\r\n     * @param {string} from\r\n     */\r\n    clearSafetyTimer(from) {\r\n        if (!is.nullOrUndefined(this.safetyTimer)) {\r\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\r\n\r\n            clearTimeout(this.safetyTimer);\r\n            this.safetyTimer = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Ads;\r\n","// ==========================================================================\r\n// Plyr source update\r\n// ==========================================================================\r\n\r\nimport { providers } from './config/types';\r\nimport html5 from './html5';\r\nimport media from './media';\r\nimport support from './support';\r\nimport ui from './ui';\r\nimport { createElement, insertElement, removeElement } from './utils/elements';\r\nimport is from './utils/is';\r\nimport { getDeep } from './utils/objects';\r\n\r\nconst source = {\r\n    // Add elements to HTML5 media (source, tracks, etc)\r\n    insertElements(type, attributes) {\r\n        if (is.string(attributes)) {\r\n            insertElement(type, this.media, {\r\n                src: attributes,\r\n            });\r\n        } else if (is.array(attributes)) {\r\n            attributes.forEach(attribute => {\r\n                insertElement(type, this.media, attribute);\r\n            });\r\n        }\r\n    },\r\n\r\n    // Update source\r\n    // Sources are not checked for support so be careful\r\n    change(input) {\r\n        if (!getDeep(input, 'sources.length')) {\r\n            this.debug.warn('Invalid source format');\r\n            return;\r\n        }\r\n\r\n        // Cancel current network requests\r\n        html5.cancelRequests.call(this);\r\n\r\n        // Destroy instance and re-setup\r\n        this.destroy.call(\r\n            this,\r\n            () => {\r\n                // Reset quality options\r\n                this.options.quality = [];\r\n\r\n                // Remove elements\r\n                removeElement(this.media);\r\n                this.media = null;\r\n\r\n                // Reset class name\r\n                if (is.element(this.elements.container)) {\r\n                    this.elements.container.removeAttribute('class');\r\n                }\r\n\r\n                // Set the type and provider\r\n                const { sources, type } = input;\r\n                const [{ provider = providers.html5, src }] = sources;\r\n                const tagName = provider === 'html5' ? type : 'div';\r\n                const attributes = provider === 'html5' ? {} : { src };\r\n\r\n                Object.assign(this, {\r\n                    provider,\r\n                    type,\r\n                    // Check for support\r\n                    supported: support.check(type, provider, this.config.playsinline),\r\n                    // Create new element\r\n                    media: createElement(tagName, attributes),\r\n                });\r\n\r\n                // Inject the new element\r\n                this.elements.container.appendChild(this.media);\r\n\r\n                // Autoplay the new source?\r\n                if (is.boolean(input.autoplay)) {\r\n                    this.config.autoplay = input.autoplay;\r\n                }\r\n\r\n                // Set attributes for audio and video\r\n                if (this.isHTML5) {\r\n                    if (this.config.crossorigin) {\r\n                        this.media.setAttribute('crossorigin', '');\r\n                    }\r\n                    if (this.config.autoplay) {\r\n                        this.media.setAttribute('autoplay', '');\r\n                    }\r\n                    if (!is.empty(input.poster)) {\r\n                        this.poster = input.poster;\r\n                    }\r\n                    if (this.config.loop.active) {\r\n                        this.media.setAttribute('loop', '');\r\n                    }\r\n                    if (this.config.muted) {\r\n                        this.media.setAttribute('muted', '');\r\n                    }\r\n                    if (this.config.playsinline) {\r\n                        this.media.setAttribute('playsinline', '');\r\n                    }\r\n                }\r\n\r\n                // Restore class hook\r\n                ui.addStyleHook.call(this);\r\n\r\n                // Set new sources for html5\r\n                if (this.isHTML5) {\r\n                    source.insertElements.call(this, 'source', sources);\r\n                }\r\n\r\n                // Set video title\r\n                this.config.title = input.title;\r\n\r\n                // Set up from scratch\r\n                media.setup.call(this);\r\n\r\n                // HTML5 stuff\r\n                if (this.isHTML5) {\r\n                    // Setup captions\r\n                    if ('tracks' in input) {\r\n                        source.insertElements.call(this, 'track', input.tracks);\r\n                    }\r\n\r\n                    // Load HTML5 sources\r\n                    this.media.load();\r\n                }\r\n\r\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\r\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\r\n                    // Setup interface\r\n                    ui.build.call(this);\r\n                }\r\n\r\n                // Update the fullscreen support\r\n                this.fullscreen.update();\r\n            },\r\n            true,\r\n        );\r\n    },\r\n};\r\n\r\nexport default source;\r\n","// ==========================================================================\r\n// Plyr\r\n// plyr.js v3.4.5\r\n// https://github.com/sampotts/plyr\r\n// License: The MIT License (MIT)\r\n// ==========================================================================\r\n\r\nimport captions from './captions';\r\nimport defaults from './config/defaults';\r\nimport { getProviderByUrl, providers, types } from './config/types';\r\nimport Console from './console';\r\nimport controls from './controls';\r\nimport Fullscreen from './fullscreen';\r\nimport Listeners from './listeners';\r\nimport media from './media';\r\nimport Ads from './plugins/ads';\r\nimport source from './source';\r\nimport Storage from './storage';\r\nimport support from './support';\r\nimport ui from './ui';\r\nimport { closest } from './utils/arrays';\r\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\r\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\r\nimport is from './utils/is';\r\nimport loadSprite from './utils/loadSprite';\r\nimport { cloneDeep, extend } from './utils/objects';\r\nimport { parseUrl } from './utils/urls';\r\n\r\n// Private properties\r\n// TODO: Use a WeakMap for private globals\r\n// const globals = new WeakMap();\r\n\r\n// Plyr instance\r\nclass Plyr {\r\n    constructor(target, options) {\r\n        this.timers = {};\r\n\r\n        // State\r\n        this.ready = false;\r\n        this.loading = false;\r\n        this.failed = false;\r\n\r\n        // Touch device\r\n        this.touch = support.touch;\r\n\r\n        // Set the media element\r\n        this.media = target;\r\n\r\n        // String selector passed\r\n        if (is.string(this.media)) {\r\n            this.media = document.querySelectorAll(this.media);\r\n        }\r\n\r\n        // jQuery, NodeList or Array passed, use first element\r\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\r\n            // eslint-disable-next-line\r\n            this.media = this.media[0];\r\n        }\r\n\r\n        // Set config\r\n        this.config = extend(\r\n            {},\r\n            defaults,\r\n            Plyr.defaults,\r\n            options || {},\r\n            (() => {\r\n                try {\r\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\r\n                } catch (e) {\r\n                    return {};\r\n                }\r\n            })(),\r\n        );\r\n\r\n        // Elements cache\r\n        this.elements = {\r\n            container: null,\r\n            captions: null,\r\n            buttons: {},\r\n            display: {},\r\n            progress: {},\r\n            inputs: {},\r\n            settings: {\r\n                popup: null,\r\n                menu: null,\r\n                panels: {},\r\n                buttons: {},\r\n            },\r\n        };\r\n\r\n        // Captions\r\n        this.captions = {\r\n            active: null,\r\n            currentTrack: -1,\r\n            meta: new WeakMap(),\r\n        };\r\n\r\n        // Fullscreen\r\n        this.fullscreen = {\r\n            active: false,\r\n        };\r\n\r\n        // Options\r\n        this.options = {\r\n            speed: [],\r\n            quality: [],\r\n        };\r\n\r\n        // Debugging\r\n        // TODO: move to globals\r\n        this.debug = new Console(this.config.debug);\r\n\r\n        // Log config options and support\r\n        this.debug.log('Config', this.config);\r\n        this.debug.log('Support', support);\r\n\r\n        // We need an element to setup\r\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\r\n            this.debug.error('Setup failed: no suitable element passed');\r\n            return;\r\n        }\r\n\r\n        // Bail if the element is initialized\r\n        if (this.media.plyr) {\r\n            this.debug.warn('Target already setup');\r\n            return;\r\n        }\r\n\r\n        // Bail if not enabled\r\n        if (!this.config.enabled) {\r\n            this.debug.error('Setup failed: disabled by config');\r\n            return;\r\n        }\r\n\r\n        // Bail if disabled or no basic support\r\n        // You may want to disable certain UAs etc\r\n        if (!support.check().api) {\r\n            this.debug.error('Setup failed: no support');\r\n            return;\r\n        }\r\n\r\n        // Cache original element state for .destroy()\r\n        const clone = this.media.cloneNode(true);\r\n        clone.autoplay = false;\r\n        this.elements.original = clone;\r\n\r\n        // Set media type based on tag or data attribute\r\n        // Supported: video, audio, vimeo, youtube\r\n        const type = this.media.tagName.toLowerCase();\r\n\r\n        // Embed properties\r\n        let iframe = null;\r\n        let url = null;\r\n\r\n        // Different setup based on type\r\n        switch (type) {\r\n            case 'div':\r\n                // Find the frame\r\n                iframe = this.media.querySelector('iframe');\r\n\r\n                // <iframe> type\r\n                if (is.element(iframe)) {\r\n                    // Detect provider\r\n                    url = parseUrl(iframe.getAttribute('src'));\r\n                    this.provider = getProviderByUrl(url.toString());\r\n\r\n                    // Rework elements\r\n                    this.elements.container = this.media;\r\n                    this.media = iframe;\r\n\r\n                    // Reset classname\r\n                    this.elements.container.className = '';\r\n\r\n                    // Get attributes from URL and set config\r\n                    if (url.search.length) {\r\n                        const truthy = ['1', 'true'];\r\n\r\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\r\n                            this.config.autoplay = true;\r\n                        }\r\n                        if (truthy.includes(url.searchParams.get('loop'))) {\r\n                            this.config.loop.active = true;\r\n                        }\r\n\r\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\r\n                        // YouTube requires the playsinline in the URL\r\n                        if (this.isYouTube) {\r\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\r\n                            this.config.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\r\n                        } else {\r\n                            this.config.playsinline = true;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // <div> with attributes\r\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\r\n\r\n                    // Remove attribute\r\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\r\n                }\r\n\r\n                // Unsupported or missing provider\r\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\r\n                    this.debug.error('Setup failed: Invalid provider');\r\n                    return;\r\n                }\r\n\r\n                // Audio will come later for external providers\r\n                this.type = types.video;\r\n\r\n                break;\r\n\r\n            case 'video':\r\n            case 'audio':\r\n                this.type = type;\r\n                this.provider = providers.html5;\r\n\r\n                // Get config from attributes\r\n                if (this.media.hasAttribute('crossorigin')) {\r\n                    this.config.crossorigin = true;\r\n                }\r\n                if (this.media.hasAttribute('autoplay')) {\r\n                    this.config.autoplay = true;\r\n                }\r\n                if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\r\n                    this.config.playsinline = true;\r\n                }\r\n                if (this.media.hasAttribute('muted')) {\r\n                    this.config.muted = true;\r\n                }\r\n                if (this.media.hasAttribute('loop')) {\r\n                    this.config.loop.active = true;\r\n                }\r\n\r\n                break;\r\n\r\n            default:\r\n                this.debug.error('Setup failed: unsupported type');\r\n                return;\r\n        }\r\n\r\n        // Check for support again but with type\r\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\r\n\r\n        // If no support for even API, bail\r\n        if (!this.supported.api) {\r\n            this.debug.error('Setup failed: no support');\r\n            return;\r\n        }\r\n\r\n        this.eventListeners = [];\r\n\r\n        // Create listeners\r\n        this.listeners = new Listeners(this);\r\n\r\n        // Setup local storage for user settings\r\n        this.storage = new Storage(this);\r\n\r\n        // Store reference\r\n        this.media.plyr = this;\r\n\r\n        // Wrap media\r\n        if (!is.element(this.elements.container)) {\r\n            this.elements.container = createElement('div');\r\n            wrap(this.media, this.elements.container);\r\n        }\r\n\r\n        // Add style hook\r\n        ui.addStyleHook.call(this);\r\n\r\n        // Setup media\r\n        media.setup.call(this);\r\n\r\n        // Listen for events if debugging\r\n        if (this.config.debug) {\r\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\r\n                this.debug.log(`event: ${event.type}`);\r\n            });\r\n        }\r\n\r\n        // Setup interface\r\n        // If embed but not fully supported, build interface now to avoid flash of controls\r\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\r\n            ui.build.call(this);\r\n        }\r\n\r\n        // Container listeners\r\n        this.listeners.container();\r\n\r\n        // Global listeners\r\n        this.listeners.global();\r\n\r\n        // Setup fullscreen\r\n        this.fullscreen = new Fullscreen(this);\r\n\r\n        // Setup ads if provided\r\n        if (this.config.ads.enabled) {\r\n            this.ads = new Ads(this);\r\n        }\r\n\r\n        // Autoplay if required\r\n        if (this.config.autoplay) {\r\n            this.play();\r\n        }\r\n\r\n        // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\r\n        this.lastSeekTime = 0;\r\n    }\r\n\r\n    // ---------------------------------------\r\n    // API\r\n    // ---------------------------------------\r\n\r\n    /**\r\n     * Types and provider helpers\r\n     */\r\n    get isHTML5() {\r\n        return Boolean(this.provider === providers.html5);\r\n    }\r\n\r\n    get isEmbed() {\r\n        return Boolean(this.isYouTube || this.isVimeo);\r\n    }\r\n\r\n    get isYouTube() {\r\n        return Boolean(this.provider === providers.youtube);\r\n    }\r\n\r\n    get isVimeo() {\r\n        return Boolean(this.provider === providers.vimeo);\r\n    }\r\n\r\n    get isVideo() {\r\n        return Boolean(this.type === types.video);\r\n    }\r\n\r\n    get isAudio() {\r\n        return Boolean(this.type === types.audio);\r\n    }\r\n\r\n    /**\r\n     * Play the media, or play the advertisement (if they are not blocked)\r\n     */\r\n    play() {\r\n        if (!is.function(this.media.play)) {\r\n            return null;\r\n        }\r\n\r\n        // Return the promise (for HTML5)\r\n        return this.media.play();\r\n    }\r\n\r\n    /**\r\n     * Pause the media\r\n     */\r\n    pause() {\r\n        if (!this.playing || !is.function(this.media.pause)) {\r\n            return;\r\n        }\r\n\r\n        this.media.pause();\r\n    }\r\n\r\n    /**\r\n     * Get playing state\r\n     */\r\n    get playing() {\r\n        return Boolean(this.ready && !this.paused && !this.ended);\r\n    }\r\n\r\n    /**\r\n     * Get paused state\r\n     */\r\n    get paused() {\r\n        return Boolean(this.media.paused);\r\n    }\r\n\r\n    /**\r\n     * Get stopped state\r\n     */\r\n    get stopped() {\r\n        return Boolean(this.paused && this.currentTime === 0);\r\n    }\r\n\r\n    /**\r\n     * Get ended state\r\n     */\r\n    get ended() {\r\n        return Boolean(this.media.ended);\r\n    }\r\n\r\n    /**\r\n     * Toggle playback based on current status\r\n     * @param {boolean} input\r\n     */\r\n    togglePlay(input) {\r\n        // Toggle based on current state if nothing passed\r\n        const toggle = is.boolean(input) ? input : !this.playing;\r\n\r\n        if (toggle) {\r\n            this.play();\r\n        } else {\r\n            this.pause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stop playback\r\n     */\r\n    stop() {\r\n        if (this.isHTML5) {\r\n            this.pause();\r\n            this.restart();\r\n        } else if (is.function(this.media.stop)) {\r\n            this.media.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Restart playback\r\n     */\r\n    restart() {\r\n        this.currentTime = 0;\r\n    }\r\n\r\n    /**\r\n     * Rewind\r\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\r\n     */\r\n    rewind(seekTime) {\r\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\r\n    }\r\n\r\n    /**\r\n     * Fast forward\r\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\r\n     */\r\n    forward(seekTime) {\r\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\r\n    }\r\n\r\n    /**\r\n     * Seek to a time\r\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\r\n     */\r\n    set currentTime(input) {\r\n        // Bail if media duration isn't available yet\r\n        if (!this.duration) {\r\n            return;\r\n        }\r\n\r\n        // Validate input\r\n        const inputIsValid = is.number(input) && input > 0;\r\n\r\n        // Set\r\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\r\n\r\n        // Logging\r\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\r\n    }\r\n\r\n    /**\r\n     * Get current time\r\n     */\r\n    get currentTime() {\r\n        return Number(this.media.currentTime);\r\n    }\r\n\r\n    /**\r\n     * Get buffered\r\n     */\r\n    get buffered() {\r\n        const { buffered } = this.media;\r\n\r\n        // YouTube / Vimeo return a float between 0-1\r\n        if (is.number(buffered)) {\r\n            return buffered;\r\n        }\r\n\r\n        // HTML5\r\n        // TODO: Handle buffered chunks of the media\r\n        // (i.e. seek to another section buffers only that section)\r\n        if (buffered && buffered.length && this.duration > 0) {\r\n            return buffered.end(0) / this.duration;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Get seeking status\r\n     */\r\n    get seeking() {\r\n        return Boolean(this.media.seeking);\r\n    }\r\n\r\n    /**\r\n     * Get the duration of the current media\r\n     */\r\n    get duration() {\r\n        // Faux duration set via config\r\n        const fauxDuration = parseFloat(this.config.duration);\r\n\r\n        // Media duration can be NaN or Infinity before the media has loaded\r\n        const realDuration = (this.media || {}).duration;\r\n        const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\r\n\r\n        // If config duration is funky, use regular duration\r\n        return fauxDuration || duration;\r\n    }\r\n\r\n    /**\r\n     * Set the player volume\r\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\r\n     */\r\n    set volume(value) {\r\n        let volume = value;\r\n        const max = 1;\r\n        const min = 0;\r\n\r\n        if (is.string(volume)) {\r\n            volume = Number(volume);\r\n        }\r\n\r\n        // Load volume from storage if no value specified\r\n        if (!is.number(volume)) {\r\n            volume = this.storage.get('volume');\r\n        }\r\n\r\n        // Use config if all else fails\r\n        if (!is.number(volume)) {\r\n            ({ volume } = this.config);\r\n        }\r\n\r\n        // Maximum is volumeMax\r\n        if (volume > max) {\r\n            volume = max;\r\n        }\r\n        // Minimum is volumeMin\r\n        if (volume < min) {\r\n            volume = min;\r\n        }\r\n\r\n        // Update config\r\n        this.config.volume = volume;\r\n\r\n        // Set the player volume\r\n        this.media.volume = volume;\r\n\r\n        // If muted, and we're increasing volume manually, reset muted state\r\n        if (!is.empty(value) && this.muted && volume > 0) {\r\n            this.muted = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the current player volume\r\n     */\r\n    get volume() {\r\n        return Number(this.media.volume);\r\n    }\r\n\r\n    /**\r\n     * Increase volume\r\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\r\n     */\r\n    increaseVolume(step) {\r\n        const volume = this.media.muted ? 0 : this.volume;\r\n        this.volume = volume + (is.number(step) ? step : 0);\r\n    }\r\n\r\n    /**\r\n     * Decrease volume\r\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\r\n     */\r\n    decreaseVolume(step) {\r\n        this.increaseVolume(-step);\r\n    }\r\n\r\n    /**\r\n     * Set muted state\r\n     * @param {boolean} mute\r\n     */\r\n    set muted(mute) {\r\n        let toggle = mute;\r\n\r\n        // Load muted state from storage\r\n        if (!is.boolean(toggle)) {\r\n            toggle = this.storage.get('muted');\r\n        }\r\n\r\n        // Use config if all else fails\r\n        if (!is.boolean(toggle)) {\r\n            toggle = this.config.muted;\r\n        }\r\n\r\n        // Update config\r\n        this.config.muted = toggle;\r\n\r\n        // Set mute on the player\r\n        this.media.muted = toggle;\r\n    }\r\n\r\n    /**\r\n     * Get current muted state\r\n     */\r\n    get muted() {\r\n        return Boolean(this.media.muted);\r\n    }\r\n\r\n    /**\r\n     * Check if the media has audio\r\n     */\r\n    get hasAudio() {\r\n        // Assume yes for all non HTML5 (as we can't tell...)\r\n        if (!this.isHTML5) {\r\n            return true;\r\n        }\r\n\r\n        if (this.isAudio) {\r\n            return true;\r\n        }\r\n\r\n        // Get audio tracks\r\n        return (\r\n            Boolean(this.media.mozHasAudio) ||\r\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\r\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Set playback speed\r\n     * @param {number} speed - the speed of playback (0.5-2.0)\r\n     */\r\n    set speed(input) {\r\n        let speed = null;\r\n\r\n        if (is.number(input)) {\r\n            speed = input;\r\n        }\r\n\r\n        if (!is.number(speed)) {\r\n            speed = this.storage.get('speed');\r\n        }\r\n\r\n        if (!is.number(speed)) {\r\n            speed = this.config.speed.selected;\r\n        }\r\n\r\n        // Set min/max\r\n        if (speed < 0.1) {\r\n            speed = 0.1;\r\n        }\r\n        if (speed > 2.0) {\r\n            speed = 2.0;\r\n        }\r\n\r\n        if (!this.config.speed.options.includes(speed)) {\r\n            this.debug.warn(`Unsupported speed (${speed})`);\r\n            return;\r\n        }\r\n\r\n        // Update config\r\n        this.config.speed.selected = speed;\r\n\r\n        // Set media speed\r\n        this.media.playbackRate = speed;\r\n    }\r\n\r\n    /**\r\n     * Get current playback speed\r\n     */\r\n    get speed() {\r\n        return Number(this.media.playbackRate);\r\n    }\r\n\r\n    /**\r\n     * Set playback quality\r\n     * Currently HTML5 & YouTube only\r\n     * @param {number} input - Quality level\r\n     */\r\n    set quality(input) {\r\n        const config = this.config.quality;\r\n        const options = this.options.quality;\r\n\r\n        if (!options.length) {\r\n            return;\r\n        }\r\n\r\n        let quality = [\r\n            !is.empty(input) && Number(input),\r\n            this.storage.get('quality'),\r\n            config.selected,\r\n            config.default,\r\n        ].find(is.number);\r\n\r\n        if (!options.includes(quality)) {\r\n            const value = closest(options, quality);\r\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\r\n            quality = value;\r\n        }\r\n\r\n        // Update config\r\n        config.selected = quality;\r\n\r\n        // Set quality\r\n        this.media.quality = quality;\r\n    }\r\n\r\n    /**\r\n     * Get current quality level\r\n     */\r\n    get quality() {\r\n        return this.media.quality;\r\n    }\r\n\r\n    /**\r\n     * Toggle loop\r\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\r\n     * @param {boolean} input - Whether to loop or not\r\n     */\r\n    set loop(input) {\r\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\r\n        this.config.loop.active = toggle;\r\n        this.media.loop = toggle;\r\n\r\n        // Set default to be a true toggle\r\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\r\n\r\n        switch (type) {\r\n            case 'start':\r\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\r\n                    this.config.loop.end = null;\r\n                }\r\n                this.config.loop.start = this.currentTime;\r\n                // this.config.loop.indicator.start = this.elements.display.played.value;\r\n                break;\r\n\r\n            case 'end':\r\n                if (this.config.loop.start >= this.currentTime) {\r\n                    return this;\r\n                }\r\n                this.config.loop.end = this.currentTime;\r\n                // this.config.loop.indicator.end = this.elements.display.played.value;\r\n                break;\r\n\r\n            case 'all':\r\n                this.config.loop.start = 0;\r\n                this.config.loop.end = this.duration - 2;\r\n                this.config.loop.indicator.start = 0;\r\n                this.config.loop.indicator.end = 100;\r\n                break;\r\n\r\n            case 'toggle':\r\n                if (this.config.loop.active) {\r\n                    this.config.loop.start = 0;\r\n                    this.config.loop.end = null;\r\n                } else {\r\n                    this.config.loop.start = 0;\r\n                    this.config.loop.end = this.duration - 2;\r\n                }\r\n                break;\r\n\r\n            default:\r\n                this.config.loop.start = 0;\r\n                this.config.loop.end = null;\r\n                break;\r\n        } */\r\n    }\r\n\r\n    /**\r\n     * Get current loop state\r\n     */\r\n    get loop() {\r\n        return Boolean(this.media.loop);\r\n    }\r\n\r\n    /**\r\n     * Set new media source\r\n     * @param {object} input - The new source object (see docs)\r\n     */\r\n    set source(input) {\r\n        source.change.call(this, input);\r\n    }\r\n\r\n    /**\r\n     * Get current source\r\n     */\r\n    get source() {\r\n        return this.media.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * Get a download URL (either source or custom)\r\n     */\r\n    get download() {\r\n        const { download } = this.config.urls;\r\n\r\n        return is.url(download) ? download : this.source;\r\n    }\r\n\r\n    /**\r\n     * Set the poster image for a video\r\n     * @param {input} - the URL for the new poster image\r\n     */\r\n    set poster(input) {\r\n        if (!this.isVideo) {\r\n            this.debug.warn('Poster can only be set for video');\r\n            return;\r\n        }\r\n\r\n        ui.setPoster.call(this, input, false).catch(() => {});\r\n    }\r\n\r\n    /**\r\n     * Get the current poster image\r\n     */\r\n    get poster() {\r\n        if (!this.isVideo) {\r\n            return null;\r\n        }\r\n\r\n        return this.media.getAttribute('poster');\r\n    }\r\n\r\n    /**\r\n     * Set the autoplay state\r\n     * @param {boolean} input - Whether to autoplay or not\r\n     */\r\n    set autoplay(input) {\r\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\r\n        this.config.autoplay = toggle;\r\n    }\r\n\r\n    /**\r\n     * Get the current autoplay state\r\n     */\r\n    get autoplay() {\r\n        return Boolean(this.config.autoplay);\r\n    }\r\n\r\n    /**\r\n     * Toggle captions\r\n     * @param {boolean} input - Whether to enable captions\r\n     */\r\n    toggleCaptions(input) {\r\n        captions.toggle.call(this, input, false);\r\n    }\r\n\r\n    /**\r\n     * Set the caption track by index\r\n     * @param {number} - Caption index\r\n     */\r\n    set currentTrack(input) {\r\n        captions.set.call(this, input, false);\r\n    }\r\n\r\n    /**\r\n     * Get the current caption track index (-1 if disabled)\r\n     */\r\n    get currentTrack() {\r\n        const { toggled, currentTrack } = this.captions;\r\n        return toggled ? currentTrack : -1;\r\n    }\r\n\r\n    /**\r\n     * Set the wanted language for captions\r\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\r\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\r\n     */\r\n    set language(input) {\r\n        captions.setLanguage.call(this, input, false);\r\n    }\r\n\r\n    /**\r\n     * Get the current track's language\r\n     */\r\n    get language() {\r\n        return (captions.getCurrentTrack.call(this) || {}).language;\r\n    }\r\n\r\n    /**\r\n     * Toggle picture-in-picture playback on WebKit/MacOS\r\n     * TODO: update player with state, support, enabled\r\n     * TODO: detect outside changes\r\n     */\r\n    set pip(input) {\r\n        const states = {\r\n            pip: 'picture-in-picture',\r\n            inline: 'inline',\r\n        };\r\n\r\n        // Bail if no support\r\n        if (!support.pip) {\r\n            return;\r\n        }\r\n\r\n        // Toggle based on current state if not passed\r\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\r\n\r\n        // Toggle based on current state\r\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\r\n    }\r\n\r\n    /**\r\n     * Get the current picture-in-picture state\r\n     */\r\n    get pip() {\r\n        if (!support.pip) {\r\n            return null;\r\n        }\r\n\r\n        return this.media.webkitPresentationMode;\r\n    }\r\n\r\n    /**\r\n     * Trigger the airplay dialog\r\n     * TODO: update player with state, support, enabled\r\n     */\r\n    airplay() {\r\n        // Show dialog if supported\r\n        if (support.airplay) {\r\n            this.media.webkitShowPlaybackTargetPicker();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle the player controls\r\n     * @param {boolean} [toggle] - Whether to show the controls\r\n     */\r\n    toggleControls(toggle) {\r\n        // Don't toggle if missing UI support or if it's audio\r\n        if (this.supported.ui && !this.isAudio) {\r\n            // Get state before change\r\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\r\n\r\n            // Negate the argument if not undefined since adding the class to hides the controls\r\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\r\n\r\n            // Apply and get updated state\r\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\r\n\r\n            // Close menu\r\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\r\n                controls.toggleMenu.call(this, false);\r\n            }\r\n\r\n            // Trigger event on change\r\n            if (hiding !== isHidden) {\r\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\r\n                triggerEvent.call(this, this.media, eventName);\r\n            }\r\n\r\n            return !hiding;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Add event listeners\r\n     * @param {string} event - Event type\r\n     * @param {function} callback - Callback for when event occurs\r\n     */\r\n    on(event, callback) {\r\n        on.call(this, this.elements.container, event, callback);\r\n    }\r\n\r\n    /**\r\n     * Add event listeners once\r\n     * @param {string} event - Event type\r\n     * @param {function} callback - Callback for when event occurs\r\n     */\r\n    once(event, callback) {\r\n        once.call(this, this.elements.container, event, callback);\r\n    }\r\n\r\n    /**\r\n     * Remove event listeners\r\n     * @param {string} event - Event type\r\n     * @param {function} callback - Callback for when event occurs\r\n     */\r\n    off(event, callback) {\r\n        off(this.elements.container, event, callback);\r\n    }\r\n\r\n    /**\r\n     * Destroy an instance\r\n     * Event listeners are removed when elements are removed\r\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\r\n     * @param {function} callback - Callback for when destroy is complete\r\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\r\n     */\r\n    destroy(callback, soft = false) {\r\n        if (!this.ready) {\r\n            return;\r\n        }\r\n\r\n        const done = () => {\r\n            // Reset overflow (incase destroyed while in fullscreen)\r\n            document.body.style.overflow = '';\r\n\r\n            // GC for embed\r\n            this.embed = null;\r\n\r\n            // If it's a soft destroy, make minimal changes\r\n            if (soft) {\r\n                if (Object.keys(this.elements).length) {\r\n                    // Remove elements\r\n                    removeElement(this.elements.buttons.play);\r\n                    removeElement(this.elements.captions);\r\n                    removeElement(this.elements.controls);\r\n                    removeElement(this.elements.wrapper);\r\n\r\n                    // Clear for GC\r\n                    this.elements.buttons.play = null;\r\n                    this.elements.captions = null;\r\n                    this.elements.controls = null;\r\n                    this.elements.wrapper = null;\r\n                }\r\n\r\n                // Callback\r\n                if (is.function(callback)) {\r\n                    callback();\r\n                }\r\n            } else {\r\n                // Unbind listeners\r\n                unbindListeners.call(this);\r\n\r\n                // Replace the container with the original element provided\r\n                replaceElement(this.elements.original, this.elements.container);\r\n\r\n                // Event\r\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\r\n\r\n                // Callback\r\n                if (is.function(callback)) {\r\n                    callback.call(this.elements.original);\r\n                }\r\n\r\n                // Reset state\r\n                this.ready = false;\r\n\r\n                // Clear for garbage collection\r\n                setTimeout(() => {\r\n                    this.elements = null;\r\n                    this.media = null;\r\n                }, 200);\r\n            }\r\n        };\r\n\r\n        // Stop playback\r\n        this.stop();\r\n\r\n        // Provider specific stuff\r\n        if (this.isHTML5) {\r\n            // Clear timeout\r\n            clearTimeout(this.timers.loading);\r\n\r\n            // Restore native video controls\r\n            ui.toggleNativeControls.call(this, true);\r\n\r\n            // Clean up\r\n            done();\r\n        } else if (this.isYouTube) {\r\n            // Clear timers\r\n            clearInterval(this.timers.buffering);\r\n            clearInterval(this.timers.playing);\r\n\r\n            // Destroy YouTube API\r\n            if (this.embed !== null && is.function(this.embed.destroy)) {\r\n                this.embed.destroy();\r\n            }\r\n\r\n            // Clean up\r\n            done();\r\n        } else if (this.isVimeo) {\r\n            // Destroy Vimeo API\r\n            // then clean up (wait, to prevent postmessage errors)\r\n            if (this.embed !== null) {\r\n                this.embed.unload().then(done);\r\n            }\r\n\r\n            // Vimeo does not always return\r\n            setTimeout(done, 200);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check for support for a mime type (HTML5 only)\r\n     * @param {string} type - Mime type\r\n     */\r\n    supports(type) {\r\n        return support.mime.call(this, type);\r\n    }\r\n\r\n    /**\r\n     * Check for support\r\n     * @param {string} type - Player type (audio/video)\r\n     * @param {string} provider - Provider (html5/youtube/vimeo)\r\n     * @param {bool} inline - Where player has `playsinline` sttribute\r\n     */\r\n    static supported(type, provider, inline) {\r\n        return support.check(type, provider, inline);\r\n    }\r\n\r\n    /**\r\n     * Load an SVG sprite into the page\r\n     * @param {string} url - URL for the SVG sprite\r\n     * @param {string} [id] - Unique ID\r\n     */\r\n    static loadSprite(url, id) {\r\n        return loadSprite(url, id);\r\n    }\r\n\r\n    /**\r\n     * Setup multiple instances\r\n     * @param {*} selector\r\n     * @param {object} options\r\n     */\r\n    static setup(selector, options = {}) {\r\n        let targets = null;\r\n\r\n        if (is.string(selector)) {\r\n            targets = Array.from(document.querySelectorAll(selector));\r\n        } else if (is.nodeList(selector)) {\r\n            targets = Array.from(selector);\r\n        } else if (is.array(selector)) {\r\n            targets = selector.filter(is.element);\r\n        }\r\n\r\n        if (is.empty(targets)) {\r\n            return null;\r\n        }\r\n\r\n        return targets.map(t => new Plyr(t, options));\r\n    }\r\n}\r\n\r\nPlyr.defaults = cloneDeep(defaults);\r\n\r\nexport default Plyr;\r\n"]}